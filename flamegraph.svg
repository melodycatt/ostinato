<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1174" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1157.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="1157.00"> </text><svg id="frames" x="10" width="1180" total_samples="10647"><g><title>libdyld.dylib`dyld4::LibSystemHelpers::getenv (2 samples, 0.02%)</title><rect x="0.0000%" y="1093" width="0.0188%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1103.50"></text></g><g><title>libsystem_c.dylib`exit (2 samples, 0.02%)</title><rect x="0.0000%" y="1077" width="0.0188%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1087.50"></text></g><g><title>libsystem_c.dylib`__cxa_finalize_ranges (2 samples, 0.02%)</title><rect x="0.0000%" y="1061" width="0.0188%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="1071.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="0.0188%" y="981" width="0.0188%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="2"/><text x="0.2688%" y="991.50"></text></g><g><title>ostinato`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::pipeline_layout_drop (2 samples, 0.02%)</title><rect x="0.0188%" y="965" width="0.0188%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="2"/><text x="0.2688%" y="975.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="0.0188%" y="949" width="0.0188%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="2"/><text x="0.2688%" y="959.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="0.0188%" y="933" width="0.0188%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="2"/><text x="0.2688%" y="943.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="0.0188%" y="917" width="0.0188%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="2"/><text x="0.2688%" y="927.50"></text></g><g><title>ostinato`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="0.0188%" y="997" width="0.0282%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="3"/><text x="0.2688%" y="1007.50"></text></g><g><title>AppKit`-[NSView _setWindow:] (2 samples, 0.02%)</title><rect x="0.0470%" y="901" width="0.0188%" height="15" fill="rgb(220,122,19)" fg:x="5" fg:w="2"/><text x="0.2970%" y="911.50"></text></g><g><title>AppKit`__21-[NSView _setWindow:]_block_invoke.146 (2 samples, 0.02%)</title><rect x="0.0470%" y="885" width="0.0188%" height="15" fill="rgb(250,228,42)" fg:x="5" fg:w="2"/><text x="0.2970%" y="895.50"></text></g><g><title>AppKit`-[NSView _setWindow:] (2 samples, 0.02%)</title><rect x="0.0470%" y="869" width="0.0188%" height="15" fill="rgb(240,193,28)" fg:x="5" fg:w="2"/><text x="0.2970%" y="879.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (2 samples, 0.02%)</title><rect x="0.0751%" y="613" width="0.0188%" height="15" fill="rgb(216,20,37)" fg:x="8" fg:w="2"/><text x="0.3251%" y="623.50"></text></g><g><title>QuartzCore`-[CALayer addAnimation:forKey:] (4 samples, 0.04%)</title><rect x="0.0751%" y="693" width="0.0376%" height="15" fill="rgb(206,188,39)" fg:x="8" fg:w="4"/><text x="0.3251%" y="703.50"></text></g><g><title>QuartzCore`-[CAAnimation delegate] (4 samples, 0.04%)</title><rect x="0.0751%" y="677" width="0.0376%" height="15" fill="rgb(217,207,13)" fg:x="8" fg:w="4"/><text x="0.3251%" y="687.50"></text></g><g><title>QuartzCore`CAObject_defaultValueForAtom (4 samples, 0.04%)</title><rect x="0.0751%" y="661" width="0.0376%" height="15" fill="rgb(231,73,38)" fg:x="8" fg:w="4"/><text x="0.3251%" y="671.50"></text></g><g><title>QuartzCore`classDescription(objc_class*) (4 samples, 0.04%)</title><rect x="0.0751%" y="645" width="0.0376%" height="15" fill="rgb(225,20,46)" fg:x="8" fg:w="4"/><text x="0.3251%" y="655.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (4 samples, 0.04%)</title><rect x="0.0751%" y="629" width="0.0376%" height="15" fill="rgb(210,31,41)" fg:x="8" fg:w="4"/><text x="0.3251%" y="639.50"></text></g><g><title>Foundation`NSKVODeallocate (5 samples, 0.05%)</title><rect x="0.0751%" y="901" width="0.0470%" height="15" fill="rgb(221,200,47)" fg:x="8" fg:w="5"/><text x="0.3251%" y="911.50"></text></g><g><title>Foundation`_NSKVOPerformWithDeallocatingObservable (5 samples, 0.05%)</title><rect x="0.0751%" y="885" width="0.0470%" height="15" fill="rgb(226,26,5)" fg:x="8" fg:w="5"/><text x="0.3251%" y="895.50"></text></g><g><title>AppKit`-[NSThemeFrame dealloc] (5 samples, 0.05%)</title><rect x="0.0751%" y="869" width="0.0470%" height="15" fill="rgb(249,33,26)" fg:x="8" fg:w="5"/><text x="0.3251%" y="879.50"></text></g><g><title>AppKit`-[NSTitledFrame dealloc] (5 samples, 0.05%)</title><rect x="0.0751%" y="853" width="0.0470%" height="15" fill="rgb(235,183,28)" fg:x="8" fg:w="5"/><text x="0.3251%" y="863.50"></text></g><g><title>AppKit`-[NSFrameView dealloc] (5 samples, 0.05%)</title><rect x="0.0751%" y="837" width="0.0470%" height="15" fill="rgb(221,5,38)" fg:x="8" fg:w="5"/><text x="0.3251%" y="847.50"></text></g><g><title>AppKit`-[NSView dealloc] (5 samples, 0.05%)</title><rect x="0.0751%" y="821" width="0.0470%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="5"/><text x="0.3251%" y="831.50"></text></g><g><title>AppKit`-[NSView _finalize] (5 samples, 0.05%)</title><rect x="0.0751%" y="805" width="0.0470%" height="15" fill="rgb(241,131,45)" fg:x="8" fg:w="5"/><text x="0.3251%" y="815.50"></text></g><g><title>AppKit`-[NSView removeFromSuperviewWithoutNeedingDisplay] (5 samples, 0.05%)</title><rect x="0.0751%" y="789" width="0.0470%" height="15" fill="rgb(249,31,29)" fg:x="8" fg:w="5"/><text x="0.3251%" y="799.50"></text></g><g><title>AppKit`-[NSView removeFromSuperview] (5 samples, 0.05%)</title><rect x="0.0751%" y="773" width="0.0470%" height="15" fill="rgb(225,111,53)" fg:x="8" fg:w="5"/><text x="0.3251%" y="783.50"></text></g><g><title>AppKit`-[NSView _setSuperview:] (5 samples, 0.05%)</title><rect x="0.0751%" y="757" width="0.0470%" height="15" fill="rgb(238,160,17)" fg:x="8" fg:w="5"/><text x="0.3251%" y="767.50"></text></g><g><title>AppKit`-[NSView _removeLayerFromSuperlayer] (5 samples, 0.05%)</title><rect x="0.0751%" y="741" width="0.0470%" height="15" fill="rgb(214,148,48)" fg:x="8" fg:w="5"/><text x="0.3251%" y="751.50"></text></g><g><title>QuartzCore`CA::Layer::remove_from_superlayer (5 samples, 0.05%)</title><rect x="0.0751%" y="725" width="0.0470%" height="15" fill="rgb(232,36,49)" fg:x="8" fg:w="5"/><text x="0.3251%" y="735.50"></text></g><g><title>QuartzCore`CA::Layer::remove_sublayer (5 samples, 0.05%)</title><rect x="0.0751%" y="709" width="0.0470%" height="15" fill="rgb(209,103,24)" fg:x="8" fg:w="5"/><text x="0.3251%" y="719.50"></text></g><g><title>Foundation`NSKVODeallocate (9 samples, 0.08%)</title><rect x="0.0470%" y="949" width="0.0845%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="9"/><text x="0.2970%" y="959.50"></text></g><g><title>Foundation`_NSKVOPerformWithDeallocatingObservable (9 samples, 0.08%)</title><rect x="0.0470%" y="933" width="0.0845%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="9"/><text x="0.2970%" y="943.50"></text></g><g><title>AppKit`-[NSWindow dealloc] (9 samples, 0.08%)</title><rect x="0.0470%" y="917" width="0.0845%" height="15" fill="rgb(254,191,54)" fg:x="5" fg:w="9"/><text x="0.2970%" y="927.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;core::option::Option&lt;ostinato::State&gt;&gt; (10 samples, 0.09%)</title><rect x="0.0470%" y="997" width="0.0939%" height="15" fill="rgb(241,83,37)" fg:x="5" fg:w="10"/><text x="0.2970%" y="1007.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (10 samples, 0.09%)</title><rect x="0.0470%" y="981" width="0.0939%" height="15" fill="rgb(233,36,39)" fg:x="5" fg:w="10"/><text x="0.2970%" y="991.50"></text></g><g><title>ostinato`objc2::__macro_helpers::declared_ivars::dealloc (10 samples, 0.09%)</title><rect x="0.0470%" y="965" width="0.0939%" height="15" fill="rgb(226,3,54)" fg:x="5" fg:w="10"/><text x="0.2970%" y="975.50"></text></g><g><title>AppKit`-[NSApplication _disableSuddenTermination] (2 samples, 0.02%)</title><rect x="0.1691%" y="949" width="0.0188%" height="15" fill="rgb(245,192,40)" fg:x="18" fg:w="2"/><text x="0.4191%" y="959.50"></text></g><g><title>HIToolbox`_HIDisableSuddenTerminationForSendEvent (2 samples, 0.02%)</title><rect x="0.1691%" y="933" width="0.0188%" height="15" fill="rgb(238,167,29)" fg:x="18" fg:w="2"/><text x="0.4191%" y="943.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _setMenuBarObscured:] (4 samples, 0.04%)</title><rect x="0.2160%" y="901" width="0.0376%" height="15" fill="rgb(232,182,51)" fg:x="23" fg:w="4"/><text x="0.4660%" y="911.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _updateMenuBarObscured:] (4 samples, 0.04%)</title><rect x="0.2160%" y="885" width="0.0376%" height="15" fill="rgb(231,60,39)" fg:x="23" fg:w="4"/><text x="0.4660%" y="895.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _showMenuBarWithAnimation:postingEvent:orderWindow:forAutoShow:noteVisibility:] (4 samples, 0.04%)</title><rect x="0.2160%" y="869" width="0.0376%" height="15" fill="rgb(208,69,12)" fg:x="23" fg:w="4"/><text x="0.4660%" y="879.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _setBoundsAndUpdateResolution] (4 samples, 0.04%)</title><rect x="0.2160%" y="853" width="0.0376%" height="15" fill="rgb(235,93,37)" fg:x="23" fg:w="4"/><text x="0.4660%" y="863.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _forEachWindowDo:withBlock:] (3 samples, 0.03%)</title><rect x="0.2254%" y="837" width="0.0282%" height="15" fill="rgb(213,116,39)" fg:x="24" fg:w="3"/><text x="0.4754%" y="847.50"></text></g><g><title>AppKit`-[NSApplication _handleActivatedEvent:] (5 samples, 0.05%)</title><rect x="0.2160%" y="917" width="0.0470%" height="15" fill="rgb(222,207,29)" fg:x="23" fg:w="5"/><text x="0.4660%" y="927.50"></text></g><g><title>AppKit`-[NSApplication _handleDeactivateEvent:] (2 samples, 0.02%)</title><rect x="0.2630%" y="917" width="0.0188%" height="15" fill="rgb(206,96,30)" fg:x="28" fg:w="2"/><text x="0.5130%" y="927.50"></text></g><g><title>AppKit`-[NSApplication setWindowsNeedUpdate:] (2 samples, 0.02%)</title><rect x="0.2818%" y="917" width="0.0188%" height="15" fill="rgb(218,138,4)" fg:x="30" fg:w="2"/><text x="0.5318%" y="927.50"></text></g><g><title>CoreFoundation`CFRunLoopAddObserver (2 samples, 0.02%)</title><rect x="0.2818%" y="901" width="0.0188%" height="15" fill="rgb(250,191,14)" fg:x="30" fg:w="2"/><text x="0.5318%" y="911.50"></text></g><g><title>AppKit`_NSMenuStringWithLocalization (2 samples, 0.02%)</title><rect x="0.3193%" y="661" width="0.0188%" height="15" fill="rgb(239,60,40)" fg:x="34" fg:w="2"/><text x="0.5693%" y="671.50"></text></g><g><title>Foundation`-[NSBundle localizedStringForKey:value:table:localization:] (2 samples, 0.02%)</title><rect x="0.3193%" y="645" width="0.0188%" height="15" fill="rgb(206,27,48)" fg:x="34" fg:w="2"/><text x="0.5693%" y="655.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLocalizedStringForLocalizationAndTableURL (2 samples, 0.02%)</title><rect x="0.3193%" y="629" width="0.0188%" height="15" fill="rgb(225,35,8)" fg:x="34" fg:w="2"/><text x="0.5693%" y="639.50"></text></g><g><title>CoreFoundation`_CFBundleCopyLocalizedStringForLocalizationTableURLAndMarkdownOption (2 samples, 0.02%)</title><rect x="0.3193%" y="613" width="0.0188%" height="15" fill="rgb(250,213,24)" fg:x="34" fg:w="2"/><text x="0.5693%" y="623.50"></text></g><g><title>AppKit`-[_NSAppleMenu _appendItemWithTitle:action:tag:addingTo:] (3 samples, 0.03%)</title><rect x="0.3193%" y="709" width="0.0282%" height="15" fill="rgb(247,123,22)" fg:x="34" fg:w="3"/><text x="0.5693%" y="719.50"></text></g><g><title>AppKit`-[_NSAppleMenu _appendItemWithTitle:action:tag:isAlternate:keyEquivalent:keModifier:addingTo:] (3 samples, 0.03%)</title><rect x="0.3193%" y="693" width="0.0282%" height="15" fill="rgb(231,138,38)" fg:x="34" fg:w="3"/><text x="0.5693%" y="703.50"></text></g><g><title>AppKit`+[NSMenuUtils preferredLanguageString:inTable:] (3 samples, 0.03%)</title><rect x="0.3193%" y="677" width="0.0282%" height="15" fill="rgb(231,145,46)" fg:x="34" fg:w="3"/><text x="0.5693%" y="687.50"></text></g><g><title>AppKit`-[_NSAppleMenu _addAppleMenuItems] (4 samples, 0.04%)</title><rect x="0.3193%" y="725" width="0.0376%" height="15" fill="rgb(251,118,11)" fg:x="34" fg:w="4"/><text x="0.5693%" y="735.50"></text></g><g><title>AppKit`_checkMenusForKeyEvent (7 samples, 0.07%)</title><rect x="0.3006%" y="837" width="0.0657%" height="15" fill="rgb(217,147,25)" fg:x="32" fg:w="7"/><text x="0.5506%" y="847.50"></text></g><g><title>AppKit`_checkMenuTreeForKeyEvent (7 samples, 0.07%)</title><rect x="0.3006%" y="821" width="0.0657%" height="15" fill="rgb(247,81,37)" fg:x="32" fg:w="7"/><text x="0.5506%" y="831.50"></text></g><g><title>AppKit`_populateMenu (7 samples, 0.07%)</title><rect x="0.3006%" y="805" width="0.0657%" height="15" fill="rgb(209,12,38)" fg:x="32" fg:w="7"/><text x="0.5506%" y="815.50"></text></g><g><title>AppKit`-[NSMenu _populateWithFlags:eventRef:] (7 samples, 0.07%)</title><rect x="0.3006%" y="789" width="0.0657%" height="15" fill="rgb(227,1,9)" fg:x="32" fg:w="7"/><text x="0.5506%" y="799.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventRef:] (7 samples, 0.07%)</title><rect x="0.3006%" y="773" width="0.0657%" height="15" fill="rgb(248,47,43)" fg:x="32" fg:w="7"/><text x="0.5506%" y="783.50"></text></g><g><title>AppKit`-[NSMenu _populateWithEventProvider:] (7 samples, 0.07%)</title><rect x="0.3006%" y="757" width="0.0657%" height="15" fill="rgb(221,10,30)" fg:x="32" fg:w="7"/><text x="0.5506%" y="767.50"></text></g><g><title>AppKit`-[_NSAppleMenu updateMenu:withEvent:withFlags:] (5 samples, 0.05%)</title><rect x="0.3193%" y="741" width="0.0470%" height="15" fill="rgb(210,229,1)" fg:x="34" fg:w="5"/><text x="0.5693%" y="751.50"></text></g><g><title>AppKit`-[NSMenu performKeyEquivalent:] (8 samples, 0.08%)</title><rect x="0.3006%" y="917" width="0.0751%" height="15" fill="rgb(222,148,37)" fg:x="32" fg:w="8"/><text x="0.5506%" y="927.50"></text></g><g><title>AppKit`_NSFindMenuItemMatchingCommandKeyEvent (8 samples, 0.08%)</title><rect x="0.3006%" y="901" width="0.0751%" height="15" fill="rgb(234,67,33)" fg:x="32" fg:w="8"/><text x="0.5506%" y="911.50"></text></g><g><title>AppKit`_NSWrappedSearchReturn (8 samples, 0.08%)</title><rect x="0.3006%" y="885" width="0.0751%" height="15" fill="rgb(247,98,35)" fg:x="32" fg:w="8"/><text x="0.5506%" y="895.50"></text></g><g><title>AppKit`+[NSCocoaMenuImpl(KeyEvents) _menuItemWithKeyEquivalentMatchingEvent:inMenu:includingDisabledItems:] (8 samples, 0.08%)</title><rect x="0.3006%" y="869" width="0.0751%" height="15" fill="rgb(247,138,52)" fg:x="32" fg:w="8"/><text x="0.5506%" y="879.50"></text></g><g><title>AppKit`NSIsMenuKeyEvent (8 samples, 0.08%)</title><rect x="0.3006%" y="853" width="0.0751%" height="15" fill="rgb(213,79,30)" fg:x="32" fg:w="8"/><text x="0.5506%" y="863.50"></text></g><g><title>AppKit`-[NSWindow(NSEventRouting) sendEvent:] (2 samples, 0.02%)</title><rect x="0.3757%" y="917" width="0.0188%" height="15" fill="rgb(246,177,23)" fg:x="40" fg:w="2"/><text x="0.6257%" y="927.50"></text></g><g><title>AppKit`_NSKeyboardUIHandleSymbolicHotKeyEvent (2 samples, 0.02%)</title><rect x="0.3945%" y="917" width="0.0188%" height="15" fill="rgb(230,62,27)" fg:x="42" fg:w="2"/><text x="0.6445%" y="927.50"></text></g><g><title>AppKit`_NSKeyboardUITranslateToSymbolicHotKey (2 samples, 0.02%)</title><rect x="0.3945%" y="901" width="0.0188%" height="15" fill="rgb(216,154,8)" fg:x="42" fg:w="2"/><text x="0.6445%" y="911.50"></text></g><g><title>HIToolbox`_IsSymbolicHotKeyEvent (2 samples, 0.02%)</title><rect x="0.3945%" y="885" width="0.0188%" height="15" fill="rgb(244,35,45)" fg:x="42" fg:w="2"/><text x="0.6445%" y="895.50"></text></g><g><title>AppKit`-[NSApplication _handleEvent:] (28 samples, 0.26%)</title><rect x="0.1691%" y="965" width="0.2630%" height="15" fill="rgb(251,115,12)" fg:x="18" fg:w="28"/><text x="0.4191%" y="975.50"></text></g><g><title>ostinato`winit::platform_impl::macos::app::send_event (24 samples, 0.23%)</title><rect x="0.2066%" y="949" width="0.2254%" height="15" fill="rgb(240,54,50)" fg:x="22" fg:w="24"/><text x="0.4566%" y="959.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) sendEvent:] (24 samples, 0.23%)</title><rect x="0.2066%" y="933" width="0.2254%" height="15" fill="rgb(233,84,52)" fg:x="22" fg:w="24"/><text x="0.4566%" y="943.50"></text></g><g><title>AppKit`routeMouseMovedEvent (2 samples, 0.02%)</title><rect x="0.4133%" y="917" width="0.0188%" height="15" fill="rgb(207,117,47)" fg:x="44" fg:w="2"/><text x="0.6633%" y="927.50"></text></g><g><title>AppKit`-[NSEvent _initWithCGEvent:eventRef:] (2 samples, 0.02%)</title><rect x="0.4414%" y="949" width="0.0188%" height="15" fill="rgb(249,43,39)" fg:x="47" fg:w="2"/><text x="0.6914%" y="959.50"></text></g><g><title>AppKit`-[NSEvent window] (4 samples, 0.04%)</title><rect x="0.4696%" y="949" width="0.0376%" height="15" fill="rgb(209,38,44)" fg:x="50" fg:w="4"/><text x="0.7196%" y="959.50"></text></g><g><title>AppKit`_DPSEventHandledByCarbon (5 samples, 0.05%)</title><rect x="0.5166%" y="949" width="0.0470%" height="15" fill="rgb(236,212,23)" fg:x="55" fg:w="5"/><text x="0.7666%" y="959.50"></text></g><g><title>AppKit`_NSHandleCarbonMenuEvent (5 samples, 0.05%)</title><rect x="0.5166%" y="933" width="0.0470%" height="15" fill="rgb(242,79,21)" fg:x="55" fg:w="5"/><text x="0.7666%" y="943.50"></text></g><g><title>HIToolbox`_HIMenuIsCarbonMenuKeyEvent (4 samples, 0.04%)</title><rect x="0.5260%" y="917" width="0.0376%" height="15" fill="rgb(211,96,35)" fg:x="56" fg:w="4"/><text x="0.7760%" y="927.50"></text></g><g><title>HIToolbox`_HandleMenuKeyEvent (4 samples, 0.04%)</title><rect x="0.5260%" y="901" width="0.0376%" height="15" fill="rgb(253,215,40)" fg:x="56" fg:w="4"/><text x="0.7760%" y="911.50"></text></g><g><title>HIToolbox`IsMenuKeyEvent (4 samples, 0.04%)</title><rect x="0.5260%" y="885" width="0.0376%" height="15" fill="rgb(211,81,21)" fg:x="56" fg:w="4"/><text x="0.7760%" y="895.50"></text></g><g><title>HIToolbox`_IsMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, MenuData**, unsigned short*) (4 samples, 0.04%)</title><rect x="0.5260%" y="869" width="0.0376%" height="15" fill="rgb(208,190,38)" fg:x="56" fg:w="4"/><text x="0.7760%" y="879.50"></text></g><g><title>HIToolbox`IsMatchingMenuKeyEvent(MenuData*, OpaqueEventRef*, unsigned int, unsigned char, MenuData**, unsigned short*) (4 samples, 0.04%)</title><rect x="0.5260%" y="853" width="0.0376%" height="15" fill="rgb(235,213,38)" fg:x="56" fg:w="4"/><text x="0.7760%" y="863.50"></text></g><g><title>HIToolbox`CheckMenusForKeyEvent(MenuData*, CheckMenuData*) (3 samples, 0.03%)</title><rect x="0.5354%" y="837" width="0.0282%" height="15" fill="rgb(237,122,38)" fg:x="57" fg:w="3"/><text x="0.7854%" y="847.50"></text></g><g><title>AppKit`-[NSDocumentController(NSInternal) _autosaveRecordPathCreateIfNecessary:] (2 samples, 0.02%)</title><rect x="0.5635%" y="757" width="0.0188%" height="15" fill="rgb(244,218,35)" fg:x="60" fg:w="2"/><text x="0.8135%" y="767.50"></text></g><g><title>AppKit`-[NSDocumentController(NSInternal) _autosaveDirectoryURLCreateIfNecessary:] (2 samples, 0.02%)</title><rect x="0.5635%" y="741" width="0.0188%" height="15" fill="rgb(240,68,47)" fg:x="60" fg:w="2"/><text x="0.8135%" y="751.50"></text></g><g><title>Foundation`@objc _NSFileManagerBridge.url(for:in:appropriateFor:create:) (2 samples, 0.02%)</title><rect x="0.5635%" y="725" width="0.0188%" height="15" fill="rgb(210,16,53)" fg:x="60" fg:w="2"/><text x="0.8135%" y="735.50"></text></g><g><title>Foundation`_FileManagerImpl.url(for:in:appropriateFor:create:) (2 samples, 0.02%)</title><rect x="0.5635%" y="709" width="0.0188%" height="15" fill="rgb(235,124,12)" fg:x="60" fg:w="2"/><text x="0.8135%" y="719.50"></text></g><g><title>Foundation`_SearchPathURLs(for:in:expandTilde:) (2 samples, 0.02%)</title><rect x="0.5635%" y="693" width="0.0188%" height="15" fill="rgb(224,169,11)" fg:x="60" fg:w="2"/><text x="0.8135%" y="703.50"></text></g><g><title>AppKit`-[NSApplication _reopenWindowsAsNecessaryIncludingRestorableState:withFullFidelity:completionHandler:] (4 samples, 0.04%)</title><rect x="0.5635%" y="805" width="0.0376%" height="15" fill="rgb(250,166,2)" fg:x="60" fg:w="4"/><text x="0.8135%" y="815.50"></text></g><g><title>AppKit`-[NSDocumentController(NSInternal) _autoreopenDocumentsIgnoringExpendable:withCompletionHandler:] (4 samples, 0.04%)</title><rect x="0.5635%" y="789" width="0.0376%" height="15" fill="rgb(242,216,29)" fg:x="60" fg:w="4"/><text x="0.8135%" y="799.50"></text></g><g><title>AppKit`-[NSDocumentController(NSInternal) _autoreopenRecordsBeingReopened] (4 samples, 0.04%)</title><rect x="0.5635%" y="773" width="0.0376%" height="15" fill="rgb(230,116,27)" fg:x="60" fg:w="4"/><text x="0.8135%" y="783.50"></text></g><g><title>Foundation`+[NSArray(NSArray) newWithContentsOf:immutable:] (2 samples, 0.02%)</title><rect x="0.5823%" y="757" width="0.0188%" height="15" fill="rgb(228,99,48)" fg:x="62" fg:w="2"/><text x="0.8323%" y="767.50"></text></g><g><title>Foundation`-[NSData(NSData) initWithContentsOfFile:options:maxLength:error:] (2 samples, 0.02%)</title><rect x="0.5823%" y="741" width="0.0188%" height="15" fill="rgb(253,11,6)" fg:x="62" fg:w="2"/><text x="0.8323%" y="751.50"></text></g><g><title>Foundation`@objc static NSData._readBytes(fromPath:maxLength:bytes:length:didMap:options:reportProgress:) (2 samples, 0.02%)</title><rect x="0.5823%" y="725" width="0.0188%" height="15" fill="rgb(247,143,39)" fg:x="62" fg:w="2"/><text x="0.8323%" y="735.50"></text></g><g><title>Foundation`specialized static NSData._readBytes(fromPath:maxLength:bytes:length:didMap:options:reportProgress:) (2 samples, 0.02%)</title><rect x="0.5823%" y="709" width="0.0188%" height="15" fill="rgb(236,97,10)" fg:x="62" fg:w="2"/><text x="0.8323%" y="719.50"></text></g><g><title>Foundation`readBytesFromFile(path:reportProgress:maxLength:options:attributesToRead:attributes:) (2 samples, 0.02%)</title><rect x="0.5823%" y="693" width="0.0188%" height="15" fill="rgb(233,208,19)" fg:x="62" fg:w="2"/><text x="0.8323%" y="703.50"></text></g><g><title>ostinato`ostinato::resources::load_shader::_{{closure}} (3 samples, 0.03%)</title><rect x="0.6293%" y="597" width="0.0282%" height="15" fill="rgb(216,164,2)" fg:x="67" fg:w="3"/><text x="0.8793%" y="607.50"></text></g><g><title>ostinato`ostinato::mesh::shader::Material::new (2 samples, 0.02%)</title><rect x="0.6387%" y="581" width="0.0188%" height="15" fill="rgb(220,129,5)" fg:x="68" fg:w="2"/><text x="0.8887%" y="591.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_render_pipeline (2 samples, 0.02%)</title><rect x="0.6387%" y="565" width="0.0188%" height="15" fill="rgb(242,17,10)" fg:x="68" fg:w="2"/><text x="0.8887%" y="575.50"></text></g><g><title>ostinato`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::device_create_render_pipeline (2 samples, 0.02%)</title><rect x="0.6387%" y="549" width="0.0188%" height="15" fill="rgb(242,107,0)" fg:x="68" fg:w="2"/><text x="0.8887%" y="559.50"></text></g><g><title>ostinato`wgpu_core::device::resource::Device::create_render_pipeline (2 samples, 0.02%)</title><rect x="0.6387%" y="533" width="0.0188%" height="15" fill="rgb(251,28,31)" fg:x="68" fg:w="2"/><text x="0.8887%" y="543.50"></text></g><g><title>ostinato`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_render_pipeline (2 samples, 0.02%)</title><rect x="0.6387%" y="517" width="0.0188%" height="15" fill="rgb(233,223,10)" fg:x="68" fg:w="2"/><text x="0.8887%" y="527.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (2 samples, 0.02%)</title><rect x="0.6387%" y="501" width="0.0188%" height="15" fill="rgb(215,21,27)" fg:x="68" fg:w="2"/><text x="0.8887%" y="511.50"></text></g><g><title>ostinato`metal::device::DeviceRef::new_render_pipeline_state (2 samples, 0.02%)</title><rect x="0.6387%" y="485" width="0.0188%" height="15" fill="rgb(232,23,21)" fg:x="68" fg:w="2"/><text x="0.8887%" y="495.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice newRenderPipelineStateWithDescriptor:error:] (2 samples, 0.02%)</title><rect x="0.6387%" y="469" width="0.0188%" height="15" fill="rgb(244,5,23)" fg:x="68" fg:w="2"/><text x="0.8887%" y="479.50"></text></g><g><title>AGXMetal13_3`AGXG13GFamilyRenderPipeline* AGX::UserCommonShaderFactory&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::createRenderPipeline&lt;MTLRenderPipelineDescriptor&gt;(MTLRenderPipelineDescriptor*, AGXG13GFamilyDevice*, unsigned long, MTLRenderPipelineReflection**, NSError**, void (id (2 samples, 0.02%)</title><rect x="0.6387%" y="453" width="0.0188%" height="15" fill="rgb(226,81,46)" fg:x="68" fg:w="2"/><text x="0.8887%" y="463.50"></text></g><g><title>AGXMetal13_3`invocation function for block in AGXG13GFamilyRenderPipeline* AGX::UserCommonShaderFactory&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::createRenderPipeline&lt;MTLRenderPipelineDescriptor&gt;(MTLRenderPipelineDescriptor*, AGXG13GFamilyDevice*, unsigned long, MTLRenderPipelineReflection**, NSError**, void (id (2 samples, 0.02%)</title><rect x="0.6387%" y="437" width="0.0188%" height="15" fill="rgb(247,70,30)" fg:x="68" fg:w="2"/><text x="0.8887%" y="447.50"></text></g><g><title>AGXMetal13_3`void AGX::UserCommonShaderFactory&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::createFragmentProgramVariant&lt;MTLRenderPipelineDescriptor&gt;(MTLRenderPipelineDescriptor*, AGXG13GFamilyDevice*, unsigned long, AGXG13GFamilyBinaryArchive*, NSArray*, AGX::G13::FragmentProgram*, AGX::VertexProgramVaryings const*, NSObject&lt;OS_dispatch_data&gt;*, bool, void (AGX::G13::FragmentProgramVariant*, ReflectionKey, NSMutableDictionary*, MTLCompilerError, NSString*, NSObject (2 samples, 0.02%)</title><rect x="0.6387%" y="421" width="0.0188%" height="15" fill="rgb(212,68,19)" fg:x="68" fg:w="2"/><text x="0.8887%" y="431.50"></text></g><g><title>ostinato`ostinato::texture::Texture::from_bytes (2 samples, 0.02%)</title><rect x="0.6669%" y="597" width="0.0188%" height="15" fill="rgb(240,187,13)" fg:x="71" fg:w="2"/><text x="0.9169%" y="607.50"></text></g><g><title>Metal`-[MTLCompiler compileRequestInternal:binaryArchives:failOnBinaryArchiveMiss:pipelineCache:sync:completionHandler:] (2 samples, 0.02%)</title><rect x="0.6950%" y="421" width="0.0188%" height="15" fill="rgb(223,113,26)" fg:x="74" fg:w="2"/><text x="0.9450%" y="431.50"></text></g><g><title>ostinato`&lt;A as wgpu_hal::dynamic::adapter::DynAdapter&gt;::open (4 samples, 0.04%)</title><rect x="0.6856%" y="533" width="0.0376%" height="15" fill="rgb(206,192,2)" fg:x="73" fg:w="4"/><text x="0.9356%" y="543.50"></text></g><g><title>ostinato`wgpu_hal::metal::adapter::_&lt;impl wgpu_hal::Adapter for wgpu_hal::metal::Adapter&gt;::open (4 samples, 0.04%)</title><rect x="0.6856%" y="517" width="0.0376%" height="15" fill="rgb(241,108,4)" fg:x="73" fg:w="4"/><text x="0.9356%" y="527.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice newCommandQueueWithDescriptor:] (4 samples, 0.04%)</title><rect x="0.6856%" y="501" width="0.0376%" height="15" fill="rgb(247,173,49)" fg:x="73" fg:w="4"/><text x="0.9356%" y="511.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice setupDeferred] (4 samples, 0.04%)</title><rect x="0.6856%" y="485" width="0.0376%" height="15" fill="rgb(224,114,35)" fg:x="73" fg:w="4"/><text x="0.9356%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.04%)</title><rect x="0.6856%" y="469" width="0.0376%" height="15" fill="rgb(245,159,27)" fg:x="73" fg:w="4"/><text x="0.9356%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.04%)</title><rect x="0.6856%" y="453" width="0.0376%" height="15" fill="rgb(245,172,44)" fg:x="73" fg:w="4"/><text x="0.9356%" y="463.50"></text></g><g><title>AGXMetal13_3`__36-[AGXG13GFamilyDevice setupDeferred]_block_invoke (3 samples, 0.03%)</title><rect x="0.6950%" y="437" width="0.0282%" height="15" fill="rgb(236,23,11)" fg:x="74" fg:w="3"/><text x="0.9450%" y="447.50"></text></g><g><title>Metal`-[MTLCompiler compileFunctionRequestInternal:frameworkLinking:linkDataSize:reflectionOnly:completionHandler:] (3 samples, 0.03%)</title><rect x="0.7232%" y="389" width="0.0282%" height="15" fill="rgb(205,117,38)" fg:x="77" fg:w="3"/><text x="0.9732%" y="399.50"></text></g><g><title>AGXMetal13_3`AGX::UserCommonShaderFactory&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::createComputeProgramVariant(MTLComputePipelineDescriptor*, AGXG13GFamilyDevice*, unsigned long, AGXG13GFamilyBinaryArchive*, NSArray*, AGX::G13::ComputeProgram*, NSObject&lt;OS_dispatch_data&gt;*, bool, void  (4 samples, 0.04%)</title><rect x="0.7232%" y="405" width="0.0376%" height="15" fill="rgb(237,72,25)" fg:x="77" fg:w="4"/><text x="0.9732%" y="415.50"></text></g><g><title>ostinato`metal::device::DeviceRef::new_compute_pipeline_state (5 samples, 0.05%)</title><rect x="0.7232%" y="453" width="0.0470%" height="15" fill="rgb(244,70,9)" fg:x="77" fg:w="5"/><text x="0.9732%" y="463.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice newComputePipelineStateWithDescriptor:error:] (5 samples, 0.05%)</title><rect x="0.7232%" y="437" width="0.0470%" height="15" fill="rgb(217,125,39)" fg:x="77" fg:w="5"/><text x="0.9732%" y="447.50"></text></g><g><title>AGXMetal13_3`AGX::UserCommonShaderFactory&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::createComputePipeline(MTLComputePipelineDescriptor*, AGXG13GFamilyDevice*, unsigned long, MTLComputePipelineReflection**, NSError**, void (id (5 samples, 0.05%)</title><rect x="0.7232%" y="421" width="0.0470%" height="15" fill="rgb(235,36,10)" fg:x="77" fg:w="5"/><text x="0.9732%" y="431.50"></text></g><g><title>ostinato`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_compute_pipeline (7 samples, 0.07%)</title><rect x="0.7232%" y="485" width="0.0657%" height="15" fill="rgb(251,123,47)" fg:x="77" fg:w="7"/><text x="0.9732%" y="495.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (7 samples, 0.07%)</title><rect x="0.7232%" y="469" width="0.0657%" height="15" fill="rgb(221,13,13)" fg:x="77" fg:w="7"/><text x="0.9732%" y="479.50"></text></g><g><title>ostinato`wgpu_hal::metal::device::_&lt;impl wgpu_hal::metal::Device&gt;::load_shader (2 samples, 0.02%)</title><rect x="0.7702%" y="453" width="0.0188%" height="15" fill="rgb(238,131,9)" fg:x="82" fg:w="2"/><text x="1.0202%" y="463.50"></text></g><g><title>ostinato`wgpu::api::adapter::Adapter::request_device (14 samples, 0.13%)</title><rect x="0.6856%" y="597" width="0.1315%" height="15" fill="rgb(211,50,8)" fg:x="73" fg:w="14"/><text x="0.9356%" y="607.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreAdapter as wgpu::dispatch::AdapterInterface&gt;::request_device (14 samples, 0.13%)</title><rect x="0.6856%" y="581" width="0.1315%" height="15" fill="rgb(245,182,24)" fg:x="73" fg:w="14"/><text x="0.9356%" y="591.50"></text></g><g><title>ostinato`wgpu_core::instance::_&lt;impl wgpu_core::global::Global&gt;::adapter_request_device (14 samples, 0.13%)</title><rect x="0.6856%" y="565" width="0.1315%" height="15" fill="rgb(242,14,37)" fg:x="73" fg:w="14"/><text x="0.9356%" y="575.50"></text></g><g><title>ostinato`wgpu_core::instance::Adapter::create_device_and_queue (14 samples, 0.13%)</title><rect x="0.6856%" y="549" width="0.1315%" height="15" fill="rgb(246,228,12)" fg:x="73" fg:w="14"/><text x="0.9356%" y="559.50"></text></g><g><title>ostinato`wgpu_core::instance::Adapter::create_device_and_queue_from_hal (10 samples, 0.09%)</title><rect x="0.7232%" y="533" width="0.0939%" height="15" fill="rgb(213,55,15)" fg:x="77" fg:w="10"/><text x="0.9732%" y="543.50"></text></g><g><title>ostinato`wgpu_core::device::resource::Device::new (10 samples, 0.09%)</title><rect x="0.7232%" y="517" width="0.0939%" height="15" fill="rgb(209,9,3)" fg:x="77" fg:w="10"/><text x="0.9732%" y="527.50"></text></g><g><title>ostinato`wgpu_core::indirect_validation::IndirectValidation::new (10 samples, 0.09%)</title><rect x="0.7232%" y="501" width="0.0939%" height="15" fill="rgb(230,59,30)" fg:x="77" fg:w="10"/><text x="0.9732%" y="511.50"></text></g><g><title>ostinato`naga::front::wgsl::parse_str (2 samples, 0.02%)</title><rect x="0.7983%" y="485" width="0.0188%" height="15" fill="rgb(209,121,21)" fg:x="85" fg:w="2"/><text x="1.0483%" y="495.50"></text></g><g><title>ostinato`naga::front::wgsl::Frontend::parse (2 samples, 0.02%)</title><rect x="0.7983%" y="469" width="0.0188%" height="15" fill="rgb(220,109,13)" fg:x="85" fg:w="2"/><text x="1.0483%" y="479.50"></text></g><g><title>ostinato`naga::front::wgsl::lower::Lowerer::lower (2 samples, 0.02%)</title><rect x="0.7983%" y="453" width="0.0188%" height="15" fill="rgb(232,18,1)" fg:x="85" fg:w="2"/><text x="1.0483%" y="463.50"></text></g><g><title>ostinato`pollster::block_on (22 samples, 0.21%)</title><rect x="0.6199%" y="613" width="0.2066%" height="15" fill="rgb(215,41,42)" fg:x="66" fg:w="22"/><text x="0.8699%" y="623.50"></text></g><g><title>ostinato`std::io::stdio::_print (5 samples, 0.05%)</title><rect x="0.8265%" y="613" width="0.0470%" height="15" fill="rgb(224,123,36)" fg:x="88" fg:w="5"/><text x="1.0765%" y="623.50"></text></g><g><title>ostinato`&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (5 samples, 0.05%)</title><rect x="0.8265%" y="597" width="0.0470%" height="15" fill="rgb(240,125,3)" fg:x="88" fg:w="5"/><text x="1.0765%" y="607.50"></text></g><g><title>ostinato`core::fmt::write (5 samples, 0.05%)</title><rect x="0.8265%" y="581" width="0.0470%" height="15" fill="rgb(205,98,50)" fg:x="88" fg:w="5"/><text x="1.0765%" y="591.50"></text></g><g><title>ostinato`&lt;ostinato::mesh::Mesh as core::fmt::Debug&gt;::fmt (5 samples, 0.05%)</title><rect x="0.8265%" y="565" width="0.0470%" height="15" fill="rgb(205,185,37)" fg:x="88" fg:w="5"/><text x="1.0765%" y="575.50"></text></g><g><title>ostinato`core::fmt::Formatter::debug_struct_fields_finish (5 samples, 0.05%)</title><rect x="0.8265%" y="549" width="0.0470%" height="15" fill="rgb(238,207,15)" fg:x="88" fg:w="5"/><text x="1.0765%" y="559.50"></text></g><g><title>ostinato`core::fmt::builders::DebugStruct::field (5 samples, 0.05%)</title><rect x="0.8265%" y="533" width="0.0470%" height="15" fill="rgb(213,199,42)" fg:x="88" fg:w="5"/><text x="1.0765%" y="543.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T,A&gt; as core::fmt::Debug&gt;::fmt (5 samples, 0.05%)</title><rect x="0.8265%" y="517" width="0.0470%" height="15" fill="rgb(235,201,11)" fg:x="88" fg:w="5"/><text x="1.0765%" y="527.50"></text></g><g><title>ostinato`core::fmt::builders::DebugSet::entry (5 samples, 0.05%)</title><rect x="0.8265%" y="501" width="0.0470%" height="15" fill="rgb(207,46,11)" fg:x="88" fg:w="5"/><text x="1.0765%" y="511.50"></text></g><g><title>ostinato`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (5 samples, 0.05%)</title><rect x="0.8265%" y="485" width="0.0470%" height="15" fill="rgb(241,35,35)" fg:x="88" fg:w="5"/><text x="1.0765%" y="495.50"></text></g><g><title>ostinato`&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (5 samples, 0.05%)</title><rect x="0.8265%" y="469" width="0.0470%" height="15" fill="rgb(243,32,47)" fg:x="88" fg:w="5"/><text x="1.0765%" y="479.50"></text></g><g><title>ostinato`&lt;std::io::default_write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (5 samples, 0.05%)</title><rect x="0.8265%" y="453" width="0.0470%" height="15" fill="rgb(247,202,23)" fg:x="88" fg:w="5"/><text x="1.0765%" y="463.50"></text></g><g><title>ostinato`&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (5 samples, 0.05%)</title><rect x="0.8265%" y="437" width="0.0470%" height="15" fill="rgb(219,102,11)" fg:x="88" fg:w="5"/><text x="1.0765%" y="447.50"></text></g><g><title>libsystem_kernel.dylib`write (5 samples, 0.05%)</title><rect x="0.8265%" y="421" width="0.0470%" height="15" fill="rgb(243,110,44)" fg:x="88" fg:w="5"/><text x="1.0765%" y="431.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (4 samples, 0.04%)</title><rect x="0.9017%" y="469" width="0.0376%" height="15" fill="rgb(222,74,54)" fg:x="96" fg:w="4"/><text x="1.1517%" y="479.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (4 samples, 0.04%)</title><rect x="0.9017%" y="453" width="0.0376%" height="15" fill="rgb(216,99,12)" fg:x="96" fg:w="4"/><text x="1.1517%" y="463.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (4 samples, 0.04%)</title><rect x="0.9017%" y="437" width="0.0376%" height="15" fill="rgb(226,22,26)" fg:x="96" fg:w="4"/><text x="1.1517%" y="447.50"></text></g><g><title>AppKit`-[NSResponder init] (8 samples, 0.08%)</title><rect x="0.8735%" y="549" width="0.0751%" height="15" fill="rgb(217,163,10)" fg:x="93" fg:w="8"/><text x="1.1235%" y="559.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (8 samples, 0.08%)</title><rect x="0.8735%" y="533" width="0.0751%" height="15" fill="rgb(213,25,53)" fg:x="93" fg:w="8"/><text x="1.1235%" y="543.50"></text></g><g><title>AppKit`lockedClassInfoForClass (8 samples, 0.08%)</title><rect x="0.8735%" y="517" width="0.0751%" height="15" fill="rgb(252,105,26)" fg:x="93" fg:w="8"/><text x="1.1235%" y="527.50"></text></g><g><title>AppKit`lockedClassInfoForClass (8 samples, 0.08%)</title><rect x="0.8735%" y="501" width="0.0751%" height="15" fill="rgb(220,39,43)" fg:x="93" fg:w="8"/><text x="1.1235%" y="511.50"></text></g><g><title>AppKit`initializePropertyInfo (8 samples, 0.08%)</title><rect x="0.8735%" y="485" width="0.0751%" height="15" fill="rgb(229,68,48)" fg:x="93" fg:w="8"/><text x="1.1235%" y="495.50"></text></g><g><title>CoreGraphics`CGCMSConverterConvertColorComponents (2 samples, 0.02%)</title><rect x="0.9486%" y="245" width="0.0188%" height="15" fill="rgb(252,8,32)" fg:x="101" fg:w="2"/><text x="1.1986%" y="255.50"></text></g><g><title>CoreGraphics`CGCMSConverterConvert (2 samples, 0.02%)</title><rect x="0.9486%" y="229" width="0.0188%" height="15" fill="rgb(223,20,43)" fg:x="101" fg:w="2"/><text x="1.1986%" y="239.50"></text></g><g><title>CoreGraphics`convert_icc (2 samples, 0.02%)</title><rect x="0.9486%" y="213" width="0.0188%" height="15" fill="rgb(229,81,49)" fg:x="101" fg:w="2"/><text x="1.1986%" y="223.50"></text></g><g><title>CoreGraphics`convert_using_vImageConverter (2 samples, 0.02%)</title><rect x="0.9486%" y="197" width="0.0188%" height="15" fill="rgb(236,28,36)" fg:x="101" fg:w="2"/><text x="1.1986%" y="207.50"></text></g><g><title>CoreGraphics`CGCMSConverterCreateCachedCGvImageConverter (2 samples, 0.02%)</title><rect x="0.9486%" y="181" width="0.0188%" height="15" fill="rgb(249,185,26)" fg:x="101" fg:w="2"/><text x="1.1986%" y="191.50"></text></g><g><title>vImage`vImageConverter_CreateWithCGColorConversionInfo (2 samples, 0.02%)</title><rect x="0.9486%" y="165" width="0.0188%" height="15" fill="rgb(249,174,33)" fg:x="101" fg:w="2"/><text x="1.1986%" y="175.50"></text></g><g><title>AppKit`-[NSCell attributedStringValue] (3 samples, 0.03%)</title><rect x="0.9486%" y="341" width="0.0282%" height="15" fill="rgb(233,201,37)" fg:x="101" fg:w="3"/><text x="1.1986%" y="351.50"></text></g><g><title>AppKit`-[NSCell _unformattedAttributedStringValue:] (3 samples, 0.03%)</title><rect x="0.9486%" y="325" width="0.0282%" height="15" fill="rgb(221,78,26)" fg:x="101" fg:w="3"/><text x="1.1986%" y="335.50"></text></g><g><title>AppKit`-[NSTextFieldCell _textAttributes] (3 samples, 0.03%)</title><rect x="0.9486%" y="309" width="0.0282%" height="15" fill="rgb(250,127,30)" fg:x="101" fg:w="3"/><text x="1.1986%" y="319.50"></text></g><g><title>AppKit`NSColorConvertToColorSpaceNamed (3 samples, 0.03%)</title><rect x="0.9486%" y="293" width="0.0282%" height="15" fill="rgb(230,49,44)" fg:x="101" fg:w="3"/><text x="1.1986%" y="303.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertColor (3 samples, 0.03%)</title><rect x="0.9486%" y="277" width="0.0282%" height="15" fill="rgb(229,67,23)" fg:x="101" fg:w="3"/><text x="1.1986%" y="287.50"></text></g><g><title>CoreGraphics`CGColorTransformConvertColorComponents (3 samples, 0.03%)</title><rect x="0.9486%" y="261" width="0.0282%" height="15" fill="rgb(249,83,47)" fg:x="101" fg:w="3"/><text x="1.1986%" y="271.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (2 samples, 0.02%)</title><rect x="0.9862%" y="165" width="0.0188%" height="15" fill="rgb(215,43,3)" fg:x="105" fg:w="2"/><text x="1.2362%" y="175.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (2 samples, 0.02%)</title><rect x="0.9862%" y="149" width="0.0188%" height="15" fill="rgb(238,154,13)" fg:x="105" fg:w="2"/><text x="1.2362%" y="159.50"></text></g><g><title>AppKit`-[NSControl didChangeValueForKey:] (4 samples, 0.04%)</title><rect x="0.9768%" y="341" width="0.0376%" height="15" fill="rgb(219,56,2)" fg:x="104" fg:w="4"/><text x="1.2268%" y="351.50"></text></g><g><title>AppKit`-[NSView didChangeValueForKey:] (4 samples, 0.04%)</title><rect x="0.9768%" y="325" width="0.0376%" height="15" fill="rgb(233,0,4)" fg:x="104" fg:w="4"/><text x="1.2268%" y="335.50"></text></g><g><title>AppKit`-[NSView _updateLayerBackedness] (4 samples, 0.04%)</title><rect x="0.9768%" y="309" width="0.0376%" height="15" fill="rgb(235,30,7)" fg:x="104" fg:w="4"/><text x="1.2268%" y="319.50"></text></g><g><title>AppKit`-[NSView _createLayerAndInitialize] (4 samples, 0.04%)</title><rect x="0.9768%" y="293" width="0.0376%" height="15" fill="rgb(250,79,13)" fg:x="104" fg:w="4"/><text x="1.2268%" y="303.50"></text></g><g><title>AppKit`-[NSView(NSPrivateLayerSupport) _createLayer] (4 samples, 0.04%)</title><rect x="0.9768%" y="277" width="0.0376%" height="15" fill="rgb(211,146,34)" fg:x="104" fg:w="4"/><text x="1.2268%" y="287.50"></text></g><g><title>QuartzCore`+[CALayer layer] (4 samples, 0.04%)</title><rect x="0.9768%" y="261" width="0.0376%" height="15" fill="rgb(228,22,38)" fg:x="104" fg:w="4"/><text x="1.2268%" y="271.50"></text></g><g><title>QuartzCore`-[CALayer init] (4 samples, 0.04%)</title><rect x="0.9768%" y="245" width="0.0376%" height="15" fill="rgb(235,168,5)" fg:x="104" fg:w="4"/><text x="1.2268%" y="255.50"></text></g><g><title>QuartzCore`CA::Layer::class_state (4 samples, 0.04%)</title><rect x="0.9768%" y="229" width="0.0376%" height="15" fill="rgb(221,155,16)" fg:x="104" fg:w="4"/><text x="1.2268%" y="239.50"></text></g><g><title>QuartzCore`classDescription(objc_class*) (4 samples, 0.04%)</title><rect x="0.9768%" y="213" width="0.0376%" height="15" fill="rgb(215,215,53)" fg:x="104" fg:w="4"/><text x="1.2268%" y="223.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (4 samples, 0.04%)</title><rect x="0.9768%" y="197" width="0.0376%" height="15" fill="rgb(223,4,10)" fg:x="104" fg:w="4"/><text x="1.2268%" y="207.50"></text></g><g><title>QuartzCore`classDescription_locked(objc_class*) (4 samples, 0.04%)</title><rect x="0.9768%" y="181" width="0.0376%" height="15" fill="rgb(234,103,6)" fg:x="104" fg:w="4"/><text x="1.2268%" y="191.50"></text></g><g><title>AppKit`-[NSThemeFrame _tileTitlebarAndRedisplay:] (9 samples, 0.08%)</title><rect x="0.9486%" y="373" width="0.0845%" height="15" fill="rgb(227,97,0)" fg:x="101" fg:w="9"/><text x="1.1986%" y="383.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleTextField] (9 samples, 0.08%)</title><rect x="0.9486%" y="357" width="0.0845%" height="15" fill="rgb(234,150,53)" fg:x="101" fg:w="9"/><text x="1.1986%" y="367.50"></text></g><g><title>UIFoundation`+[__NSFontTypefaceInfo typefaceInfoForFontDescriptor:] (5 samples, 0.05%)</title><rect x="1.0332%" y="213" width="0.0470%" height="15" fill="rgb(228,201,54)" fg:x="110" fg:w="5"/><text x="1.2832%" y="223.50"></text></g><g><title>Foundation`-[NSConcreteMapTable setObject:forKey:] (5 samples, 0.05%)</title><rect x="1.0332%" y="197" width="0.0470%" height="15" fill="rgb(222,22,37)" fg:x="110" fg:w="5"/><text x="1.2832%" y="207.50"></text></g><g><title>Foundation`probeGC (5 samples, 0.05%)</title><rect x="1.0332%" y="181" width="0.0470%" height="15" fill="rgb(237,53,32)" fg:x="110" fg:w="5"/><text x="1.2832%" y="191.50"></text></g><g><title>CoreText`TDescriptor::Hash (5 samples, 0.05%)</title><rect x="1.0332%" y="165" width="0.0470%" height="15" fill="rgb(233,25,53)" fg:x="110" fg:w="5"/><text x="1.2832%" y="175.50"></text></g><g><title>CoreText`TDescriptor::InitBaseFont (5 samples, 0.05%)</title><rect x="1.0332%" y="149" width="0.0470%" height="15" fill="rgb(210,40,34)" fg:x="110" fg:w="5"/><text x="1.2832%" y="159.50"></text></g><g><title>CoreText`TDescriptor::CreateMatchingDescriptorInternal (5 samples, 0.05%)</title><rect x="1.0332%" y="133" width="0.0470%" height="15" fill="rgb(241,220,44)" fg:x="110" fg:w="5"/><text x="1.2832%" y="143.50"></text></g><g><title>CoreText`TDescriptorSource::CopySplicedDescriptorForName (5 samples, 0.05%)</title><rect x="1.0332%" y="117" width="0.0470%" height="15" fill="rgb(235,28,35)" fg:x="110" fg:w="5"/><text x="1.2832%" y="127.50"></text></g><g><title>CoreText`TDescriptorSource::CopySpliceFontForName (5 samples, 0.05%)</title><rect x="1.0332%" y="101" width="0.0470%" height="15" fill="rgb(210,56,17)" fg:x="110" fg:w="5"/><text x="1.2832%" y="111.50"></text></g><g><title>CoreText`MakeSpliceDescriptor(__CFString const*, unsigned long, __CFString const*, __CFString const*, __CFNumber const*, __CFNumber const*, unsigned int, CTFontTextStylePlatform, unsigned int, __CFNumber const*, __CFNumber const*, CTFontLegibilityWeight, __CFBoolean const*, void const*, __CFString const*) (4 samples, 0.04%)</title><rect x="1.0425%" y="85" width="0.0376%" height="15" fill="rgb(224,130,29)" fg:x="111" fg:w="4"/><text x="1.2925%" y="95.50"></text></g><g><title>CoreText`AddVariationInfo(TCFMutableDictionary&amp;, __CFString const*) (4 samples, 0.04%)</title><rect x="1.0425%" y="69" width="0.0376%" height="15" fill="rgb(235,212,8)" fg:x="111" fg:w="4"/><text x="1.2925%" y="79.50"></text></g><g><title>libFontRegistry.dylib`XTCopyPropertiesForFont (2 samples, 0.02%)</title><rect x="1.0613%" y="53" width="0.0188%" height="15" fill="rgb(223,33,50)" fg:x="113" fg:w="2"/><text x="1.3113%" y="63.50"></text></g><g><title>libFontRegistry.dylib`TGlobalFontRegistryImp::CopyPropertiesForFont (2 samples, 0.02%)</title><rect x="1.0613%" y="37" width="0.0188%" height="15" fill="rgb(219,149,13)" fg:x="113" fg:w="2"/><text x="1.3113%" y="47.50"></text></g><g><title>AppKit`-[NSButtonCell initTextCell:] (6 samples, 0.06%)</title><rect x="1.0332%" y="277" width="0.0564%" height="15" fill="rgb(250,156,29)" fg:x="110" fg:w="6"/><text x="1.2832%" y="287.50"></text></g><g><title>AppKit`-[NSButtonCell _convertToText:] (6 samples, 0.06%)</title><rect x="1.0332%" y="261" width="0.0564%" height="15" fill="rgb(216,193,19)" fg:x="110" fg:w="6"/><text x="1.2832%" y="271.50"></text></g><g><title>AppKit`-[NSCell _convertToText:] (6 samples, 0.06%)</title><rect x="1.0332%" y="245" width="0.0564%" height="15" fill="rgb(216,135,14)" fg:x="110" fg:w="6"/><text x="1.2832%" y="255.50"></text></g><g><title>UIFoundation`__NSGetMetaFontInstanceWithType (6 samples, 0.06%)</title><rect x="1.0332%" y="229" width="0.0564%" height="15" fill="rgb(241,47,5)" fg:x="110" fg:w="6"/><text x="1.2832%" y="239.50"></text></g><g><title>AppKit`-[NSButtonCell init] (7 samples, 0.07%)</title><rect x="1.0332%" y="293" width="0.0657%" height="15" fill="rgb(233,42,35)" fg:x="110" fg:w="7"/><text x="1.2832%" y="303.50"></text></g><g><title>AppKit`-[NSButton initWithFrame:] (8 samples, 0.08%)</title><rect x="1.0332%" y="325" width="0.0751%" height="15" fill="rgb(231,13,6)" fg:x="110" fg:w="8"/><text x="1.2832%" y="335.50"></text></g><g><title>AppKit`-[NSControl initWithFrame:] (8 samples, 0.08%)</title><rect x="1.0332%" y="309" width="0.0751%" height="15" fill="rgb(207,181,40)" fg:x="110" fg:w="8"/><text x="1.2832%" y="319.50"></text></g><g><title>AppKit`-[NSThemeFrame newCloseButton] (9 samples, 0.08%)</title><rect x="1.0332%" y="373" width="0.0845%" height="15" fill="rgb(254,173,49)" fg:x="110" fg:w="9"/><text x="1.2832%" y="383.50"></text></g><g><title>AppKit`+[_NSThemeCloseWidget closeWidgetInView:withButtonID:action:] (9 samples, 0.08%)</title><rect x="1.0332%" y="357" width="0.0845%" height="15" fill="rgb(221,1,38)" fg:x="110" fg:w="9"/><text x="1.2832%" y="367.50"></text></g><g><title>AppKit`-[_NSThemeWidget initWithButtonID:] (9 samples, 0.08%)</title><rect x="1.0332%" y="341" width="0.0845%" height="15" fill="rgb(206,124,46)" fg:x="110" fg:w="9"/><text x="1.2832%" y="351.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateTitleProperties:animated:] (19 samples, 0.18%)</title><rect x="0.9486%" y="501" width="0.1785%" height="15" fill="rgb(249,21,11)" fg:x="101" fg:w="19"/><text x="1.1986%" y="511.50"></text></g><g><title>AppKit`-[NSThemeFrame setRepresentedURL:] (19 samples, 0.18%)</title><rect x="0.9486%" y="485" width="0.1785%" height="15" fill="rgb(222,201,40)" fg:x="101" fg:w="19"/><text x="1.1986%" y="495.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (19 samples, 0.18%)</title><rect x="0.9486%" y="469" width="0.1785%" height="15" fill="rgb(235,61,29)" fg:x="101" fg:w="19"/><text x="1.1986%" y="479.50"></text></g><g><title>AppKit`-[NSWindow showsFullScreenButton] (19 samples, 0.18%)</title><rect x="0.9486%" y="453" width="0.1785%" height="15" fill="rgb(219,207,3)" fg:x="101" fg:w="19"/><text x="1.1986%" y="463.50"></text></g><g><title>AppKit`-[NSWindow(NSFullScreen) canEnterFullScreenMode] (19 samples, 0.18%)</title><rect x="0.9486%" y="437" width="0.1785%" height="15" fill="rgb(222,56,46)" fg:x="101" fg:w="19"/><text x="1.1986%" y="447.50"></text></g><g><title>AppKit`-[NSWindow _effectiveCollectionBehavior] (19 samples, 0.18%)</title><rect x="0.9486%" y="421" width="0.1785%" height="15" fill="rgb(239,76,54)" fg:x="101" fg:w="19"/><text x="1.1986%" y="431.50"></text></g><g><title>AppKit`-[NSWindow _cacheAndSetPropertiesForCollectionBehavior:] (19 samples, 0.18%)</title><rect x="0.9486%" y="405" width="0.1785%" height="15" fill="rgb(231,124,27)" fg:x="101" fg:w="19"/><text x="1.1986%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame _updateButtons] (19 samples, 0.18%)</title><rect x="0.9486%" y="389" width="0.1785%" height="15" fill="rgb(249,195,6)" fg:x="101" fg:w="19"/><text x="1.1986%" y="399.50"></text></g><g><title>AppKit`-[NSFrameView initWithFrame:styleMask:owner:] (22 samples, 0.21%)</title><rect x="0.9486%" y="517" width="0.2066%" height="15" fill="rgb(237,174,47)" fg:x="101" fg:w="22"/><text x="1.1986%" y="527.50"></text></g><g><title>AppKit`-[NSView initWithFrame:] (3 samples, 0.03%)</title><rect x="1.1271%" y="501" width="0.0282%" height="15" fill="rgb(206,201,31)" fg:x="120" fg:w="3"/><text x="1.3771%" y="511.50"></text></g><g><title>AppKit`-[NSResponder init] (3 samples, 0.03%)</title><rect x="1.1271%" y="485" width="0.0282%" height="15" fill="rgb(231,57,52)" fg:x="120" fg:w="3"/><text x="1.3771%" y="495.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (3 samples, 0.03%)</title><rect x="1.1271%" y="469" width="0.0282%" height="15" fill="rgb(248,177,22)" fg:x="120" fg:w="3"/><text x="1.3771%" y="479.50"></text></g><g><title>AppKit`lockedClassInfoForClass (3 samples, 0.03%)</title><rect x="1.1271%" y="453" width="0.0282%" height="15" fill="rgb(215,211,37)" fg:x="120" fg:w="3"/><text x="1.3771%" y="463.50"></text></g><g><title>AppKit`lockedClassInfoForClass (3 samples, 0.03%)</title><rect x="1.1271%" y="437" width="0.0282%" height="15" fill="rgb(241,128,51)" fg:x="120" fg:w="3"/><text x="1.3771%" y="447.50"></text></g><g><title>AppKit`lockedClassInfoForClass (3 samples, 0.03%)</title><rect x="1.1271%" y="421" width="0.0282%" height="15" fill="rgb(227,165,31)" fg:x="120" fg:w="3"/><text x="1.3771%" y="431.50"></text></g><g><title>AppKit`lockedClassInfoForClass (3 samples, 0.03%)</title><rect x="1.1271%" y="405" width="0.0282%" height="15" fill="rgb(228,167,24)" fg:x="120" fg:w="3"/><text x="1.3771%" y="415.50"></text></g><g><title>AppKit`initializePropertyInfo (3 samples, 0.03%)</title><rect x="1.1271%" y="389" width="0.0282%" height="15" fill="rgb(228,143,12)" fg:x="120" fg:w="3"/><text x="1.3771%" y="399.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView initWithFrame:] (2 samples, 0.02%)</title><rect x="1.1740%" y="469" width="0.0188%" height="15" fill="rgb(249,149,8)" fg:x="125" fg:w="2"/><text x="1.4240%" y="479.50"></text></g><g><title>AppKit`-[NSThemeFrame initWithFrame:styleMask:owner:] (29 samples, 0.27%)</title><rect x="0.9486%" y="533" width="0.2724%" height="15" fill="rgb(243,35,44)" fg:x="101" fg:w="29"/><text x="1.1986%" y="543.50"></text></g><g><title>AppKit`-[NSThemeFrame _floatTitlebarAndToolbarFromInit:] (7 samples, 0.07%)</title><rect x="1.1553%" y="517" width="0.0657%" height="15" fill="rgb(246,89,9)" fg:x="123" fg:w="7"/><text x="1.4053%" y="527.50"></text></g><g><title>AppKit`+[NSAnimationContext runAnimationGroup:] (7 samples, 0.07%)</title><rect x="1.1553%" y="501" width="0.0657%" height="15" fill="rgb(233,213,13)" fg:x="123" fg:w="7"/><text x="1.4053%" y="511.50"></text></g><g><title>AppKit`__49-[NSThemeFrame _floatTitlebarAndToolbarFromInit:]_block_invoke (6 samples, 0.06%)</title><rect x="1.1646%" y="485" width="0.0564%" height="15" fill="rgb(233,141,41)" fg:x="124" fg:w="6"/><text x="1.4146%" y="495.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView setAssociatedThemeFrame:] (3 samples, 0.03%)</title><rect x="1.1928%" y="469" width="0.0282%" height="15" fill="rgb(239,167,4)" fg:x="127" fg:w="3"/><text x="1.4428%" y="479.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) addObserver:forKeyPath:options:context:] (3 samples, 0.03%)</title><rect x="1.1928%" y="453" width="0.0282%" height="15" fill="rgb(209,217,16)" fg:x="127" fg:w="3"/><text x="1.4428%" y="463.50"></text></g><g><title>Foundation`-[NSObject(NSKeyValueObserverRegistration) _addObserver:forProperty:options:context:] (3 samples, 0.03%)</title><rect x="1.1928%" y="437" width="0.0282%" height="15" fill="rgb(219,88,35)" fg:x="127" fg:w="3"/><text x="1.4428%" y="447.50"></text></g><g><title>Foundation`NSKeyValueNotifyObserver (3 samples, 0.03%)</title><rect x="1.1928%" y="421" width="0.0282%" height="15" fill="rgb(220,193,23)" fg:x="127" fg:w="3"/><text x="1.4428%" y="431.50"></text></g><g><title>AppKit`-[NSTitlebarContainerView observeValueForKeyPath:ofObject:change:context:] (3 samples, 0.03%)</title><rect x="1.1928%" y="405" width="0.0282%" height="15" fill="rgb(230,90,52)" fg:x="127" fg:w="3"/><text x="1.4428%" y="415.50"></text></g><g><title>AppKit`-[NSThemeFrame _cuiMakeOrUpdateBackgroundLayer:topHeight:drawTopSeparator:bottomHeight:forTitlebar:] (3 samples, 0.03%)</title><rect x="1.1928%" y="389" width="0.0282%" height="15" fill="rgb(252,106,19)" fg:x="127" fg:w="3"/><text x="1.4428%" y="399.50"></text></g><g><title>AppKit`-[NSAppearance _createOrUpdateLayer:options:] (3 samples, 0.03%)</title><rect x="1.1928%" y="373" width="0.0282%" height="15" fill="rgb(206,74,20)" fg:x="127" fg:w="3"/><text x="1.4428%" y="383.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.03%)</title><rect x="1.1928%" y="357" width="0.0282%" height="15" fill="rgb(230,138,44)" fg:x="127" fg:w="3"/><text x="1.4428%" y="367.50"></text></g><g><title>CoreUI`CUIRenderer::CreateOrUpdateLayer (3 samples, 0.03%)</title><rect x="1.1928%" y="341" width="0.0282%" height="15" fill="rgb(235,182,43)" fg:x="127" fg:w="3"/><text x="1.4428%" y="351.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::CreateOrUpdateLayer (3 samples, 0.03%)</title><rect x="1.1928%" y="325" width="0.0282%" height="15" fill="rgb(242,16,51)" fg:x="127" fg:w="3"/><text x="1.4428%" y="335.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::MakeOrUpdateWindowFrameLayerNew (3 samples, 0.03%)</title><rect x="1.1928%" y="309" width="0.0282%" height="15" fill="rgb(248,9,4)" fg:x="127" fg:w="3"/><text x="1.4428%" y="319.50"></text></g><g><title>QuartzCore`+[CALayer layer] (2 samples, 0.02%)</title><rect x="1.2022%" y="293" width="0.0188%" height="15" fill="rgb(210,31,22)" fg:x="128" fg:w="2"/><text x="1.4522%" y="303.50"></text></g><g><title>AppKit`-[NSWMWindowCoordinator initializeStageFramesIfNeeded] (2 samples, 0.02%)</title><rect x="1.2210%" y="533" width="0.0188%" height="15" fill="rgb(239,54,39)" fg:x="130" fg:w="2"/><text x="1.4710%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="1.2210%" y="517" width="0.0188%" height="15" fill="rgb(230,99,41)" fg:x="130" fg:w="2"/><text x="1.4710%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="1.2210%" y="501" width="0.0188%" height="15" fill="rgb(253,106,12)" fg:x="130" fg:w="2"/><text x="1.4710%" y="511.50"></text></g><g><title>AppKit`__54-[NSWMWindowCoordinator initializeStageFramesIfNeeded]_block_invoke (2 samples, 0.02%)</title><rect x="1.2210%" y="485" width="0.0188%" height="15" fill="rgb(213,46,41)" fg:x="130" fg:w="2"/><text x="1.4710%" y="495.50"></text></g><g><title>WindowManagement`-[WMClientWindowManager stages] (2 samples, 0.02%)</title><rect x="1.2210%" y="469" width="0.0188%" height="15" fill="rgb(215,133,35)" fg:x="130" fg:w="2"/><text x="1.4710%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (2 samples, 0.02%)</title><rect x="1.2210%" y="453" width="0.0188%" height="15" fill="rgb(213,28,5)" fg:x="130" fg:w="2"/><text x="1.4710%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="1.2210%" y="437" width="0.0188%" height="15" fill="rgb(215,77,49)" fg:x="130" fg:w="2"/><text x="1.4710%" y="447.50"></text></g><g><title>WindowManagement`__31-[WMClientWindowManager stages]_block_invoke (2 samples, 0.02%)</title><rect x="1.2210%" y="421" width="0.0188%" height="15" fill="rgb(248,100,22)" fg:x="130" fg:w="2"/><text x="1.4710%" y="431.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator() (2 samples, 0.02%)</title><rect x="1.2680%" y="293" width="0.0188%" height="15" fill="rgb(208,67,9)" fg:x="135" fg:w="2"/><text x="1.5180%" y="303.50"></text></g><g><title>dyld`dyld4::JustInTimeLoader::applyFixups(Diagnostics&amp;, dyld4::RuntimeState&amp;, dyld4::DyldCacheDataConstLazyScopedWriter&amp;, bool, lsl::Vector&lt;std::__1::pair (2 samples, 0.02%)</title><rect x="1.2680%" y="277" width="0.0188%" height="15" fill="rgb(219,133,21)" fg:x="135" fg:w="2"/><text x="1.5180%" y="287.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (2 samples, 0.02%)</title><rect x="1.2867%" y="213" width="0.0188%" height="15" fill="rgb(246,46,29)" fg:x="137" fg:w="2"/><text x="1.5367%" y="223.50"></text></g><g><title>CoreFoundation`_CFBundleDlfcnLoadFramework (5 samples, 0.05%)</title><rect x="1.2680%" y="325" width="0.0470%" height="15" fill="rgb(246,185,52)" fg:x="135" fg:w="5"/><text x="1.5180%" y="335.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (5 samples, 0.05%)</title><rect x="1.2680%" y="309" width="0.0470%" height="15" fill="rgb(252,136,11)" fg:x="135" fg:w="5"/><text x="1.5180%" y="319.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (3 samples, 0.03%)</title><rect x="1.2867%" y="293" width="0.0282%" height="15" fill="rgb(219,138,53)" fg:x="137" fg:w="3"/><text x="1.5367%" y="303.50"></text></g><g><title>libobjc.A.dylib`map_images (3 samples, 0.03%)</title><rect x="1.2867%" y="277" width="0.0282%" height="15" fill="rgb(211,51,23)" fg:x="137" fg:w="3"/><text x="1.5367%" y="287.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (3 samples, 0.03%)</title><rect x="1.2867%" y="261" width="0.0282%" height="15" fill="rgb(247,221,28)" fg:x="137" fg:w="3"/><text x="1.5367%" y="271.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (3 samples, 0.03%)</title><rect x="1.2867%" y="245" width="0.0282%" height="15" fill="rgb(251,222,45)" fg:x="137" fg:w="3"/><text x="1.5367%" y="255.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (3 samples, 0.03%)</title><rect x="1.2867%" y="229" width="0.0282%" height="15" fill="rgb(217,162,53)" fg:x="137" fg:w="3"/><text x="1.5367%" y="239.50"></text></g><g><title>Metal`-[MTLIOAccelServiceGlobalContext init] (6 samples, 0.06%)</title><rect x="1.2680%" y="405" width="0.0564%" height="15" fill="rgb(229,93,14)" fg:x="135" fg:w="6"/><text x="1.5180%" y="415.50"></text></g><g><title>Metal`getMetalPluginClassForService (6 samples, 0.06%)</title><rect x="1.2680%" y="389" width="0.0564%" height="15" fill="rgb(209,67,49)" fg:x="135" fg:w="6"/><text x="1.5180%" y="399.50"></text></g><g><title>Foundation`-[NSBundle classNamed:] (6 samples, 0.06%)</title><rect x="1.2680%" y="373" width="0.0564%" height="15" fill="rgb(213,87,29)" fg:x="135" fg:w="6"/><text x="1.5180%" y="383.50"></text></g><g><title>Foundation`-[NSBundle loadAndReturnError:] (6 samples, 0.06%)</title><rect x="1.2680%" y="357" width="0.0564%" height="15" fill="rgb(205,151,52)" fg:x="135" fg:w="6"/><text x="1.5180%" y="367.50"></text></g><g><title>CoreFoundation`_CFBundleLoadExecutableAndReturnError (6 samples, 0.06%)</title><rect x="1.2680%" y="341" width="0.0564%" height="15" fill="rgb(253,215,39)" fg:x="135" fg:w="6"/><text x="1.5180%" y="351.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice initWithAcceleratorPort:simultaneousInstances:] (2 samples, 0.02%)</title><rect x="1.3243%" y="309" width="0.0188%" height="15" fill="rgb(221,220,41)" fg:x="141" fg:w="2"/><text x="1.5743%" y="319.50"></text></g><g><title>libMobileGestalt.dylib`MGGetBoolAnswer (2 samples, 0.02%)</title><rect x="1.3243%" y="293" width="0.0188%" height="15" fill="rgb(218,133,21)" fg:x="141" fg:w="2"/><text x="1.5743%" y="303.50"></text></g><g><title>libMobileGestalt.dylib`0x00000001923d560c (2 samples, 0.02%)</title><rect x="1.3243%" y="277" width="0.0188%" height="15" fill="rgb(221,193,43)" fg:x="141" fg:w="2"/><text x="1.5743%" y="287.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice setupCompiler:] (2 samples, 0.02%)</title><rect x="1.3431%" y="309" width="0.0188%" height="15" fill="rgb(240,128,52)" fg:x="143" fg:w="2"/><text x="1.5931%" y="319.50"></text></g><g><title>Metal`-[MTLIOAccelServiceGlobalContext processPendingCreateIOAccelServiceRequests] (5 samples, 0.05%)</title><rect x="1.3243%" y="405" width="0.0470%" height="15" fill="rgb(253,114,12)" fg:x="141" fg:w="5"/><text x="1.5743%" y="415.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (5 samples, 0.05%)</title><rect x="1.3243%" y="389" width="0.0470%" height="15" fill="rgb(215,223,47)" fg:x="141" fg:w="5"/><text x="1.5743%" y="399.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.05%)</title><rect x="1.3243%" y="373" width="0.0470%" height="15" fill="rgb(248,225,23)" fg:x="141" fg:w="5"/><text x="1.5743%" y="383.50"></text></g><g><title>Metal`-[MTLIOAccelServiceGlobalContext registerService:deviceClass:] (5 samples, 0.05%)</title><rect x="1.3243%" y="357" width="0.0470%" height="15" fill="rgb(250,108,0)" fg:x="141" fg:w="5"/><text x="1.5743%" y="367.50"></text></g><g><title>Metal`-[MTLIOAccelService initWithAcceleratorPort:deviceClass:] (5 samples, 0.05%)</title><rect x="1.3243%" y="341" width="0.0470%" height="15" fill="rgb(228,208,7)" fg:x="141" fg:w="5"/><text x="1.5743%" y="351.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GDevice initWithAcceleratorPort:] (5 samples, 0.05%)</title><rect x="1.3243%" y="325" width="0.0470%" height="15" fill="rgb(244,45,10)" fg:x="141" fg:w="5"/><text x="1.5743%" y="335.50"></text></g><g><title>AppKit`+[NSCGSWindow(NSCGSWindowCreation) windowWithConnectionID:flags:] (13 samples, 0.12%)</title><rect x="1.2586%" y="501" width="0.1221%" height="15" fill="rgb(207,125,25)" fg:x="134" fg:w="13"/><text x="1.5086%" y="511.50"></text></g><g><title>AppKit`-[NSCGSWindow initWithConnectionID:flags:] (13 samples, 0.12%)</title><rect x="1.2586%" y="485" width="0.1221%" height="15" fill="rgb(210,195,18)" fg:x="134" fg:w="13"/><text x="1.5086%" y="495.50"></text></g><g><title>AppKit`-[NSCGSWindow _createRootLayerAndContextIfNeededUsingAsyncBehavior:] (13 samples, 0.12%)</title><rect x="1.2586%" y="469" width="0.1221%" height="15" fill="rgb(249,80,12)" fg:x="134" fg:w="13"/><text x="1.5086%" y="479.50"></text></g><g><title>AppKit`-[NSCGSWindow _createContext] (13 samples, 0.12%)</title><rect x="1.2586%" y="453" width="0.1221%" height="15" fill="rgb(221,65,9)" fg:x="134" fg:w="13"/><text x="1.5086%" y="463.50"></text></g><g><title>Metal`MTLCopyAllDevices (13 samples, 0.12%)</title><rect x="1.2586%" y="437" width="0.1221%" height="15" fill="rgb(235,49,36)" fg:x="134" fg:w="13"/><text x="1.5086%" y="447.50"></text></g><g><title>Metal`MTLRegisterDevices (12 samples, 0.11%)</title><rect x="1.2680%" y="421" width="0.1127%" height="15" fill="rgb(225,32,20)" fg:x="135" fg:w="12"/><text x="1.5180%" y="431.50"></text></g><g><title>AppKit`-[NSWindow _commonAwake] (17 samples, 0.16%)</title><rect x="1.2398%" y="533" width="0.1597%" height="15" fill="rgb(215,141,46)" fg:x="132" fg:w="17"/><text x="1.4898%" y="543.50"></text></g><g><title>AppKit`_NXCreateWindow (15 samples, 0.14%)</title><rect x="1.2586%" y="517" width="0.1409%" height="15" fill="rgb(250,160,47)" fg:x="134" fg:w="15"/><text x="1.5086%" y="527.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (49 samples, 0.46%)</title><rect x="0.9486%" y="549" width="0.4602%" height="15" fill="rgb(216,222,40)" fg:x="101" fg:w="49"/><text x="1.1986%" y="559.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (58 samples, 0.54%)</title><rect x="0.8735%" y="581" width="0.5448%" height="15" fill="rgb(234,217,39)" fg:x="93" fg:w="58"/><text x="1.1235%" y="591.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (58 samples, 0.54%)</title><rect x="0.8735%" y="565" width="0.5448%" height="15" fill="rgb(207,178,40)" fg:x="93" fg:w="58"/><text x="1.1235%" y="575.50"></text></g><g><title>AppKit`-[NSWindow makeKeyAndOrderFront:] (2 samples, 0.02%)</title><rect x="1.4182%" y="581" width="0.0188%" height="15" fill="rgb(221,136,13)" fg:x="151" fg:w="2"/><text x="1.6682%" y="591.50"></text></g><g><title>ostinato`&lt;ostinato::App as winit::application::ApplicationHandler&lt;ostinato::State&gt;&gt;::resumed (89 samples, 0.84%)</title><rect x="0.6105%" y="629" width="0.8359%" height="15" fill="rgb(249,199,10)" fg:x="65" fg:w="89"/><text x="0.8605%" y="639.50"></text></g><g><title>ostinato`winit::platform_impl::macos::window::Window::new (61 samples, 0.57%)</title><rect x="0.8735%" y="613" width="0.5729%" height="15" fill="rgb(249,222,13)" fg:x="93" fg:w="61"/><text x="1.1235%" y="623.50"></text></g><g><title>ostinato`winit::platform_impl::macos::window_delegate::WindowDelegate::new (61 samples, 0.57%)</title><rect x="0.8735%" y="597" width="0.5729%" height="15" fill="rgb(244,185,38)" fg:x="93" fg:w="61"/><text x="1.1235%" y="607.50"></text></g><g><title>ostinato`winit::platform_impl::macos::app_state::ApplicationDelegate::dispatch_init_events (90 samples, 0.85%)</title><rect x="0.6105%" y="677" width="0.8453%" height="15" fill="rgb(236,202,9)" fg:x="65" fg:w="90"/><text x="0.8605%" y="687.50"></text></g><g><title>ostinato`winit::platform_impl::macos::event_handler::EventHandler::handle_event (90 samples, 0.85%)</title><rect x="0.6105%" y="661" width="0.8453%" height="15" fill="rgb(250,229,37)" fg:x="65" fg:w="90"/><text x="0.8605%" y="671.50"></text></g><g><title>ostinato`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (90 samples, 0.85%)</title><rect x="0.6105%" y="645" width="0.8453%" height="15" fill="rgb(206,174,23)" fg:x="65" fg:w="90"/><text x="0.8605%" y="655.50"></text></g><g><title>libobjc.A.dylib`getProtocol(char const*) (9 samples, 0.08%)</title><rect x="1.5216%" y="469" width="0.0845%" height="15" fill="rgb(211,33,43)" fg:x="162" fg:w="9"/><text x="1.7716%" y="479.50"></text></g><g><title>libobjc.A.dylib`_mapStrHash(_NXMapTable*, void const*) (9 samples, 0.08%)</title><rect x="1.5216%" y="453" width="0.0845%" height="15" fill="rgb(245,58,50)" fg:x="162" fg:w="9"/><text x="1.7716%" y="463.50"></text></g><g><title>AppKit`-[NSApplication setMainMenu:] (23 samples, 0.22%)</title><rect x="1.4558%" y="629" width="0.2160%" height="15" fill="rgb(244,68,36)" fg:x="155" fg:w="23"/><text x="1.7058%" y="639.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _customizeMainMenu] (23 samples, 0.22%)</title><rect x="1.4558%" y="613" width="0.2160%" height="15" fill="rgb(232,229,15)" fg:x="155" fg:w="23"/><text x="1.7058%" y="623.50"></text></g><g><title>AppKit`-[NSApplication(NSMenuUpdating) _addTextInputMenuItems:] (23 samples, 0.22%)</title><rect x="1.4558%" y="597" width="0.2160%" height="15" fill="rgb(254,30,23)" fg:x="155" fg:w="23"/><text x="1.7058%" y="607.50"></text></g><g><title>AppKit`+[NSTextView(NSTextView_WritingTools) _supportsWritingTools] (23 samples, 0.22%)</title><rect x="1.4558%" y="581" width="0.2160%" height="15" fill="rgb(235,160,14)" fg:x="155" fg:w="23"/><text x="1.7058%" y="591.50"></text></g><g><title>AppKit`WritingToolsUILibraryCore (23 samples, 0.22%)</title><rect x="1.4558%" y="565" width="0.2160%" height="15" fill="rgb(212,155,44)" fg:x="155" fg:w="23"/><text x="1.7058%" y="575.50"></text></g><g><title>SoftLinking`_sl_dlopen (23 samples, 0.22%)</title><rect x="1.4558%" y="549" width="0.2160%" height="15" fill="rgb(226,2,50)" fg:x="155" fg:w="23"/><text x="1.7058%" y="559.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (23 samples, 0.22%)</title><rect x="1.4558%" y="533" width="0.2160%" height="15" fill="rgb(234,177,6)" fg:x="155" fg:w="23"/><text x="1.7058%" y="543.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (22 samples, 0.21%)</title><rect x="1.4652%" y="517" width="0.2066%" height="15" fill="rgb(217,24,9)" fg:x="156" fg:w="22"/><text x="1.7152%" y="527.50"></text></g><g><title>libobjc.A.dylib`map_images (22 samples, 0.21%)</title><rect x="1.4652%" y="501" width="0.2066%" height="15" fill="rgb(220,13,46)" fg:x="156" fg:w="22"/><text x="1.7152%" y="511.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (21 samples, 0.20%)</title><rect x="1.4746%" y="485" width="0.1972%" height="15" fill="rgb(239,221,27)" fg:x="157" fg:w="21"/><text x="1.7246%" y="495.50"></text></g><g><title>libobjc.A.dylib`load_categories_nolock(header_info*) (7 samples, 0.07%)</title><rect x="1.6061%" y="469" width="0.0657%" height="15" fill="rgb(222,198,25)" fg:x="171" fg:w="7"/><text x="1.8561%" y="479.50"></text></g><g><title>libobjc.A.dylib`load_categories_nolock(header_info*)::$_0::operator() (7 samples, 0.07%)</title><rect x="1.6061%" y="453" width="0.0657%" height="15" fill="rgb(211,99,13)" fg:x="171" fg:w="7"/><text x="1.8561%" y="463.50"></text></g><g><title>AppKit`-[NSApplication setMainMenu:] (26 samples, 0.24%)</title><rect x="1.4558%" y="661" width="0.2442%" height="15" fill="rgb(232,111,31)" fg:x="155" fg:w="26"/><text x="1.7058%" y="671.50"></text></g><g><title>AppKit`-[NSMenu _setMenuName:] (26 samples, 0.24%)</title><rect x="1.4558%" y="645" width="0.2442%" height="15" fill="rgb(245,82,37)" fg:x="155" fg:w="26"/><text x="1.7058%" y="655.50"></text></g><g><title>AppKit`-[NSMenu _createInProcessMenuImpl] (3 samples, 0.03%)</title><rect x="1.6718%" y="629" width="0.0282%" height="15" fill="rgb(227,149,46)" fg:x="178" fg:w="3"/><text x="1.9218%" y="639.50"></text></g><g><title>AppKit`-[NSMenuBarImpl initWithMenu:] (3 samples, 0.03%)</title><rect x="1.6718%" y="613" width="0.0282%" height="15" fill="rgb(218,36,50)" fg:x="178" fg:w="3"/><text x="1.9218%" y="623.50"></text></g><g><title>AppKit`-[NSCocoaMenuImpl initWithMenu:] (3 samples, 0.03%)</title><rect x="1.6718%" y="597" width="0.0282%" height="15" fill="rgb(226,80,48)" fg:x="178" fg:w="3"/><text x="1.9218%" y="607.50"></text></g><g><title>AppKit`-[NSResponder init] (3 samples, 0.03%)</title><rect x="1.6718%" y="581" width="0.0282%" height="15" fill="rgb(238,224,15)" fg:x="178" fg:w="3"/><text x="1.9218%" y="591.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (3 samples, 0.03%)</title><rect x="1.6718%" y="565" width="0.0282%" height="15" fill="rgb(241,136,10)" fg:x="178" fg:w="3"/><text x="1.9218%" y="575.50"></text></g><g><title>AppKit`lockedClassInfoForClass (3 samples, 0.03%)</title><rect x="1.6718%" y="549" width="0.0282%" height="15" fill="rgb(208,32,45)" fg:x="178" fg:w="3"/><text x="1.9218%" y="559.50"></text></g><g><title>AppKit`lockedClassInfoForClass (3 samples, 0.03%)</title><rect x="1.6718%" y="533" width="0.0282%" height="15" fill="rgb(207,135,9)" fg:x="178" fg:w="3"/><text x="1.9218%" y="543.50"></text></g><g><title>AppKit`initializePropertyInfo (3 samples, 0.03%)</title><rect x="1.6718%" y="517" width="0.0282%" height="15" fill="rgb(206,86,44)" fg:x="178" fg:w="3"/><text x="1.9218%" y="527.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (2 samples, 0.02%)</title><rect x="1.6812%" y="501" width="0.0188%" height="15" fill="rgb(245,177,15)" fg:x="179" fg:w="2"/><text x="1.9312%" y="511.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (2 samples, 0.02%)</title><rect x="1.6812%" y="485" width="0.0188%" height="15" fill="rgb(206,64,50)" fg:x="179" fg:w="2"/><text x="1.9312%" y="495.50"></text></g><g><title>CoreUI`+[CUIThemeFacet themeNamed:forBundleIdentifier:error:] (2 samples, 0.02%)</title><rect x="1.7188%" y="373" width="0.0188%" height="15" fill="rgb(234,36,40)" fg:x="183" fg:w="2"/><text x="1.9688%" y="383.50"></text></g><g><title>CoreUI`PerformBlockWithThemeRefCache (2 samples, 0.02%)</title><rect x="1.7188%" y="357" width="0.0188%" height="15" fill="rgb(213,64,8)" fg:x="183" fg:w="2"/><text x="1.9688%" y="367.50"></text></g><g><title>CoreUI`__RunTimeThemeRefForBundleIdentifierAndName_block_invoke (2 samples, 0.02%)</title><rect x="1.7188%" y="341" width="0.0188%" height="15" fill="rgb(210,75,36)" fg:x="183" fg:w="2"/><text x="1.9688%" y="351.50"></text></g><g><title>CoreUI`+[CUICatalog defaultUICatalogForBundle:] (3 samples, 0.03%)</title><rect x="1.7188%" y="453" width="0.0282%" height="15" fill="rgb(229,88,21)" fg:x="183" fg:w="3"/><text x="1.9688%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.03%)</title><rect x="1.7188%" y="437" width="0.0282%" height="15" fill="rgb(252,204,47)" fg:x="183" fg:w="3"/><text x="1.9688%" y="447.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.03%)</title><rect x="1.7188%" y="421" width="0.0282%" height="15" fill="rgb(208,77,27)" fg:x="183" fg:w="3"/><text x="1.9688%" y="431.50"></text></g><g><title>CoreUI`__40+[CUICatalog defaultUICatalogForBundle:]_block_invoke.5 (3 samples, 0.03%)</title><rect x="1.7188%" y="405" width="0.0282%" height="15" fill="rgb(221,76,26)" fg:x="183" fg:w="3"/><text x="1.9688%" y="415.50"></text></g><g><title>CoreUI`-[CUICatalog initWithName:fromBundle:error:] (3 samples, 0.03%)</title><rect x="1.7188%" y="389" width="0.0282%" height="15" fill="rgb(225,139,18)" fg:x="183" fg:w="3"/><text x="1.9688%" y="399.50"></text></g><g><title>AppKit`catalogWithSystemSymbolName (4 samples, 0.04%)</title><rect x="1.7188%" y="517" width="0.0376%" height="15" fill="rgb(230,137,11)" fg:x="183" fg:w="4"/><text x="1.9688%" y="527.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.04%)</title><rect x="1.7188%" y="501" width="0.0376%" height="15" fill="rgb(212,28,1)" fg:x="183" fg:w="4"/><text x="1.9688%" y="511.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.04%)</title><rect x="1.7188%" y="485" width="0.0376%" height="15" fill="rgb(248,164,17)" fg:x="183" fg:w="4"/><text x="1.9688%" y="495.50"></text></g><g><title>AppKit`__NSImageGetCoreGlyphsCatalog_block_invoke (4 samples, 0.04%)</title><rect x="1.7188%" y="469" width="0.0376%" height="15" fill="rgb(222,171,42)" fg:x="183" fg:w="4"/><text x="1.9688%" y="479.50"></text></g><g><title>ostinato`objc2_app_kit::generated::__NSMenuItem::NSMenuItem::separatorItem (6 samples, 0.06%)</title><rect x="1.7094%" y="661" width="0.0564%" height="15" fill="rgb(243,84,45)" fg:x="182" fg:w="6"/><text x="1.9594%" y="671.50"></text></g><g><title>AppKit`+[NSMenuItem separatorItem] (6 samples, 0.06%)</title><rect x="1.7094%" y="645" width="0.0564%" height="15" fill="rgb(252,49,23)" fg:x="182" fg:w="6"/><text x="1.9594%" y="655.50"></text></g><g><title>AppKit`-[NSMenuItem _configureAsSeparatorItem] (6 samples, 0.06%)</title><rect x="1.7094%" y="629" width="0.0564%" height="15" fill="rgb(215,19,7)" fg:x="182" fg:w="6"/><text x="1.9594%" y="639.50"></text></g><g><title>AppKit`-[NSMenuItem setTitle:] (6 samples, 0.06%)</title><rect x="1.7094%" y="613" width="0.0564%" height="15" fill="rgb(238,81,41)" fg:x="182" fg:w="6"/><text x="1.9594%" y="623.50"></text></g><g><title>Foundation`_NSFaultInObject (6 samples, 0.06%)</title><rect x="1.7094%" y="597" width="0.0564%" height="15" fill="rgb(210,199,37)" fg:x="182" fg:w="6"/><text x="1.9594%" y="607.50"></text></g><g><title>AppKit`-[NSExtraMIData init] (6 samples, 0.06%)</title><rect x="1.7094%" y="581" width="0.0564%" height="15" fill="rgb(244,192,49)" fg:x="182" fg:w="6"/><text x="1.9594%" y="591.50"></text></g><g><title>AppKit`+[NSImage imageNamed:] (6 samples, 0.06%)</title><rect x="1.7094%" y="565" width="0.0564%" height="15" fill="rgb(226,211,11)" fg:x="182" fg:w="6"/><text x="1.9594%" y="575.50"></text></g><g><title>AppKit`+[NSImage _systemImageNamed:] (6 samples, 0.06%)</title><rect x="1.7094%" y="549" width="0.0564%" height="15" fill="rgb(236,162,54)" fg:x="182" fg:w="6"/><text x="1.9594%" y="559.50"></text></g><g><title>AppKit`+[NSImage(NSSymbolImages) _symbolCompatibilityImageNamed:] (5 samples, 0.05%)</title><rect x="1.7188%" y="533" width="0.0470%" height="15" fill="rgb(220,229,9)" fg:x="183" fg:w="5"/><text x="1.9688%" y="543.50"></text></g><g><title>HIToolbox`AEProcessAppleEvent (129 samples, 1.21%)</title><rect x="0.5635%" y="933" width="1.2116%" height="15" fill="rgb(250,87,22)" fg:x="60" fg:w="129"/><text x="0.8135%" y="943.50"></text></g><g><title>AE`aeProcessAppleEvent (129 samples, 1.21%)</title><rect x="0.5635%" y="917" width="1.2116%" height="15" fill="rgb(239,43,17)" fg:x="60" fg:w="129"/><text x="0.8135%" y="927.50"></text></g><g><title>AE`0x0000000193ea5bdc (129 samples, 1.21%)</title><rect x="0.5635%" y="901" width="1.2116%" height="15" fill="rgb(231,177,25)" fg:x="60" fg:w="129"/><text x="0.8135%" y="911.50"></text></g><g><title>AE`0x0000000193ea5c88 (129 samples, 1.21%)</title><rect x="0.5635%" y="885" width="1.2116%" height="15" fill="rgb(219,179,1)" fg:x="60" fg:w="129"/><text x="0.8135%" y="895.50"></text></g><g><title>Foundation`_NSAppleEventManagerGenericHandler (129 samples, 1.21%)</title><rect x="0.5635%" y="869" width="1.2116%" height="15" fill="rgb(238,219,53)" fg:x="60" fg:w="129"/><text x="0.8135%" y="879.50"></text></g><g><title>Foundation`-[NSAppleEventManager dispatchRawAppleEvent:withRawReply:handlerRefCon:] (129 samples, 1.21%)</title><rect x="0.5635%" y="853" width="1.2116%" height="15" fill="rgb(232,167,36)" fg:x="60" fg:w="129"/><text x="0.8135%" y="863.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleCoreEvent:withReplyEvent:] (129 samples, 1.21%)</title><rect x="0.5635%" y="837" width="1.2116%" height="15" fill="rgb(244,19,51)" fg:x="60" fg:w="129"/><text x="0.8135%" y="847.50"></text></g><g><title>AppKit`-[NSApplication(NSAppleEventHandling) _handleAEOpenEvent:] (129 samples, 1.21%)</title><rect x="0.5635%" y="821" width="1.2116%" height="15" fill="rgb(224,6,22)" fg:x="60" fg:w="129"/><text x="0.8135%" y="831.50"></text></g><g><title>AppKit`-[NSApplication _sendFinishLaunchingNotification] (125 samples, 1.17%)</title><rect x="0.6011%" y="805" width="1.1740%" height="15" fill="rgb(224,145,5)" fg:x="64" fg:w="125"/><text x="0.8511%" y="815.50"></text></g><g><title>AppKit`-[NSApplication _postDidFinishNotification] (125 samples, 1.17%)</title><rect x="0.6011%" y="789" width="1.1740%" height="15" fill="rgb(234,130,49)" fg:x="64" fg:w="125"/><text x="0.8511%" y="799.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (125 samples, 1.17%)</title><rect x="0.6011%" y="773" width="1.1740%" height="15" fill="rgb(254,6,2)" fg:x="64" fg:w="125"/><text x="0.8511%" y="783.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (125 samples, 1.17%)</title><rect x="0.6011%" y="757" width="1.1740%" height="15" fill="rgb(208,96,46)" fg:x="64" fg:w="125"/><text x="0.8511%" y="767.50"></text></g><g><title>CoreFoundation`_CFXRegistrationPost (125 samples, 1.17%)</title><rect x="0.6011%" y="741" width="1.1740%" height="15" fill="rgb(239,3,39)" fg:x="64" fg:w="125"/><text x="0.8511%" y="751.50"></text></g><g><title>CoreFoundation`___CFXRegistrationPost_block_invoke (125 samples, 1.17%)</title><rect x="0.6011%" y="725" width="1.1740%" height="15" fill="rgb(233,210,1)" fg:x="64" fg:w="125"/><text x="0.8511%" y="735.50"></text></g><g><title>CoreFoundation`__CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ (125 samples, 1.17%)</title><rect x="0.6011%" y="709" width="1.1740%" height="15" fill="rgb(244,137,37)" fg:x="64" fg:w="125"/><text x="0.8511%" y="719.50"></text></g><g><title>ostinato`winit::platform_impl::macos::app_state::ApplicationDelegate::app_did_finish_launching (125 samples, 1.17%)</title><rect x="0.6011%" y="693" width="1.1740%" height="15" fill="rgb(240,136,2)" fg:x="64" fg:w="125"/><text x="0.8511%" y="703.50"></text></g><g><title>ostinato`winit::platform_impl::macos::menu::initialize (34 samples, 0.32%)</title><rect x="1.4558%" y="677" width="0.3193%" height="15" fill="rgb(239,18,37)" fg:x="155" fg:w="34"/><text x="1.7058%" y="687.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (3 samples, 0.03%)</title><rect x="1.7939%" y="869" width="0.0282%" height="15" fill="rgb(218,185,22)" fg:x="191" fg:w="3"/><text x="2.0439%" y="879.50"></text></g><g><title>QuartzCore`CA::Layer::layout_if_needed (2 samples, 0.02%)</title><rect x="1.8597%" y="789" width="0.0188%" height="15" fill="rgb(225,218,4)" fg:x="198" fg:w="2"/><text x="2.1097%" y="799.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (16 samples, 0.15%)</title><rect x="1.8785%" y="789" width="0.1503%" height="15" fill="rgb(230,182,32)" fg:x="200" fg:w="16"/><text x="2.1285%" y="799.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (15 samples, 0.14%)</title><rect x="1.8879%" y="773" width="0.1409%" height="15" fill="rgb(242,56,43)" fg:x="201" fg:w="15"/><text x="2.1379%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (15 samples, 0.14%)</title><rect x="1.8879%" y="757" width="0.1409%" height="15" fill="rgb(233,99,24)" fg:x="201" fg:w="15"/><text x="2.1379%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (15 samples, 0.14%)</title><rect x="1.8879%" y="741" width="0.1409%" height="15" fill="rgb(234,209,42)" fg:x="201" fg:w="15"/><text x="2.1379%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (15 samples, 0.14%)</title><rect x="1.8879%" y="725" width="0.1409%" height="15" fill="rgb(227,7,12)" fg:x="201" fg:w="15"/><text x="2.1379%" y="735.50"></text></g><g><title>CoreGraphics`CGContextDrawImage (2 samples, 0.02%)</title><rect x="2.0381%" y="661" width="0.0188%" height="15" fill="rgb(245,203,43)" fg:x="217" fg:w="2"/><text x="2.2881%" y="671.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (2 samples, 0.02%)</title><rect x="2.0381%" y="645" width="0.0188%" height="15" fill="rgb(238,205,33)" fg:x="217" fg:w="2"/><text x="2.2881%" y="655.50"></text></g><g><title>CoreGraphics`ripc_DrawImage (2 samples, 0.02%)</title><rect x="2.0381%" y="629" width="0.0188%" height="15" fill="rgb(231,56,7)" fg:x="217" fg:w="2"/><text x="2.2881%" y="639.50"></text></g><g><title>AppKit`_NSCGSWindowEnumerateForCommit (6 samples, 0.06%)</title><rect x="2.0381%" y="709" width="0.0564%" height="15" fill="rgb(244,186,29)" fg:x="217" fg:w="6"/><text x="2.2881%" y="719.50"></text></g><g><title>AppKit`__NSCGSWindowMarkProperty__block_invoke_2 (6 samples, 0.06%)</title><rect x="2.0381%" y="693" width="0.0564%" height="15" fill="rgb(234,111,31)" fg:x="217" fg:w="6"/><text x="2.2881%" y="703.50"></text></g><g><title>SkyLight`SLSTransactionSetWindowCornerMask (6 samples, 0.06%)</title><rect x="2.0381%" y="677" width="0.0564%" height="15" fill="rgb(241,149,10)" fg:x="217" fg:w="6"/><text x="2.2881%" y="687.50"></text></g><g><title>CoreGraphics`CGContextFillRect (4 samples, 0.04%)</title><rect x="2.0569%" y="661" width="0.0376%" height="15" fill="rgb(249,206,44)" fg:x="219" fg:w="4"/><text x="2.3069%" y="671.50"></text></g><g><title>CoreGraphics`CGContextFillRects (4 samples, 0.04%)</title><rect x="2.0569%" y="645" width="0.0376%" height="15" fill="rgb(251,153,30)" fg:x="219" fg:w="4"/><text x="2.3069%" y="655.50"></text></g><g><title>CoreGraphics`ripc_DrawRects (4 samples, 0.04%)</title><rect x="2.0569%" y="629" width="0.0376%" height="15" fill="rgb(239,152,38)" fg:x="219" fg:w="4"/><text x="2.3069%" y="639.50"></text></g><g><title>CoreGraphics`ripc_GetRenderingState (4 samples, 0.04%)</title><rect x="2.0569%" y="613" width="0.0376%" height="15" fill="rgb(249,139,47)" fg:x="219" fg:w="4"/><text x="2.3069%" y="623.50"></text></g><g><title>CoreGraphics`ripc_AcquireRIPImageData (2 samples, 0.02%)</title><rect x="2.0757%" y="597" width="0.0188%" height="15" fill="rgb(244,64,35)" fg:x="221" fg:w="2"/><text x="2.3257%" y="607.50"></text></g><g><title>AppKit`NSCGSTransactionRunPreCommitActionsForOrder_ (7 samples, 0.07%)</title><rect x="2.0381%" y="741" width="0.0657%" height="15" fill="rgb(216,46,15)" fg:x="217" fg:w="7"/><text x="2.2881%" y="751.50"></text></g><g><title>AppKit`__NSCGSWindowMarkProperty__block_invoke (7 samples, 0.07%)</title><rect x="2.0381%" y="725" width="0.0657%" height="15" fill="rgb(250,74,19)" fg:x="217" fg:w="7"/><text x="2.2881%" y="735.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (8 samples, 0.08%)</title><rect x="2.0381%" y="789" width="0.0751%" height="15" fill="rgb(249,42,33)" fg:x="217" fg:w="8"/><text x="2.2881%" y="799.50"></text></g><g><title>AppKit`__39+[_NSCGSTransaction currentTransaction]_block_invoke.26 (8 samples, 0.08%)</title><rect x="2.0381%" y="773" width="0.0751%" height="15" fill="rgb(242,149,17)" fg:x="217" fg:w="8"/><text x="2.2881%" y="783.50"></text></g><g><title>AppKit`NSCGSTransactionRunPreCommitActions_ (8 samples, 0.08%)</title><rect x="2.0381%" y="757" width="0.0751%" height="15" fill="rgb(244,29,21)" fg:x="217" fg:w="8"/><text x="2.2881%" y="767.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (31 samples, 0.29%)</title><rect x="1.8409%" y="805" width="0.2912%" height="15" fill="rgb(220,130,37)" fg:x="196" fg:w="31"/><text x="2.0909%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (33 samples, 0.31%)</title><rect x="1.8315%" y="869" width="0.3099%" height="15" fill="rgb(211,67,2)" fg:x="195" fg:w="33"/><text x="2.0815%" y="879.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (33 samples, 0.31%)</title><rect x="1.8315%" y="853" width="0.3099%" height="15" fill="rgb(235,68,52)" fg:x="195" fg:w="33"/><text x="2.0815%" y="863.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (33 samples, 0.31%)</title><rect x="1.8315%" y="837" width="0.3099%" height="15" fill="rgb(246,142,3)" fg:x="195" fg:w="33"/><text x="2.0815%" y="847.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (33 samples, 0.31%)</title><rect x="1.8315%" y="821" width="0.3099%" height="15" fill="rgb(241,25,7)" fg:x="195" fg:w="33"/><text x="2.0815%" y="831.50"></text></g><g><title>CoreFoundation`CFAbsoluteTimeGetCurrent (3 samples, 0.03%)</title><rect x="2.2166%" y="853" width="0.0282%" height="15" fill="rgb(242,119,39)" fg:x="236" fg:w="3"/><text x="2.4666%" y="863.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3 samples, 0.03%)</title><rect x="2.2166%" y="837" width="0.0282%" height="15" fill="rgb(241,98,45)" fg:x="236" fg:w="3"/><text x="2.4666%" y="847.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (2 samples, 0.02%)</title><rect x="2.3011%" y="645" width="0.0188%" height="15" fill="rgb(254,28,30)" fg:x="245" fg:w="2"/><text x="2.5511%" y="655.50"></text></g><g><title>AppKit`+[_NSScreenConfiguration invalidateConfigurationForReason:] (3 samples, 0.03%)</title><rect x="2.3011%" y="677" width="0.0282%" height="15" fill="rgb(241,142,54)" fg:x="245" fg:w="3"/><text x="2.5511%" y="687.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateForReason (3 samples, 0.03%)</title><rect x="2.3011%" y="661" width="0.0282%" height="15" fill="rgb(222,85,15)" fg:x="245" fg:w="3"/><text x="2.5511%" y="671.50"></text></g><g><title>AppKit`-[NSCGSWindowCornerMask caImageForScale:size:center:] (3 samples, 0.03%)</title><rect x="2.3387%" y="485" width="0.0282%" height="15" fill="rgb(210,85,47)" fg:x="249" fg:w="3"/><text x="2.5887%" y="495.50"></text></g><g><title>AppKit`-[NSCGSWindowCornerRadiusMask imageForScale:size:center:] (3 samples, 0.03%)</title><rect x="2.3387%" y="469" width="0.0282%" height="15" fill="rgb(224,206,25)" fg:x="249" fg:w="3"/><text x="2.5887%" y="479.50"></text></g><g><title>AppKit`-[NSCGSWindow _updateLayer] (5 samples, 0.05%)</title><rect x="2.3387%" y="501" width="0.0470%" height="15" fill="rgb(243,201,19)" fg:x="249" fg:w="5"/><text x="2.5887%" y="511.50"></text></g><g><title>AppKit`-[NSCGSWindow setCornerMask:] (6 samples, 0.06%)</title><rect x="2.3387%" y="517" width="0.0564%" height="15" fill="rgb(236,59,4)" fg:x="249" fg:w="6"/><text x="2.5887%" y="527.50"></text></g><g><title>AppKit`-[NSImage CGImageForProposedRect:context:hints:] (2 samples, 0.02%)</title><rect x="2.3950%" y="501" width="0.0188%" height="15" fill="rgb(254,179,45)" fg:x="255" fg:w="2"/><text x="2.6450%" y="511.50"></text></g><g><title>AppKit`__52-[NSAppearance _createLayerContents:contentsCenter:]_block_invoke (2 samples, 0.02%)</title><rect x="2.4138%" y="437" width="0.0188%" height="15" fill="rgb(226,14,10)" fg:x="257" fg:w="2"/><text x="2.6638%" y="447.50"></text></g><g><title>CoreUI`CUICreateLayerContents (2 samples, 0.02%)</title><rect x="2.4138%" y="421" width="0.0188%" height="15" fill="rgb(244,27,41)" fg:x="257" fg:w="2"/><text x="2.6638%" y="431.50"></text></g><g><title>CoreUI`CUIRenderer::CreateLayerContents (2 samples, 0.02%)</title><rect x="2.4138%" y="405" width="0.0188%" height="15" fill="rgb(235,35,32)" fg:x="257" fg:w="2"/><text x="2.6638%" y="415.50"></text></g><g><title>AppKit`-[NSAppearance _createLayerContents:contentsCenter:] (3 samples, 0.03%)</title><rect x="2.4138%" y="469" width="0.0282%" height="15" fill="rgb(218,68,31)" fg:x="257" fg:w="3"/><text x="2.6638%" y="479.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.03%)</title><rect x="2.4138%" y="453" width="0.0282%" height="15" fill="rgb(207,120,37)" fg:x="257" fg:w="3"/><text x="2.6638%" y="463.50"></text></g><g><title>AppKit`-[NSWindow _cornerMaskChanged] (12 samples, 0.11%)</title><rect x="2.3387%" y="533" width="0.1127%" height="15" fill="rgb(227,98,0)" fg:x="249" fg:w="12"/><text x="2.5887%" y="543.50"></text></g><g><title>AppKit`-[NSWindow _createCornerMaskFromCornerMaskImage] (6 samples, 0.06%)</title><rect x="2.3950%" y="517" width="0.0564%" height="15" fill="rgb(207,7,3)" fg:x="255" fg:w="6"/><text x="2.6450%" y="527.50"></text></g><g><title>AppKit`-[NSWindow _cornerMask] (4 samples, 0.04%)</title><rect x="2.4138%" y="501" width="0.0376%" height="15" fill="rgb(206,98,19)" fg:x="257" fg:w="4"/><text x="2.6638%" y="511.50"></text></g><g><title>AppKit`+[NSThemeFrame _cornerMaskImageForWindowType:window:] (4 samples, 0.04%)</title><rect x="2.4138%" y="485" width="0.0376%" height="15" fill="rgb(217,5,26)" fg:x="257" fg:w="4"/><text x="2.6638%" y="495.50"></text></g><g><title>AppKit`__67-[NSWindow _updateSettingsSendingScreenChangeNotificationToScreen:]_block_invoke (13 samples, 0.12%)</title><rect x="2.3387%" y="549" width="0.1221%" height="15" fill="rgb(235,190,38)" fg:x="249" fg:w="13"/><text x="2.5887%" y="559.50"></text></g><g><title>AppKit`-[NSWindow _updateSettingsSendingScreenChangeNotificationToScreen:] (14 samples, 0.13%)</title><rect x="2.3387%" y="581" width="0.1315%" height="15" fill="rgb(247,86,24)" fg:x="249" fg:w="14"/><text x="2.5887%" y="591.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (14 samples, 0.13%)</title><rect x="2.3387%" y="565" width="0.1315%" height="15" fill="rgb(205,101,16)" fg:x="249" fg:w="14"/><text x="2.5887%" y="575.50"></text></g><g><title>AppKit`-[NSWindow _displayChangedSoAdjustWindows:] (15 samples, 0.14%)</title><rect x="2.3387%" y="613" width="0.1409%" height="15" fill="rgb(246,168,33)" fg:x="249" fg:w="15"/><text x="2.5887%" y="623.50"></text></g><g><title>AppKit`-[NSWindow _screenChanged:] (15 samples, 0.14%)</title><rect x="2.3387%" y="597" width="0.1409%" height="15" fill="rgb(231,114,1)" fg:x="249" fg:w="15"/><text x="2.5887%" y="607.50"></text></g><g><title>AppKit`-[NSApplication enumerateWindowsWithOptions:usingBlock:] (16 samples, 0.15%)</title><rect x="2.3387%" y="645" width="0.1503%" height="15" fill="rgb(207,184,53)" fg:x="249" fg:w="16"/><text x="2.5887%" y="655.50"></text></g><g><title>AppKit`___NSApplicationPerformScreenInvalidationReactions_block_invoke (16 samples, 0.15%)</title><rect x="2.3387%" y="629" width="0.1503%" height="15" fill="rgb(224,95,51)" fg:x="249" fg:w="16"/><text x="2.5887%" y="639.50"></text></g><g><title>SkyLight`invocation function for block in CGSDatagramReadStream::mainQueueWakeup (22 samples, 0.21%)</title><rect x="2.2917%" y="773" width="0.2066%" height="15" fill="rgb(212,188,45)" fg:x="244" fg:w="22"/><text x="2.5417%" y="783.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::dispatchMainQueueDatagrams (22 samples, 0.21%)</title><rect x="2.2917%" y="757" width="0.2066%" height="15" fill="rgb(223,154,38)" fg:x="244" fg:w="22"/><text x="2.5417%" y="767.50"></text></g><g><title>SkyLight`(anonymous namespace)::notify_datagram_handler (21 samples, 0.20%)</title><rect x="2.3011%" y="741" width="0.1972%" height="15" fill="rgb(251,22,52)" fg:x="245" fg:w="21"/><text x="2.5511%" y="751.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationMaximumHDRValueChangedNotificationHandler (21 samples, 0.20%)</title><rect x="2.3011%" y="725" width="0.1972%" height="15" fill="rgb(229,209,22)" fg:x="245" fg:w="21"/><text x="2.5511%" y="735.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdateAndInvokeObservers (21 samples, 0.20%)</title><rect x="2.3011%" y="709" width="0.1972%" height="15" fill="rgb(234,138,34)" fg:x="245" fg:w="21"/><text x="2.5511%" y="719.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _reactToDisplayChanges:] (21 samples, 0.20%)</title><rect x="2.3011%" y="693" width="0.1972%" height="15" fill="rgb(212,95,11)" fg:x="245" fg:w="21"/><text x="2.5511%" y="703.50"></text></g><g><title>AppKit`_NSApplicationReactToScreenInvalidation (18 samples, 0.17%)</title><rect x="2.3293%" y="677" width="0.1691%" height="15" fill="rgb(240,179,47)" fg:x="248" fg:w="18"/><text x="2.5793%" y="687.50"></text></g><g><title>AppKit`___NSApplicationReactToScreenInvalidation_block_invoke (18 samples, 0.17%)</title><rect x="2.3293%" y="661" width="0.1691%" height="15" fill="rgb(240,163,11)" fg:x="248" fg:w="18"/><text x="2.5793%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (24 samples, 0.23%)</title><rect x="2.2823%" y="805" width="0.2254%" height="15" fill="rgb(236,37,12)" fg:x="243" fg:w="24"/><text x="2.5323%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (24 samples, 0.23%)</title><rect x="2.2823%" y="789" width="0.2254%" height="15" fill="rgb(232,164,16)" fg:x="243" fg:w="24"/><text x="2.5323%" y="799.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ (27 samples, 0.25%)</title><rect x="2.2729%" y="853" width="0.2536%" height="15" fill="rgb(244,205,15)" fg:x="242" fg:w="27"/><text x="2.5229%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_callback_4CF (27 samples, 0.25%)</title><rect x="2.2729%" y="837" width="0.2536%" height="15" fill="rgb(223,117,47)" fg:x="242" fg:w="27"/><text x="2.5229%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_main_queue_drain (26 samples, 0.24%)</title><rect x="2.2823%" y="821" width="0.2442%" height="15" fill="rgb(244,107,35)" fg:x="243" fg:w="26"/><text x="2.5323%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (2 samples, 0.02%)</title><rect x="2.5077%" y="805" width="0.0188%" height="15" fill="rgb(205,140,8)" fg:x="267" fg:w="2"/><text x="2.7577%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (2 samples, 0.02%)</title><rect x="2.5077%" y="789" width="0.0188%" height="15" fill="rgb(228,84,46)" fg:x="267" fg:w="2"/><text x="2.7577%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (2 samples, 0.02%)</title><rect x="2.5077%" y="773" width="0.0188%" height="15" fill="rgb(254,188,9)" fg:x="267" fg:w="2"/><text x="2.7577%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="2.5077%" y="757" width="0.0188%" height="15" fill="rgb(206,112,54)" fg:x="267" fg:w="2"/><text x="2.7577%" y="767.50"></text></g><g><title>libapp_launch_measurement.dylib`__alm_execute_when_main_queue_idle_with_condition_block_invoke (2 samples, 0.02%)</title><rect x="2.5077%" y="741" width="0.0188%" height="15" fill="rgb(216,84,49)" fg:x="267" fg:w="2"/><text x="2.7577%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (2 samples, 0.02%)</title><rect x="2.5077%" y="725" width="0.0188%" height="15" fill="rgb(214,194,35)" fg:x="267" fg:w="2"/><text x="2.7577%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_drain (2 samples, 0.02%)</title><rect x="2.5077%" y="709" width="0.0188%" height="15" fill="rgb(249,28,3)" fg:x="267" fg:w="2"/><text x="2.7577%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`kevent_qos (2 samples, 0.02%)</title><rect x="2.5077%" y="693" width="0.0188%" height="15" fill="rgb(222,56,52)" fg:x="267" fg:w="2"/><text x="2.7577%" y="703.50"></text></g><g><title>AppKit`___NSMainRunLoopPerformBlockInModes_block_invoke (2 samples, 0.02%)</title><rect x="2.5547%" y="821" width="0.0188%" height="15" fill="rgb(245,217,50)" fg:x="272" fg:w="2"/><text x="2.8047%" y="831.50"></text></g><g><title>CoreFoundation`-[__NSSetM addObject:] (2 samples, 0.02%)</title><rect x="2.6017%" y="725" width="0.0188%" height="15" fill="rgb(213,201,24)" fg:x="277" fg:w="2"/><text x="2.8517%" y="735.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (2 samples, 0.02%)</title><rect x="2.6017%" y="709" width="0.0188%" height="15" fill="rgb(248,116,28)" fg:x="277" fg:w="2"/><text x="2.8517%" y="719.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (2 samples, 0.02%)</title><rect x="2.6017%" y="693" width="0.0188%" height="15" fill="rgb(219,72,43)" fg:x="277" fg:w="2"/><text x="2.8517%" y="703.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin&lt;lockdebug::lock_mixin (2 samples, 0.02%)</title><rect x="2.6017%" y="677" width="0.0188%" height="15" fill="rgb(209,138,14)" fg:x="277" fg:w="2"/><text x="2.8517%" y="687.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (2 samples, 0.02%)</title><rect x="2.6017%" y="661" width="0.0188%" height="15" fill="rgb(222,18,33)" fg:x="277" fg:w="2"/><text x="2.8517%" y="671.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (2 samples, 0.02%)</title><rect x="2.6017%" y="645" width="0.0188%" height="15" fill="rgb(213,199,7)" fg:x="277" fg:w="2"/><text x="2.8517%" y="655.50"></text></g><g><title>ViewBridge`__45-[NSRemoteView advanceToConfigPhaseIfNeeded:]_block_invoke_2 (5 samples, 0.05%)</title><rect x="2.5829%" y="789" width="0.0470%" height="15" fill="rgb(250,110,10)" fg:x="275" fg:w="5"/><text x="2.8329%" y="799.50"></text></g><g><title>ViewBridge`-[NSRemoteView _configureAndRetainServiceMarshalConnection:] (5 samples, 0.05%)</title><rect x="2.5829%" y="773" width="0.0470%" height="15" fill="rgb(248,123,6)" fg:x="275" fg:w="5"/><text x="2.8329%" y="783.50"></text></g><g><title>ViewBridge`+[NSRemoteViewMarshal nsxpcInterface:] (4 samples, 0.04%)</title><rect x="2.5923%" y="757" width="0.0376%" height="15" fill="rgb(206,91,31)" fg:x="276" fg:w="4"/><text x="2.8423%" y="767.50"></text></g><g><title>ViewBridge`-[NSViewBridge validClasses] (3 samples, 0.03%)</title><rect x="2.6017%" y="741" width="0.0282%" height="15" fill="rgb(211,154,13)" fg:x="277" fg:w="3"/><text x="2.8517%" y="751.50"></text></g><g><title>ViewBridge`__deferNSXPCInvocationOntoMainThread_block_invoke (2 samples, 0.02%)</title><rect x="2.6298%" y="789" width="0.0188%" height="15" fill="rgb(225,148,7)" fg:x="280" fg:w="2"/><text x="2.8798%" y="799.50"></text></g><g><title>CoreFoundation`-[NSInvocation invoke] (2 samples, 0.02%)</title><rect x="2.6298%" y="773" width="0.0188%" height="15" fill="rgb(220,160,43)" fg:x="280" fg:w="2"/><text x="2.8798%" y="783.50"></text></g><g><title>CoreFoundation`__invoking___ (2 samples, 0.02%)</title><rect x="2.6298%" y="757" width="0.0188%" height="15" fill="rgb(213,52,39)" fg:x="280" fg:w="2"/><text x="2.8798%" y="767.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoBlocks (14 samples, 0.13%)</title><rect x="2.5265%" y="853" width="0.1315%" height="15" fill="rgb(243,137,7)" fg:x="269" fg:w="14"/><text x="2.7765%" y="863.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ (12 samples, 0.11%)</title><rect x="2.5453%" y="837" width="0.1127%" height="15" fill="rgb(230,79,13)" fg:x="271" fg:w="12"/><text x="2.7953%" y="847.50"></text></g><g><title>ViewBridge`deferredBlockOpportunity_block_invoke_2 (8 samples, 0.08%)</title><rect x="2.5829%" y="821" width="0.0751%" height="15" fill="rgb(247,105,23)" fg:x="275" fg:w="8"/><text x="2.8329%" y="831.50"></text></g><g><title>ViewBridge`__wrapBlockWithVoucher_block_invoke (8 samples, 0.08%)</title><rect x="2.5829%" y="805" width="0.0751%" height="15" fill="rgb(223,179,41)" fg:x="275" fg:w="8"/><text x="2.8329%" y="815.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (2 samples, 0.02%)</title><rect x="2.7332%" y="837" width="0.0188%" height="15" fill="rgb(218,9,34)" fg:x="291" fg:w="2"/><text x="2.9832%" y="847.50"></text></g><g><title>dyld`dyld3::MachOFile::forEachSection(void (5 samples, 0.05%)</title><rect x="2.8177%" y="613" width="0.0470%" height="15" fill="rgb(222,106,8)" fg:x="300" fg:w="5"/><text x="3.0677%" y="623.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyDtrace(std::__1::span (6 samples, 0.06%)</title><rect x="2.8177%" y="645" width="0.0564%" height="15" fill="rgb(211,220,0)" fg:x="300" fg:w="6"/><text x="3.0677%" y="655.50"></text></g><g><title>dyld`dyld3::MachOFile::forEachDOFSection(Diagnostics&amp;, void  (6 samples, 0.06%)</title><rect x="2.8177%" y="629" width="0.0564%" height="15" fill="rgb(229,52,16)" fg:x="300" fg:w="6"/><text x="3.0677%" y="639.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from(char const*, int, void*)::$_0::operator() (8 samples, 0.08%)</title><rect x="2.8083%" y="661" width="0.0751%" height="15" fill="rgb(212,155,18)" fg:x="299" fg:w="8"/><text x="3.0583%" y="671.50"></text></g><g><title>libobjc.A.dylib`getProtocol(char const*) (7 samples, 0.07%)</title><rect x="3.0243%" y="613" width="0.0657%" height="15" fill="rgb(242,21,14)" fg:x="322" fg:w="7"/><text x="3.2743%" y="623.50"></text></g><g><title>libobjc.A.dylib`_mapStrHash(_NXMapTable*, void const*) (7 samples, 0.07%)</title><rect x="3.0243%" y="597" width="0.0657%" height="15" fill="rgb(222,19,48)" fg:x="322" fg:w="7"/><text x="3.2743%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (43 samples, 0.40%)</title><rect x="2.8083%" y="725" width="0.4039%" height="15" fill="rgb(232,45,27)" fg:x="299" fg:w="43"/><text x="3.0583%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (43 samples, 0.40%)</title><rect x="2.8083%" y="709" width="0.4039%" height="15" fill="rgb(249,103,42)" fg:x="299" fg:w="43"/><text x="3.0583%" y="719.50"></text></g><g><title>AppKit`__TextInputUILibrary_block_invoke (43 samples, 0.40%)</title><rect x="2.8083%" y="693" width="0.4039%" height="15" fill="rgb(246,81,33)" fg:x="299" fg:w="43"/><text x="3.0583%" y="703.50"></text></g><g><title>dyld`dyld4::APIs::dlopen_from (43 samples, 0.40%)</title><rect x="2.8083%" y="677" width="0.4039%" height="15" fill="rgb(252,33,42)" fg:x="299" fg:w="43"/><text x="3.0583%" y="687.50"></text></g><g><title>dyld`dyld4::RuntimeState::notifyLoad(std::__1::span (35 samples, 0.33%)</title><rect x="2.8834%" y="661" width="0.3287%" height="15" fill="rgb(209,212,41)" fg:x="307" fg:w="35"/><text x="3.1334%" y="671.50"></text></g><g><title>libobjc.A.dylib`map_images (34 samples, 0.32%)</title><rect x="2.8928%" y="645" width="0.3193%" height="15" fill="rgb(207,154,6)" fg:x="308" fg:w="34"/><text x="3.1428%" y="655.50"></text></g><g><title>libobjc.A.dylib`map_images_nolock (34 samples, 0.32%)</title><rect x="2.8928%" y="629" width="0.3193%" height="15" fill="rgb(223,64,47)" fg:x="308" fg:w="34"/><text x="3.1428%" y="639.50"></text></g><g><title>libobjc.A.dylib`load_categories_nolock(header_info*) (13 samples, 0.12%)</title><rect x="3.0901%" y="613" width="0.1221%" height="15" fill="rgb(211,161,38)" fg:x="329" fg:w="13"/><text x="3.3401%" y="623.50"></text></g><g><title>libobjc.A.dylib`load_categories_nolock(header_info*)::$_0::operator() (13 samples, 0.12%)</title><rect x="3.0901%" y="597" width="0.1221%" height="15" fill="rgb(219,138,40)" fg:x="329" fg:w="13"/><text x="3.3401%" y="607.50"></text></g><g><title>AppKit`initTUINSCursorUIController (44 samples, 0.41%)</title><rect x="2.8083%" y="741" width="0.4133%" height="15" fill="rgb(241,228,46)" fg:x="299" fg:w="44"/><text x="3.0583%" y="751.50"></text></g><g><title>LaunchServices`_LSCopyServerStore (3 samples, 0.03%)</title><rect x="3.2216%" y="533" width="0.0282%" height="15" fill="rgb(223,209,38)" fg:x="343" fg:w="3"/><text x="3.4716%" y="543.50"></text></g><g><title>LaunchServices`_LSDServiceGetXPCConnection (2 samples, 0.02%)</title><rect x="3.2310%" y="517" width="0.0188%" height="15" fill="rgb(236,164,45)" fg:x="344" fg:w="2"/><text x="3.4810%" y="527.50"></text></g><g><title>LaunchServices`LaunchServices::_LSLazyLoadObjectForKeyWithLock(NSMutableDictionary*, objc_object*, LaunchServices::unfair_lock_mutex&amp;, objc_object*  (2 samples, 0.02%)</title><rect x="3.2310%" y="501" width="0.0188%" height="15" fill="rgb(231,15,5)" fg:x="344" fg:w="2"/><text x="3.4810%" y="511.50"></text></g><g><title>LaunchServices`___LSDServiceGetXPCConnection_block_invoke_2 (2 samples, 0.02%)</title><rect x="3.2310%" y="485" width="0.0188%" height="15" fill="rgb(252,35,15)" fg:x="344" fg:w="2"/><text x="3.4810%" y="495.50"></text></g><g><title>LaunchServices`+[_LSDReadService XPCInterface] (2 samples, 0.02%)</title><rect x="3.2310%" y="469" width="0.0188%" height="15" fill="rgb(248,181,18)" fg:x="344" fg:w="2"/><text x="3.4810%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="3.2310%" y="453" width="0.0188%" height="15" fill="rgb(233,39,42)" fg:x="344" fg:w="2"/><text x="3.4810%" y="463.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="3.2310%" y="437" width="0.0188%" height="15" fill="rgb(238,110,33)" fg:x="344" fg:w="2"/><text x="3.4810%" y="447.50"></text></g><g><title>LaunchServices`__31+[_LSDReadService XPCInterface]_block_invoke (2 samples, 0.02%)</title><rect x="3.2310%" y="421" width="0.0188%" height="15" fill="rgb(233,195,10)" fg:x="344" fg:w="2"/><text x="3.4810%" y="431.50"></text></g><g><title>HIToolbox`TSMCopyTextInputGlobalProperty (4 samples, 0.04%)</title><rect x="3.2216%" y="725" width="0.0376%" height="15" fill="rgb(254,105,3)" fg:x="343" fg:w="4"/><text x="3.4716%" y="735.50"></text></g><g><title>CoreFoundation`CFPasteboardCopyData (4 samples, 0.04%)</title><rect x="3.2216%" y="709" width="0.0376%" height="15" fill="rgb(221,225,9)" fg:x="343" fg:w="4"/><text x="3.4716%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (4 samples, 0.04%)</title><rect x="3.2216%" y="693" width="0.0376%" height="15" fill="rgb(224,227,45)" fg:x="343" fg:w="4"/><text x="3.4716%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.04%)</title><rect x="3.2216%" y="677" width="0.0376%" height="15" fill="rgb(229,198,43)" fg:x="343" fg:w="4"/><text x="3.4716%" y="687.50"></text></g><g><title>CoreFoundation`__CFPasteboardCopyData_block_invoke (4 samples, 0.04%)</title><rect x="3.2216%" y="661" width="0.0376%" height="15" fill="rgb(206,209,35)" fg:x="343" fg:w="4"/><text x="3.4716%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (4 samples, 0.04%)</title><rect x="3.2216%" y="645" width="0.0376%" height="15" fill="rgb(245,195,53)" fg:x="343" fg:w="4"/><text x="3.4716%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (4 samples, 0.04%)</title><rect x="3.2216%" y="629" width="0.0376%" height="15" fill="rgb(240,92,26)" fg:x="343" fg:w="4"/><text x="3.4716%" y="639.50"></text></g><g><title>CoreFoundation`____kCFPasteboardFilenamesFlavor_block_invoke (4 samples, 0.04%)</title><rect x="3.2216%" y="613" width="0.0376%" height="15" fill="rgb(207,40,23)" fg:x="343" fg:w="4"/><text x="3.4716%" y="623.50"></text></g><g><title>LaunchServices`UTTypeCreatePreferredIdentifierForTag (4 samples, 0.04%)</title><rect x="3.2216%" y="597" width="0.0376%" height="15" fill="rgb(223,111,35)" fg:x="343" fg:w="4"/><text x="3.4716%" y="607.50"></text></g><g><title>LaunchServices`+[UTTypeRecord typeRecordWithTag:ofClass:conformingToIdentifier:] (4 samples, 0.04%)</title><rect x="3.2216%" y="581" width="0.0376%" height="15" fill="rgb(229,147,28)" fg:x="343" fg:w="4"/><text x="3.4716%" y="591.50"></text></g><g><title>LaunchServices`LaunchServices::Database::Context::_get (4 samples, 0.04%)</title><rect x="3.2216%" y="565" width="0.0376%" height="15" fill="rgb(211,29,28)" fg:x="343" fg:w="4"/><text x="3.4716%" y="575.50"></text></g><g><title>LaunchServices`_LSContextInitCommon(LSContext*, _LSDServiceDomain*, unsigned long, NSError* __autoreleasing*) (4 samples, 0.04%)</title><rect x="3.2216%" y="549" width="0.0376%" height="15" fill="rgb(228,72,33)" fg:x="343" fg:w="4"/><text x="3.4716%" y="559.50"></text></g><g><title>HIToolbox`MyActivateTSMDocument (5 samples, 0.05%)</title><rect x="3.2216%" y="741" width="0.0470%" height="15" fill="rgb(205,214,31)" fg:x="343" fg:w="5"/><text x="3.4716%" y="751.50"></text></g><g><title>TextInputUIMacHelper`+[TUINSCursorUIController sharedInstance] (3 samples, 0.03%)</title><rect x="3.2685%" y="741" width="0.0282%" height="15" fill="rgb(224,111,15)" fg:x="348" fg:w="3"/><text x="3.5185%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.03%)</title><rect x="3.2685%" y="725" width="0.0282%" height="15" fill="rgb(253,21,26)" fg:x="348" fg:w="3"/><text x="3.5185%" y="735.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.03%)</title><rect x="3.2685%" y="709" width="0.0282%" height="15" fill="rgb(245,139,43)" fg:x="348" fg:w="3"/><text x="3.5185%" y="719.50"></text></g><g><title>TextInputUIMacHelper`__41+[TUINSCursorUIController sharedInstance]_block_invoke (3 samples, 0.03%)</title><rect x="3.2685%" y="693" width="0.0282%" height="15" fill="rgb(252,170,7)" fg:x="348" fg:w="3"/><text x="3.5185%" y="703.50"></text></g><g><title>TextInputUIMacHelper`-[TUINSCursorUIController init] (3 samples, 0.03%)</title><rect x="3.2685%" y="677" width="0.0282%" height="15" fill="rgb(231,118,14)" fg:x="348" fg:w="3"/><text x="3.5185%" y="687.50"></text></g><g><title>TextInputUIMacHelper`-[TUINSWindow init] (2 samples, 0.02%)</title><rect x="3.2779%" y="661" width="0.0188%" height="15" fill="rgb(238,83,0)" fg:x="349" fg:w="2"/><text x="3.5279%" y="671.50"></text></g><g><title>AppKit`-[NSWindow initWithContentRect:styleMask:backing:defer:] (2 samples, 0.02%)</title><rect x="3.2779%" y="645" width="0.0188%" height="15" fill="rgb(221,39,39)" fg:x="349" fg:w="2"/><text x="3.5279%" y="655.50"></text></g><g><title>AppKit`-[NSWindow _initContent:styleMask:backing:defer:contentView:] (2 samples, 0.02%)</title><rect x="3.2779%" y="629" width="0.0188%" height="15" fill="rgb(222,119,46)" fg:x="349" fg:w="2"/><text x="3.5279%" y="639.50"></text></g><g><title>AppKit`-[NSWindow _commonInitFrame:styleMask:backing:defer:] (2 samples, 0.02%)</title><rect x="3.2779%" y="613" width="0.0188%" height="15" fill="rgb(222,165,49)" fg:x="349" fg:w="2"/><text x="3.5279%" y="623.50"></text></g><g><title>AppKit`-[NSTextInputContext activate] (53 samples, 0.50%)</title><rect x="2.8083%" y="757" width="0.4978%" height="15" fill="rgb(219,113,52)" fg:x="299" fg:w="53"/><text x="3.0583%" y="767.50"></text></g><g><title>AppKit`+[NSTextInputContext currentInputContext_withFirstResponderSync:] (55 samples, 0.52%)</title><rect x="2.7989%" y="773" width="0.5166%" height="15" fill="rgb(214,7,15)" fg:x="298" fg:w="55"/><text x="3.0489%" y="783.50"></text></g><g><title>Foundation`-[NSNotificationCenter postNotificationName:object:userInfo:] (4 samples, 0.04%)</title><rect x="3.3249%" y="773" width="0.0376%" height="15" fill="rgb(235,32,4)" fg:x="354" fg:w="4"/><text x="3.5749%" y="783.50"></text></g><g><title>CoreFoundation`_CFXNotificationPost (3 samples, 0.03%)</title><rect x="3.3343%" y="757" width="0.0282%" height="15" fill="rgb(238,90,54)" fg:x="355" fg:w="3"/><text x="3.5843%" y="767.50"></text></g><g><title>AppKit`-[NSApplication updateWindows] (61 samples, 0.57%)</title><rect x="2.7989%" y="789" width="0.5729%" height="15" fill="rgb(213,208,19)" fg:x="298" fg:w="61"/><text x="3.0489%" y="799.50"></text></g><g><title>AppKit`__38-[NSApplication setWindowsNeedUpdate:]_block_invoke_2 (62 samples, 0.58%)</title><rect x="2.7989%" y="805" width="0.5823%" height="15" fill="rgb(233,156,4)" fg:x="298" fg:w="62"/><text x="3.0489%" y="815.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.02%)</title><rect x="3.3812%" y="741" width="0.0188%" height="15" fill="rgb(207,194,5)" fg:x="360" fg:w="2"/><text x="3.6312%" y="751.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.02%)</title><rect x="3.3812%" y="725" width="0.0188%" height="15" fill="rgb(206,111,30)" fg:x="360" fg:w="2"/><text x="3.6312%" y="735.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (2 samples, 0.02%)</title><rect x="3.3812%" y="709" width="0.0188%" height="15" fill="rgb(243,70,54)" fg:x="360" fg:w="2"/><text x="3.6312%" y="719.50"></text></g><g><title>QuartzCore`CA::Layer::commit_if_needed(CA::Transaction*, void  (3 samples, 0.03%)</title><rect x="3.3812%" y="757" width="0.0282%" height="15" fill="rgb(242,28,8)" fg:x="360" fg:w="3"/><text x="3.6312%" y="767.50"></text></g><g><title>AppKit`-[NSTextLayer display] (4 samples, 0.04%)</title><rect x="3.4094%" y="741" width="0.0376%" height="15" fill="rgb(219,106,18)" fg:x="363" fg:w="4"/><text x="3.6594%" y="751.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (4 samples, 0.04%)</title><rect x="3.4094%" y="725" width="0.0376%" height="15" fill="rgb(244,222,10)" fg:x="363" fg:w="4"/><text x="3.6594%" y="735.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke (4 samples, 0.04%)</title><rect x="3.4094%" y="709" width="0.0376%" height="15" fill="rgb(236,179,52)" fg:x="363" fg:w="4"/><text x="3.6594%" y="719.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (4 samples, 0.04%)</title><rect x="3.4094%" y="693" width="0.0376%" height="15" fill="rgb(213,23,39)" fg:x="363" fg:w="4"/><text x="3.6594%" y="703.50"></text></g><g><title>AppKit`__22-[NSTextLayer display]_block_invoke_2 (4 samples, 0.04%)</title><rect x="3.4094%" y="677" width="0.0376%" height="15" fill="rgb(238,48,10)" fg:x="363" fg:w="4"/><text x="3.6594%" y="687.50"></text></g><g><title>QuartzCore`-[CALayer _display] (4 samples, 0.04%)</title><rect x="3.4094%" y="661" width="0.0376%" height="15" fill="rgb(251,196,23)" fg:x="363" fg:w="4"/><text x="3.6594%" y="671.50"></text></g><g><title>QuartzCore`invocation function for block in CA::Layer::display_ (4 samples, 0.04%)</title><rect x="3.4094%" y="645" width="0.0376%" height="15" fill="rgb(250,152,24)" fg:x="363" fg:w="4"/><text x="3.6594%" y="655.50"></text></g><g><title>QuartzCore`CABackingStoreUpdate_ (4 samples, 0.04%)</title><rect x="3.4094%" y="629" width="0.0376%" height="15" fill="rgb(209,150,17)" fg:x="363" fg:w="4"/><text x="3.6594%" y="639.50"></text></g><g><title>AppKit`-[_NSThemeWidgetCell updateLayerWithFrame:inView:] (4 samples, 0.04%)</title><rect x="3.4564%" y="661" width="0.0376%" height="15" fill="rgb(234,202,34)" fg:x="368" fg:w="4"/><text x="3.7064%" y="671.50"></text></g><g><title>AppKit`-[NSLayerContentsProvider facetForIdentifier:scale:colorSpace:drawingRect:flipped:appearanceIdentifier:drawHandler:] (4 samples, 0.04%)</title><rect x="3.4564%" y="645" width="0.0376%" height="15" fill="rgb(253,148,53)" fg:x="368" fg:w="4"/><text x="3.7064%" y="655.50"></text></g><g><title>AppKit`__50-[_NSThemeWidgetCell updateLayerWithFrame:inView:]_block_invoke (3 samples, 0.03%)</title><rect x="3.4658%" y="629" width="0.0282%" height="15" fill="rgb(218,129,16)" fg:x="369" fg:w="3"/><text x="3.7158%" y="639.50"></text></g><g><title>AppKit`-[NSAppearance _drawInRect:context:options:] (3 samples, 0.03%)</title><rect x="3.4658%" y="613" width="0.0282%" height="15" fill="rgb(216,85,19)" fg:x="369" fg:w="3"/><text x="3.7158%" y="623.50"></text></g><g><title>AppKit`-[NSCompositeAppearance _callCoreUIWithBlock:options:requireBezelTintColor:] (3 samples, 0.03%)</title><rect x="3.4658%" y="597" width="0.0282%" height="15" fill="rgb(235,228,7)" fg:x="369" fg:w="3"/><text x="3.7158%" y="607.50"></text></g><g><title>CoreUI`CUIDraw (3 samples, 0.03%)</title><rect x="3.4658%" y="581" width="0.0282%" height="15" fill="rgb(245,175,0)" fg:x="369" fg:w="3"/><text x="3.7158%" y="591.50"></text></g><g><title>CoreUI`CUIRenderer::Draw (3 samples, 0.03%)</title><rect x="3.4658%" y="565" width="0.0282%" height="15" fill="rgb(208,168,36)" fg:x="369" fg:w="3"/><text x="3.7158%" y="575.50"></text></g><g><title>CoreUI`CUICoreThemeRenderer::DrawTitlebarButton (3 samples, 0.03%)</title><rect x="3.4658%" y="549" width="0.0282%" height="15" fill="rgb(246,171,24)" fg:x="369" fg:w="3"/><text x="3.7158%" y="559.50"></text></g><g><title>CoreUI`-[CUIThemeFacet drawInFrame:isFocused:focusRingColor:context:effects:] (3 samples, 0.03%)</title><rect x="3.4658%" y="533" width="0.0282%" height="15" fill="rgb(215,142,24)" fg:x="369" fg:w="3"/><text x="3.7158%" y="543.50"></text></g><g><title>CoreUI`-[CUIThemeFacet _drawSpecificRenditionKey:inFrame:context:isFocused:focusRingColor:isFlipped:effects:] (3 samples, 0.03%)</title><rect x="3.4658%" y="517" width="0.0282%" height="15" fill="rgb(250,187,7)" fg:x="369" fg:w="3"/><text x="3.7158%" y="527.50"></text></g><g><title>CoreUI`DrawOnePartImageWithOperation (2 samples, 0.02%)</title><rect x="3.4752%" y="501" width="0.0188%" height="15" fill="rgb(228,66,33)" fg:x="370" fg:w="2"/><text x="3.7252%" y="511.50"></text></g><g><title>CoreGraphics`CGContextDrawImage (2 samples, 0.02%)</title><rect x="3.4752%" y="485" width="0.0188%" height="15" fill="rgb(234,215,21)" fg:x="370" fg:w="2"/><text x="3.7252%" y="495.50"></text></g><g><title>CoreGraphics`CGContextDrawImageWithOptions (2 samples, 0.02%)</title><rect x="3.4752%" y="469" width="0.0188%" height="15" fill="rgb(222,191,20)" fg:x="370" fg:w="2"/><text x="3.7252%" y="479.50"></text></g><g><title>AppKit`-[NSFocusStack performWithFocusView:inWindow:usingBlock:] (6 samples, 0.06%)</title><rect x="3.4470%" y="725" width="0.0564%" height="15" fill="rgb(245,79,54)" fg:x="367" fg:w="6"/><text x="3.6970%" y="735.50"></text></g><g><title>AppKit`__29-[NSViewBackingLayer display]_block_invoke (6 samples, 0.06%)</title><rect x="3.4470%" y="709" width="0.0564%" height="15" fill="rgb(240,10,37)" fg:x="367" fg:w="6"/><text x="3.6970%" y="719.50"></text></g><g><title>AppKit`+[NSAppearance _performWithCurrentAppearance:usingBlock:] (6 samples, 0.06%)</title><rect x="3.4470%" y="693" width="0.0564%" height="15" fill="rgb(214,192,32)" fg:x="367" fg:w="6"/><text x="3.6970%" y="703.50"></text></g><g><title>AppKit`_NSViewUpdateLayer (6 samples, 0.06%)</title><rect x="3.4470%" y="677" width="0.0564%" height="15" fill="rgb(209,36,54)" fg:x="367" fg:w="6"/><text x="3.6970%" y="687.50"></text></g><g><title>AppKit`0x000000019092c85c (2 samples, 0.02%)</title><rect x="3.5033%" y="661" width="0.0188%" height="15" fill="rgb(220,10,11)" fg:x="373" fg:w="2"/><text x="3.7533%" y="671.50"></text></g><g><title>AppKit`0x0000000190931000 (2 samples, 0.02%)</title><rect x="3.5033%" y="645" width="0.0188%" height="15" fill="rgb(221,106,17)" fg:x="373" fg:w="2"/><text x="3.7533%" y="655.50"></text></g><g><title>AppKit`0x0000000190883634 (2 samples, 0.02%)</title><rect x="3.5033%" y="629" width="0.0188%" height="15" fill="rgb(251,142,44)" fg:x="373" fg:w="2"/><text x="3.7533%" y="639.50"></text></g><g><title>AppKit`-[NSViewBackingLayer drawInContext:] (2 samples, 0.02%)</title><rect x="3.5033%" y="613" width="0.0188%" height="15" fill="rgb(238,13,15)" fg:x="373" fg:w="2"/><text x="3.7533%" y="623.50"></text></g><g><title>AppKit`-[NSViewBackingLayer display] (9 samples, 0.08%)</title><rect x="3.4470%" y="741" width="0.0845%" height="15" fill="rgb(208,107,27)" fg:x="367" fg:w="9"/><text x="3.6970%" y="751.50"></text></g><g><title>AppKit`0x0000000190999138 (3 samples, 0.03%)</title><rect x="3.5033%" y="725" width="0.0282%" height="15" fill="rgb(205,136,37)" fg:x="373" fg:w="3"/><text x="3.7533%" y="735.50"></text></g><g><title>AppKit`0x0000000190998a0c (3 samples, 0.03%)</title><rect x="3.5033%" y="709" width="0.0282%" height="15" fill="rgb(250,205,27)" fg:x="373" fg:w="3"/><text x="3.7533%" y="719.50"></text></g><g><title>AppKit`0x000000019092e9b0 (3 samples, 0.03%)</title><rect x="3.5033%" y="693" width="0.0282%" height="15" fill="rgb(210,80,43)" fg:x="373" fg:w="3"/><text x="3.7533%" y="703.50"></text></g><g><title>AppKit`0x0000000190930e84 (3 samples, 0.03%)</title><rect x="3.5033%" y="677" width="0.0282%" height="15" fill="rgb(247,160,36)" fg:x="373" fg:w="3"/><text x="3.7533%" y="687.50"></text></g><g><title>QuartzCore`CA::Layer::display_if_needed (15 samples, 0.14%)</title><rect x="3.4094%" y="757" width="0.1409%" height="15" fill="rgb(234,13,49)" fg:x="363" fg:w="15"/><text x="3.6594%" y="767.50"></text></g><g><title>AppKit`-[_NSImageLayerContents CA_prepareRenderValue] (2 samples, 0.02%)</title><rect x="3.5503%" y="725" width="0.0188%" height="15" fill="rgb(234,122,0)" fg:x="378" fg:w="2"/><text x="3.8003%" y="735.50"></text></g><g><title>QuartzCore`CA::Layer::prepare_commit (3 samples, 0.03%)</title><rect x="3.5503%" y="757" width="0.0282%" height="15" fill="rgb(207,146,38)" fg:x="378" fg:w="3"/><text x="3.8003%" y="767.50"></text></g><g><title>QuartzCore`CA::Layer::prepare_contents (3 samples, 0.03%)</title><rect x="3.5503%" y="741" width="0.0282%" height="15" fill="rgb(207,177,25)" fg:x="378" fg:w="3"/><text x="3.8003%" y="751.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (22 samples, 0.21%)</title><rect x="3.3812%" y="773" width="0.2066%" height="15" fill="rgb(211,178,42)" fg:x="360" fg:w="22"/><text x="3.6312%" y="783.50"></text></g><g><title>AppKit`NSDisplayCycleFlush (4 samples, 0.04%)</title><rect x="3.5879%" y="757" width="0.0376%" height="15" fill="rgb(230,69,54)" fg:x="382" fg:w="4"/><text x="3.8379%" y="767.50"></text></g><g><title>AppKit`NSDisplayCycleObserverInvoke (4 samples, 0.04%)</title><rect x="3.5879%" y="741" width="0.0376%" height="15" fill="rgb(214,135,41)" fg:x="382" fg:w="4"/><text x="3.8379%" y="751.50"></text></g><g><title>AppKit`__NSWindowGetDisplayCycleObserverForUpdateStructuralRegions_block_invoke (2 samples, 0.02%)</title><rect x="3.6066%" y="725" width="0.0188%" height="15" fill="rgb(237,67,25)" fg:x="384" fg:w="2"/><text x="3.8566%" y="735.50"></text></g><g><title>AppKit`___NSRunLoopObserverCreateWithHandler_block_invoke (89 samples, 0.84%)</title><rect x="2.7989%" y="821" width="0.8359%" height="15" fill="rgb(222,189,50)" fg:x="298" fg:w="89"/><text x="3.0489%" y="831.50"></text></g><g><title>AppKit`__62+[CATransaction(NSCATransaction) NS_setFlushesWithDisplayLink]_block_invoke (27 samples, 0.25%)</title><rect x="3.3812%" y="805" width="0.2536%" height="15" fill="rgb(245,148,34)" fg:x="360" fg:w="27"/><text x="3.6312%" y="815.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (27 samples, 0.25%)</title><rect x="3.3812%" y="789" width="0.2536%" height="15" fill="rgb(222,29,6)" fg:x="360" fg:w="27"/><text x="3.6312%" y="799.50"></text></g><g><title>QuartzCore`CA::Transaction::run_commit_handlers (5 samples, 0.05%)</title><rect x="3.5879%" y="773" width="0.0470%" height="15" fill="rgb(221,189,43)" fg:x="382" fg:w="5"/><text x="3.8379%" y="783.50"></text></g><g><title>AppKit`___PerfAddRunLoopObserver_block_invoke (5 samples, 0.05%)</title><rect x="3.6348%" y="821" width="0.0470%" height="15" fill="rgb(207,36,27)" fg:x="387" fg:w="5"/><text x="3.8848%" y="831.50"></text></g><g><title>QuartzCore`CA::Transaction::flush_as_runloop_observer (2 samples, 0.02%)</title><rect x="3.6818%" y="821" width="0.0188%" height="15" fill="rgb(217,90,24)" fg:x="392" fg:w="2"/><text x="3.9318%" y="831.50"></text></g><g><title>QuartzCore`CA::Transaction::commit (2 samples, 0.02%)</title><rect x="3.6818%" y="805" width="0.0188%" height="15" fill="rgb(224,66,35)" fg:x="392" fg:w="2"/><text x="3.9318%" y="815.50"></text></g><g><title>QuartzCore`CA::Context::commit_transaction (2 samples, 0.02%)</title><rect x="3.6818%" y="789" width="0.0188%" height="15" fill="rgb(221,13,50)" fg:x="392" fg:w="2"/><text x="3.9318%" y="799.50"></text></g><g><title>QuartzCore`CA::Render::Encoder::send_message (2 samples, 0.02%)</title><rect x="3.6818%" y="773" width="0.0188%" height="15" fill="rgb(236,68,49)" fg:x="392" fg:w="2"/><text x="3.9318%" y="783.50"></text></g><g><title>QuartzCore`CA::Render::Message::send_message (2 samples, 0.02%)</title><rect x="3.6818%" y="757" width="0.0188%" height="15" fill="rgb(229,146,28)" fg:x="392" fg:w="2"/><text x="3.9318%" y="767.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.02%)</title><rect x="3.6818%" y="741" width="0.0188%" height="15" fill="rgb(225,31,38)" fg:x="392" fg:w="2"/><text x="3.9318%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.02%)</title><rect x="3.6818%" y="725" width="0.0188%" height="15" fill="rgb(250,208,3)" fg:x="392" fg:w="2"/><text x="3.9318%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="3.6818%" y="709" width="0.0188%" height="15" fill="rgb(246,54,23)" fg:x="392" fg:w="2"/><text x="3.9318%" y="719.50"></text></g><g><title>ViewBridge`+[ViewBridgeUtilities whileHoldingLock:perform:] (2 samples, 0.02%)</title><rect x="3.7100%" y="805" width="0.0188%" height="15" fill="rgb(243,76,11)" fg:x="395" fg:w="2"/><text x="3.9600%" y="815.50"></text></g><g><title>ViewBridge`__deferBlockOntoMainThread_block_invoke_2 (5 samples, 0.05%)</title><rect x="3.7100%" y="821" width="0.0470%" height="15" fill="rgb(245,21,50)" fg:x="395" fg:w="5"/><text x="3.9600%" y="831.50"></text></g><g><title>ViewBridge`objc_msgSend$whileHoldingLock:perform: (4 samples, 0.04%)</title><rect x="3.7569%" y="821" width="0.0376%" height="15" fill="rgb(228,9,43)" fg:x="400" fg:w="4"/><text x="4.0069%" y="831.50"></text></g><g><title>AppKit` (3 samples, 0.03%)</title><rect x="3.8321%" y="789" width="0.0282%" height="15" fill="rgb(208,100,47)" fg:x="408" fg:w="3"/><text x="4.0821%" y="799.50"></text></g><g><title>AppKit`DYLD-STUB$$objc_loadWeak (2 samples, 0.02%)</title><rect x="3.8696%" y="789" width="0.0188%" height="15" fill="rgb(232,26,8)" fg:x="412" fg:w="2"/><text x="4.1196%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="3.8884%" y="789" width="0.0282%" height="15" fill="rgb(216,166,38)" fg:x="414" fg:w="3"/><text x="4.1384%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_retain (5 samples, 0.05%)</title><rect x="3.9166%" y="789" width="0.0470%" height="15" fill="rgb(251,202,51)" fg:x="417" fg:w="5"/><text x="4.1666%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_autorelease (2 samples, 0.02%)</title><rect x="3.9730%" y="773" width="0.0188%" height="15" fill="rgb(254,216,34)" fg:x="423" fg:w="2"/><text x="4.2230%" y="783.50"></text></g><g><title>ostinato`objc2_app_kit::generated::__NSApplication::NSApplication::delegate (4 samples, 0.04%)</title><rect x="3.9636%" y="789" width="0.0376%" height="15" fill="rgb(251,32,27)" fg:x="422" fg:w="4"/><text x="4.2136%" y="799.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (3 samples, 0.03%)</title><rect x="4.0105%" y="773" width="0.0282%" height="15" fill="rgb(208,127,28)" fg:x="427" fg:w="3"/><text x="4.2605%" y="783.50"></text></g><g><title>ostinato`winit::platform_impl::macos::app_state::ApplicationDelegate::get (23 samples, 0.22%)</title><rect x="3.8321%" y="805" width="0.2160%" height="15" fill="rgb(224,137,22)" fg:x="408" fg:w="23"/><text x="4.0821%" y="815.50"></text></g><g><title>ostinato`objc2_app_kit::generated::__NSApplication::NSApplication::sharedApplication (5 samples, 0.05%)</title><rect x="4.0011%" y="789" width="0.0470%" height="15" fill="rgb(254,70,32)" fg:x="426" fg:w="5"/><text x="4.2511%" y="799.50"></text></g><g><title>ostinato`winit::platform_impl::macos::observer::control_flow_begin_handler (27 samples, 0.25%)</title><rect x="3.8133%" y="821" width="0.2536%" height="15" fill="rgb(229,75,37)" fg:x="406" fg:w="27"/><text x="4.0633%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.03%)</title><rect x="4.0857%" y="805" width="0.0282%" height="15" fill="rgb(252,64,23)" fg:x="435" fg:w="3"/><text x="4.3357%" y="815.50"></text></g><g><title>ostinato`&lt;T as core::any::Any&gt;::type_id (4 samples, 0.04%)</title><rect x="4.3111%" y="757" width="0.0376%" height="15" fill="rgb(232,162,48)" fg:x="459" fg:w="4"/><text x="4.5611%" y="767.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (5 samples, 0.05%)</title><rect x="4.4614%" y="741" width="0.0470%" height="15" fill="rgb(246,160,12)" fg:x="475" fg:w="5"/><text x="4.7114%" y="751.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (2 samples, 0.02%)</title><rect x="4.5083%" y="741" width="0.0188%" height="15" fill="rgb(247,166,0)" fg:x="480" fg:w="2"/><text x="4.7583%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="4.5459%" y="741" width="0.0282%" height="15" fill="rgb(249,219,21)" fg:x="484" fg:w="3"/><text x="4.7959%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="4.5741%" y="741" width="0.0282%" height="15" fill="rgb(205,209,3)" fg:x="487" fg:w="3"/><text x="4.8241%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`free_small (6 samples, 0.06%)</title><rect x="4.6022%" y="741" width="0.0564%" height="15" fill="rgb(243,44,1)" fg:x="490" fg:w="6"/><text x="4.8522%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr_no_clear (2 samples, 0.02%)</title><rect x="4.6398%" y="725" width="0.0188%" height="15" fill="rgb(206,159,16)" fg:x="494" fg:w="2"/><text x="4.8898%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="4.6680%" y="741" width="0.0188%" height="15" fill="rgb(244,77,30)" fg:x="497" fg:w="2"/><text x="4.9180%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (11 samples, 0.10%)</title><rect x="4.6868%" y="741" width="0.1033%" height="15" fill="rgb(218,69,12)" fg:x="499" fg:w="11"/><text x="4.9368%" y="751.50"></text></g><g><title>ostinato`&lt;T as core::any::Any&gt;::type_id (7 samples, 0.07%)</title><rect x="4.7901%" y="741" width="0.0657%" height="15" fill="rgb(212,87,7)" fg:x="510" fg:w="7"/><text x="5.0401%" y="751.50"></text></g><g><title>ostinato`&lt;cgmath::matrix::Matrix4&lt;S&gt; as core::ops::arith::Mul&gt;::mul (2 samples, 0.02%)</title><rect x="4.8558%" y="741" width="0.0188%" height="15" fill="rgb(245,114,25)" fg:x="517" fg:w="2"/><text x="5.1058%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_add_ptr (2 samples, 0.02%)</title><rect x="4.9028%" y="677" width="0.0188%" height="15" fill="rgb(210,61,42)" fg:x="522" fg:w="2"/><text x="5.1528%" y="687.50"></text></g><g><title>ostinato`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="4.8746%" y="741" width="0.0564%" height="15" fill="rgb(211,52,33)" fg:x="519" fg:w="6"/><text x="5.1246%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 0.04%)</title><rect x="4.8934%" y="725" width="0.0376%" height="15" fill="rgb(234,58,33)" fg:x="521" fg:w="4"/><text x="5.1434%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.03%)</title><rect x="4.9028%" y="709" width="0.0282%" height="15" fill="rgb(220,115,36)" fg:x="522" fg:w="3"/><text x="5.1528%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (3 samples, 0.03%)</title><rect x="4.9028%" y="693" width="0.0282%" height="15" fill="rgb(243,153,54)" fg:x="522" fg:w="3"/><text x="5.1528%" y="703.50"></text></g><g><title>ostinato`&lt;hecs::query::QueryBorrow&lt;Q&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="4.9310%" y="741" width="0.0188%" height="15" fill="rgb(251,47,18)" fg:x="525" fg:w="2"/><text x="5.1810%" y="751.50"></text></g><g><title>ostinato`&lt;ostinato::ResourceId as core::convert::From&lt;&amp;str&gt;&gt;::from (7 samples, 0.07%)</title><rect x="4.9498%" y="741" width="0.0657%" height="15" fill="rgb(242,102,42)" fg:x="527" fg:w="7"/><text x="5.1998%" y="751.50"></text></g><g><title>ostinato`ostinato::ResourceId::hash_str (2 samples, 0.02%)</title><rect x="4.9967%" y="725" width="0.0188%" height="15" fill="rgb(234,31,38)" fg:x="532" fg:w="2"/><text x="5.2467%" y="735.50"></text></g><g><title>libsystem_m.dylib`tanf (4 samples, 0.04%)</title><rect x="5.0343%" y="725" width="0.0376%" height="15" fill="rgb(221,117,51)" fg:x="536" fg:w="4"/><text x="5.2843%" y="735.50"></text></g><g><title>ostinato`&lt;ostinato::camera::CameraData as ostinato::camera::CameraMatrix&gt;::build_view_projection_matrix (8 samples, 0.08%)</title><rect x="5.0155%" y="741" width="0.0751%" height="15" fill="rgb(212,20,18)" fg:x="534" fg:w="8"/><text x="5.2655%" y="751.50"></text></g><g><title>ostinato`cgmath::projection::_&lt;impl core::convert::From&lt;cgmath::projection::PerspectiveFov&lt;S&gt;&gt; for cgmath::matrix::Matrix4&lt;S&gt;&gt;::from (2 samples, 0.02%)</title><rect x="5.0719%" y="725" width="0.0188%" height="15" fill="rgb(245,133,36)" fg:x="540" fg:w="2"/><text x="5.3219%" y="735.50"></text></g><g><title>libsystem_m.dylib`tanf (2 samples, 0.02%)</title><rect x="5.0719%" y="709" width="0.0188%" height="15" fill="rgb(212,6,19)" fg:x="540" fg:w="2"/><text x="5.3219%" y="719.50"></text></g><g><title>ostinato`wgpu_core::command::render::RenderPass::new (4 samples, 0.04%)</title><rect x="5.1470%" y="709" width="0.0376%" height="15" fill="rgb(218,1,36)" fg:x="548" fg:w="4"/><text x="5.3970%" y="719.50"></text></g><g><title>ostinato`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::command_encoder_begin_render_pass::fill_arc_desc (14 samples, 0.13%)</title><rect x="5.1846%" y="709" width="0.1315%" height="15" fill="rgb(246,84,54)" fg:x="552" fg:w="14"/><text x="5.4346%" y="719.50"></text></g><g><title>ostinato`wgpu_core::resource::ParentDevice::same_device (4 samples, 0.04%)</title><rect x="5.2785%" y="693" width="0.0376%" height="15" fill="rgb(242,110,6)" fg:x="562" fg:w="4"/><text x="5.5285%" y="703.50"></text></g><g><title>ostinato`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::command_encoder_begin_render_pass (20 samples, 0.19%)</title><rect x="5.1470%" y="725" width="0.1878%" height="15" fill="rgb(214,47,5)" fg:x="548" fg:w="20"/><text x="5.3970%" y="735.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreCommandEncoder as wgpu::dispatch::CommandEncoderInterface&gt;::begin_render_pass (27 samples, 0.25%)</title><rect x="5.1094%" y="741" width="0.2536%" height="15" fill="rgb(218,159,25)" fg:x="544" fg:w="27"/><text x="5.3594%" y="751.50"></text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="5.3348%" y="725" width="0.0282%" height="15" fill="rgb(215,211,28)" fg:x="568" fg:w="3"/><text x="5.5848%" y="735.50"></text></g><g><title>ostinato`wgpu_core::device::resource::Device::create_command_encoder (2 samples, 0.02%)</title><rect x="5.3912%" y="709" width="0.0188%" height="15" fill="rgb(238,59,32)" fg:x="574" fg:w="2"/><text x="5.6412%" y="719.50"></text></g><g><title>ostinato`wgpu_core::command::CommandBuffer::new (2 samples, 0.02%)</title><rect x="5.3912%" y="693" width="0.0188%" height="15" fill="rgb(226,82,3)" fg:x="574" fg:w="2"/><text x="5.6412%" y="703.50"></text></g><g><title>ostinato`wgpu_core::identity::IdentityManager&lt;T&gt;::process (3 samples, 0.03%)</title><rect x="5.4100%" y="709" width="0.0282%" height="15" fill="rgb(240,164,32)" fg:x="576" fg:w="3"/><text x="5.6600%" y="719.50"></text></g><g><title>ostinato`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::device_create_command_encoder (12 samples, 0.11%)</title><rect x="5.3630%" y="725" width="0.1127%" height="15" fill="rgb(232,46,7)" fg:x="571" fg:w="12"/><text x="5.6130%" y="735.50"></text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="5.4475%" y="709" width="0.0282%" height="15" fill="rgb(229,129,53)" fg:x="580" fg:w="3"/><text x="5.6975%" y="719.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreDevice as wgpu::dispatch::DeviceInterface&gt;::create_command_encoder (15 samples, 0.14%)</title><rect x="5.3630%" y="741" width="0.1409%" height="15" fill="rgb(234,188,29)" fg:x="571" fg:w="15"/><text x="5.6130%" y="751.50"></text></g><g><title>ostinato`wgpu_core::registry::FutureId&lt;T&gt;::assign (2 samples, 0.02%)</title><rect x="5.4851%" y="725" width="0.0188%" height="15" fill="rgb(246,141,4)" fg:x="584" fg:w="2"/><text x="5.7351%" y="735.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="5.5039%" y="725" width="0.0188%" height="15" fill="rgb(229,23,39)" fg:x="586" fg:w="2"/><text x="5.7539%" y="735.50"></text></g><g><title>ostinato`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (2 samples, 0.02%)</title><rect x="5.5321%" y="725" width="0.0188%" height="15" fill="rgb(206,12,3)" fg:x="589" fg:w="2"/><text x="5.7821%" y="735.50"></text></g><g><title>ostinato`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="5.5509%" y="725" width="0.0188%" height="15" fill="rgb(252,226,20)" fg:x="591" fg:w="2"/><text x="5.8009%" y="735.50"></text></g><g><title>ostinato`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::command_buffer_drop (5 samples, 0.05%)</title><rect x="5.5884%" y="693" width="0.0470%" height="15" fill="rgb(216,123,35)" fg:x="595" fg:w="5"/><text x="5.8384%" y="703.50"></text></g><g><title>ostinato`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::command_encoder_drop (4 samples, 0.04%)</title><rect x="5.5978%" y="677" width="0.0376%" height="15" fill="rgb(212,68,40)" fg:x="596" fg:w="4"/><text x="5.8478%" y="687.50"></text></g><g><title>ostinato`wgpu_core::identity::IdentityManager&lt;T&gt;::free (2 samples, 0.02%)</title><rect x="5.6166%" y="661" width="0.0188%" height="15" fill="rgb(254,125,32)" fg:x="598" fg:w="2"/><text x="5.8666%" y="671.50"></text></g><g><title>ostinato`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.08%)</title><rect x="5.5696%" y="725" width="0.0751%" height="15" fill="rgb(253,97,22)" fg:x="593" fg:w="8"/><text x="5.8196%" y="735.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (7 samples, 0.07%)</title><rect x="5.5790%" y="709" width="0.0657%" height="15" fill="rgb(241,101,14)" fg:x="594" fg:w="7"/><text x="5.8290%" y="719.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (2 samples, 0.02%)</title><rect x="5.6448%" y="725" width="0.0188%" height="15" fill="rgb(238,103,29)" fg:x="601" fg:w="2"/><text x="5.8948%" y="735.50"></text></g><g><title>ostinato`wgpu_core::device::queue::Queue::submit (2 samples, 0.02%)</title><rect x="5.6636%" y="725" width="0.0188%" height="15" fill="rgb(233,195,47)" fg:x="603" fg:w="2"/><text x="5.9136%" y="735.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="6.0299%" y="677" width="0.0188%" height="15" fill="rgb(246,218,30)" fg:x="642" fg:w="2"/><text x="6.2799%" y="687.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyBlitContext endEncoding] (4 samples, 0.04%)</title><rect x="6.0487%" y="661" width="0.0376%" height="15" fill="rgb(219,145,47)" fg:x="644" fg:w="4"/><text x="6.2987%" y="671.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder endEncoding] (3 samples, 0.03%)</title><rect x="6.0580%" y="645" width="0.0282%" height="15" fill="rgb(243,12,26)" fg:x="645" fg:w="3"/><text x="6.3080%" y="655.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::end_encoding (10 samples, 0.09%)</title><rect x="6.0205%" y="693" width="0.0939%" height="15" fill="rgb(214,87,16)" fg:x="641" fg:w="10"/><text x="6.2705%" y="703.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::end_encoding (7 samples, 0.07%)</title><rect x="6.0487%" y="677" width="0.0657%" height="15" fill="rgb(208,99,42)" fg:x="644" fg:w="7"/><text x="6.2987%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (2 samples, 0.02%)</title><rect x="6.0956%" y="661" width="0.0188%" height="15" fill="rgb(253,99,2)" fg:x="649" fg:w="2"/><text x="6.3456%" y="671.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="6.1708%" y="677" width="0.0188%" height="15" fill="rgb(220,168,23)" fg:x="657" fg:w="2"/><text x="6.4208%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="6.2365%" y="661" width="0.0376%" height="15" fill="rgb(242,38,24)" fg:x="664" fg:w="4"/><text x="6.4865%" y="671.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContextGen2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::endComputePass (2 samples, 0.02%)</title><rect x="6.3586%" y="565" width="0.0188%" height="15" fill="rgb(225,182,9)" fg:x="677" fg:w="2"/><text x="6.6086%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContextGen2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::dispatchCoalescedSparseTextureShaderBatch (2 samples, 0.02%)</title><rect x="6.3586%" y="549" width="0.0188%" height="15" fill="rgb(243,178,37)" fg:x="677" fg:w="2"/><text x="6.6086%" y="559.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::endPreviousBlitCommand (17 samples, 0.16%)</title><rect x="6.3398%" y="581" width="0.1597%" height="15" fill="rgb(232,139,19)" fg:x="675" fg:w="17"/><text x="6.5898%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::ContextCommon&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::endCommand (13 samples, 0.12%)</title><rect x="6.3774%" y="565" width="0.1221%" height="15" fill="rgb(225,201,24)" fg:x="679" fg:w="13"/><text x="6.6274%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContextGen2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::endComputePass (4 samples, 0.04%)</title><rect x="6.4995%" y="581" width="0.0376%" height="15" fill="rgb(221,47,46)" fg:x="692" fg:w="4"/><text x="6.7495%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::commit (23 samples, 0.22%)</title><rect x="6.3304%" y="597" width="0.2160%" height="15" fill="rgb(249,23,13)" fg:x="674" fg:w="23"/><text x="6.5804%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::~BlitDispatchContext (4 samples, 0.04%)</title><rect x="6.5464%" y="597" width="0.0376%" height="15" fill="rgb(219,9,5)" fg:x="697" fg:w="4"/><text x="6.7964%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::ResourceGroupUsage&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::reset (3 samples, 0.03%)</title><rect x="6.5840%" y="597" width="0.0282%" height="15" fill="rgb(254,171,16)" fg:x="701" fg:w="3"/><text x="6.8340%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.02%)</title><rect x="6.6122%" y="597" width="0.0188%" height="15" fill="rgb(230,171,20)" fg:x="704" fg:w="2"/><text x="6.8622%" y="607.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyBlitContext deferredEndEncoding] (36 samples, 0.34%)</title><rect x="6.3304%" y="613" width="0.3381%" height="15" fill="rgb(210,71,41)" fg:x="674" fg:w="36"/><text x="6.5804%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.04%)</title><rect x="6.6310%" y="597" width="0.0376%" height="15" fill="rgb(206,173,20)" fg:x="706" fg:w="4"/><text x="6.8810%" y="607.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (3 samples, 0.03%)</title><rect x="6.6779%" y="581" width="0.0282%" height="15" fill="rgb(233,88,34)" fg:x="711" fg:w="3"/><text x="6.9279%" y="591.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext dealloc] (5 samples, 0.05%)</title><rect x="6.6685%" y="613" width="0.0470%" height="15" fill="rgb(223,209,46)" fg:x="710" fg:w="5"/><text x="6.9185%" y="623.50"></text></g><g><title>Metal`-[_MTLCommandEncoder dealloc] (4 samples, 0.04%)</title><rect x="6.6779%" y="597" width="0.0376%" height="15" fill="rgb(250,43,18)" fg:x="711" fg:w="4"/><text x="6.9279%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferGen3_1&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::finalizeStoreActions (4 samples, 0.04%)</title><rect x="6.7249%" y="597" width="0.0376%" height="15" fill="rgb(208,13,10)" fg:x="716" fg:w="4"/><text x="6.9749%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::ContextCommon&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::endCommand (3 samples, 0.03%)</title><rect x="6.8376%" y="581" width="0.0282%" height="15" fill="rgb(212,200,36)" fg:x="728" fg:w="3"/><text x="7.0876%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferGen3_2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::assignRenderRegisters(AGXTACommandRec*, AGX3DCommandRec*, bool, bool, AGX::Framebuffer (3 samples, 0.03%)</title><rect x="6.8752%" y="581" width="0.0282%" height="15" fill="rgb(225,90,30)" fg:x="732" fg:w="3"/><text x="7.1252%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::emitSWEndOfTileIfNeeded (2 samples, 0.02%)</title><rect x="6.9034%" y="581" width="0.0188%" height="15" fill="rgb(236,182,39)" fg:x="735" fg:w="2"/><text x="7.1534%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::RenderTileDispatchSWEndOfTile&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::dispatch (2 samples, 0.02%)</title><rect x="6.9034%" y="565" width="0.0188%" height="15" fill="rgb(212,144,35)" fg:x="735" fg:w="2"/><text x="7.1534%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::endRenderPassCommon (19 samples, 0.18%)</title><rect x="6.7719%" y="597" width="0.1785%" height="15" fill="rgb(228,63,44)" fg:x="721" fg:w="19"/><text x="7.0219%" y="607.50"></text></g><g><title>AGXMetal13_3`FenceEncoder::encode (2 samples, 0.02%)</title><rect x="6.9597%" y="597" width="0.0188%" height="15" fill="rgb(228,109,6)" fg:x="741" fg:w="2"/><text x="7.2097%" y="607.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext deferredEndEncoding:] (30 samples, 0.28%)</title><rect x="6.7155%" y="613" width="0.2818%" height="15" fill="rgb(238,117,24)" fg:x="715" fg:w="30"/><text x="6.9655%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext destroyImpl] (4 samples, 0.04%)</title><rect x="6.9973%" y="613" width="0.0376%" height="15" fill="rgb(242,26,26)" fg:x="745" fg:w="4"/><text x="7.2473%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::Framebuffer&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::~Framebuffer (2 samples, 0.02%)</title><rect x="7.0442%" y="613" width="0.0188%" height="15" fill="rgb(221,92,48)" fg:x="750" fg:w="2"/><text x="7.2942%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::PointerWithOnDemandObjectCreation&lt;AGX::G13::SWGeometryPipelineContext&gt;::~PointerWithOnDemandObjectCreation (2 samples, 0.02%)</title><rect x="7.0630%" y="613" width="0.0188%" height="15" fill="rgb(209,209,32)" fg:x="752" fg:w="2"/><text x="7.3130%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer commitEncoder] (83 samples, 0.78%)</title><rect x="6.3116%" y="629" width="0.7796%" height="15" fill="rgb(221,70,22)" fg:x="672" fg:w="83"/><text x="6.5616%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext dealloc] (2 samples, 0.02%)</title><rect x="7.1006%" y="629" width="0.0188%" height="15" fill="rgb(248,145,5)" fg:x="756" fg:w="2"/><text x="7.3506%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (40 samples, 0.38%)</title><rect x="7.1757%" y="565" width="0.3757%" height="15" fill="rgb(226,116,26)" fg:x="764" fg:w="40"/><text x="7.4257%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (40 samples, 0.38%)</title><rect x="7.1757%" y="549" width="0.3757%" height="15" fill="rgb(244,5,17)" fg:x="764" fg:w="40"/><text x="7.4257%" y="559.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (5 samples, 0.05%)</title><rect x="7.5796%" y="517" width="0.0470%" height="15" fill="rgb(252,159,33)" fg:x="807" fg:w="5"/><text x="7.8296%" y="527.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (5 samples, 0.05%)</title><rect x="7.5796%" y="501" width="0.0470%" height="15" fill="rgb(206,71,0)" fg:x="807" fg:w="5"/><text x="7.8296%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (5 samples, 0.05%)</title><rect x="7.5796%" y="485" width="0.0470%" height="15" fill="rgb(233,118,54)" fg:x="807" fg:w="5"/><text x="7.8296%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.03%)</title><rect x="7.5984%" y="469" width="0.0282%" height="15" fill="rgb(234,83,48)" fg:x="809" fg:w="3"/><text x="7.8484%" y="479.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (12 samples, 0.11%)</title><rect x="7.5608%" y="533" width="0.1127%" height="15" fill="rgb(228,3,54)" fg:x="805" fg:w="12"/><text x="7.8108%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.05%)</title><rect x="7.6266%" y="517" width="0.0470%" height="15" fill="rgb(226,155,13)" fg:x="812" fg:w="5"/><text x="7.8766%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="7.6547%" y="501" width="0.0188%" height="15" fill="rgb(241,28,37)" fg:x="815" fg:w="2"/><text x="7.9047%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="7.6547%" y="485" width="0.0188%" height="15" fill="rgb(233,93,10)" fg:x="815" fg:w="2"/><text x="7.9047%" y="495.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (13 samples, 0.12%)</title><rect x="7.5608%" y="549" width="0.1221%" height="15" fill="rgb(225,113,19)" fg:x="805" fg:w="13"/><text x="7.8108%" y="559.50"></text></g><g><title>libdispatch.dylib`dispatch_async (19 samples, 0.18%)</title><rect x="7.5514%" y="565" width="0.1785%" height="15" fill="rgb(241,2,18)" fg:x="804" fg:w="19"/><text x="7.8014%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_alloc_from_heap (5 samples, 0.05%)</title><rect x="7.6829%" y="549" width="0.0470%" height="15" fill="rgb(228,207,21)" fg:x="818" fg:w="5"/><text x="7.9329%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (5 samples, 0.05%)</title><rect x="7.6829%" y="533" width="0.0470%" height="15" fill="rgb(213,211,35)" fg:x="818" fg:w="5"/><text x="7.9329%" y="543.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (61 samples, 0.57%)</title><rect x="7.1757%" y="581" width="0.5729%" height="15" fill="rgb(209,83,10)" fg:x="764" fg:w="61"/><text x="7.4257%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (2 samples, 0.02%)</title><rect x="7.7299%" y="565" width="0.0188%" height="15" fill="rgb(209,164,1)" fg:x="823" fg:w="2"/><text x="7.9799%" y="575.50"></text></g><g><title>libdispatch.dylib`_os_object_retain (2 samples, 0.02%)</title><rect x="7.7674%" y="581" width="0.0188%" height="15" fill="rgb(213,184,43)" fg:x="827" fg:w="2"/><text x="8.0174%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="7.7956%" y="581" width="0.0282%" height="15" fill="rgb(231,61,34)" fg:x="830" fg:w="3"/><text x="8.0456%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.02%)</title><rect x="7.8238%" y="581" width="0.0188%" height="15" fill="rgb(235,75,3)" fg:x="833" fg:w="2"/><text x="8.0738%" y="591.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCommit:commitTime:] (73 samples, 0.69%)</title><rect x="7.1757%" y="597" width="0.6856%" height="15" fill="rgb(220,106,47)" fg:x="764" fg:w="73"/><text x="7.4257%" y="607.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (46 samples, 0.43%)</title><rect x="7.8802%" y="581" width="0.4320%" height="15" fill="rgb(210,196,33)" fg:x="839" fg:w="46"/><text x="8.1302%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (45 samples, 0.42%)</title><rect x="7.8895%" y="565" width="0.4227%" height="15" fill="rgb(229,154,42)" fg:x="840" fg:w="45"/><text x="8.1395%" y="575.50"></text></g><g><title>Metal`-[_MTLCommandQueue enqueueCommandBuffer:] (49 samples, 0.46%)</title><rect x="7.8614%" y="597" width="0.4602%" height="15" fill="rgb(228,114,26)" fg:x="837" fg:w="49"/><text x="8.1114%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="8.3216%" y="597" width="0.0564%" height="15" fill="rgb(208,144,1)" fg:x="886" fg:w="6"/><text x="8.5716%" y="607.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (134 samples, 1.26%)</title><rect x="7.1663%" y="613" width="1.2586%" height="15" fill="rgb(239,112,37)" fg:x="763" fg:w="134"/><text x="7.4163%" y="623.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.03%)</title><rect x="8.3967%" y="597" width="0.0282%" height="15" fill="rgb(210,96,50)" fg:x="894" fg:w="3"/><text x="8.6467%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (3 samples, 0.03%)</title><rect x="8.3967%" y="581" width="0.0282%" height="15" fill="rgb(222,178,2)" fg:x="894" fg:w="3"/><text x="8.6467%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (30 samples, 0.28%)</title><rect x="8.4437%" y="597" width="0.2818%" height="15" fill="rgb(226,74,18)" fg:x="899" fg:w="30"/><text x="8.6937%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (28 samples, 0.26%)</title><rect x="8.4625%" y="581" width="0.2630%" height="15" fill="rgb(225,67,54)" fg:x="901" fg:w="28"/><text x="8.7125%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandQueue commitCommandBuffer:wake:] (34 samples, 0.32%)</title><rect x="8.4343%" y="613" width="0.3193%" height="15" fill="rgb(251,92,32)" fg:x="898" fg:w="34"/><text x="8.6843%" y="623.50"></text></g><g><title>libdispatch.dylib`dispatch_source_merge_data (2 samples, 0.02%)</title><rect x="8.7349%" y="597" width="0.0188%" height="15" fill="rgb(228,149,22)" fg:x="930" fg:w="2"/><text x="8.9849%" y="607.50"></text></g><g><title>Metal`objc_msgSend$setPrivateData:privateDataOffset:logState: (2 samples, 0.02%)</title><rect x="8.7630%" y="613" width="0.0188%" height="15" fill="rgb(243,54,13)" fg:x="933" fg:w="2"/><text x="9.0130%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_queue_wakeup (4 samples, 0.04%)</title><rect x="8.7912%" y="613" width="0.0376%" height="15" fill="rgb(243,180,28)" fg:x="936" fg:w="4"/><text x="9.0412%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_source_wakeup (2 samples, 0.02%)</title><rect x="8.8288%" y="613" width="0.0188%" height="15" fill="rgb(208,167,24)" fg:x="940" fg:w="2"/><text x="9.0788%" y="623.50"></text></g><g><title>libdispatch.dylib`dispatch_group_enter (4 samples, 0.04%)</title><rect x="8.8476%" y="613" width="0.0376%" height="15" fill="rgb(245,73,45)" fg:x="942" fg:w="4"/><text x="9.0976%" y="623.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (192 samples, 1.80%)</title><rect x="7.1382%" y="629" width="1.8033%" height="15" fill="rgb(237,203,48)" fg:x="760" fg:w="192"/><text x="7.3882%" y="639.50">I..</text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="8.8851%" y="613" width="0.0564%" height="15" fill="rgb(211,197,16)" fg:x="946" fg:w="6"/><text x="9.1351%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.09%)</title><rect x="8.9697%" y="629" width="0.0939%" height="15" fill="rgb(243,99,51)" fg:x="955" fg:w="10"/><text x="9.2197%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer commit] (297 samples, 2.79%)</title><rect x="6.2835%" y="645" width="2.7895%" height="15" fill="rgb(215,123,29)" fg:x="669" fg:w="297"/><text x="6.5335%" y="655.50">AG..</text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer encodeSignalEvent:value:] (7 samples, 0.07%)</title><rect x="9.0730%" y="645" width="0.0657%" height="15" fill="rgb(239,186,37)" fg:x="966" fg:w="7"/><text x="9.3230%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="9.0918%" y="629" width="0.0470%" height="15" fill="rgb(252,136,39)" fg:x="968" fg:w="5"/><text x="9.3418%" y="639.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer setLabel:] (2 samples, 0.02%)</title><rect x="9.1575%" y="645" width="0.0188%" height="15" fill="rgb(223,213,32)" fg:x="975" fg:w="2"/><text x="9.4075%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (2 samples, 0.02%)</title><rect x="9.1951%" y="645" width="0.0188%" height="15" fill="rgb(233,115,5)" fg:x="979" fg:w="2"/><text x="9.4451%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="9.2139%" y="645" width="0.0188%" height="15" fill="rgb(207,226,44)" fg:x="981" fg:w="2"/><text x="9.4639%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (2 samples, 0.02%)</title><rect x="9.2326%" y="645" width="0.0188%" height="15" fill="rgb(208,126,0)" fg:x="983" fg:w="2"/><text x="9.4826%" y="655.50"></text></g><g><title>ostinato`&lt;Q as wgpu_hal::dynamic::queue::DynQueue&gt;::submit (338 samples, 3.17%)</title><rect x="6.1238%" y="693" width="3.1746%" height="15" fill="rgb(244,66,21)" fg:x="652" fg:w="338"/><text x="6.3738%" y="703.50">ost..</text></g><g><title>ostinato`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&gt;::submit (330 samples, 3.10%)</title><rect x="6.1989%" y="677" width="3.0995%" height="15" fill="rgb(222,97,12)" fg:x="660" fg:w="330"/><text x="6.4489%" y="687.50">ost..</text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (322 samples, 3.02%)</title><rect x="6.2741%" y="661" width="3.0243%" height="15" fill="rgb(219,213,19)" fg:x="668" fg:w="322"/><text x="6.5241%" y="671.50">ost..</text></g><g><title>ostinato`metal::commandbuffer::CommandBufferRef::set_label (3 samples, 0.03%)</title><rect x="9.2702%" y="645" width="0.0282%" height="15" fill="rgb(252,169,30)" fg:x="987" fg:w="3"/><text x="9.5202%" y="655.50"></text></g><g><title>ostinato`metal::nsstring_from_str (3 samples, 0.03%)</title><rect x="9.2702%" y="629" width="0.0282%" height="15" fill="rgb(206,32,51)" fg:x="987" fg:w="3"/><text x="9.5202%" y="639.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (3 samples, 0.03%)</title><rect x="9.2702%" y="613" width="0.0282%" height="15" fill="rgb(250,172,42)" fg:x="987" fg:w="3"/><text x="9.5202%" y="623.50"></text></g><g><title>ostinato`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="9.3735%" y="677" width="0.0188%" height="15" fill="rgb(209,34,43)" fg:x="998" fg:w="2"/><text x="9.6235%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="9.4111%" y="629" width="0.0188%" height="15" fill="rgb(223,11,35)" fg:x="1002" fg:w="2"/><text x="9.6611%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.03%)</title><rect x="9.4111%" y="645" width="0.0282%" height="15" fill="rgb(251,219,26)" fg:x="1002" fg:w="3"/><text x="9.6611%" y="655.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.15%)</title><rect x="9.2984%" y="693" width="0.1503%" height="15" fill="rgb(231,119,3)" fg:x="990" fg:w="16"/><text x="9.5484%" y="703.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (5 samples, 0.05%)</title><rect x="9.4017%" y="677" width="0.0470%" height="15" fill="rgb(216,97,11)" fg:x="1001" fg:w="5"/><text x="9.6517%" y="687.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="9.4111%" y="661" width="0.0376%" height="15" fill="rgb(223,59,9)" fg:x="1002" fg:w="4"/><text x="9.6611%" y="671.50"></text></g><g><title>ostinato`&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="9.4487%" y="693" width="0.0188%" height="15" fill="rgb(233,93,31)" fg:x="1006" fg:w="2"/><text x="9.6987%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`small_free_list_remove_ptr (3 samples, 0.03%)</title><rect x="9.5144%" y="613" width="0.0282%" height="15" fill="rgb(239,81,33)" fg:x="1013" fg:w="3"/><text x="9.7644%" y="623.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (8 samples, 0.08%)</title><rect x="9.4768%" y="693" width="0.0751%" height="15" fill="rgb(213,120,34)" fg:x="1009" fg:w="8"/><text x="9.7268%" y="703.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (7 samples, 0.07%)</title><rect x="9.4862%" y="677" width="0.0657%" height="15" fill="rgb(243,49,53)" fg:x="1010" fg:w="7"/><text x="9.7362%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 0.07%)</title><rect x="9.4862%" y="661" width="0.0657%" height="15" fill="rgb(247,216,33)" fg:x="1010" fg:w="7"/><text x="9.7362%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (7 samples, 0.07%)</title><rect x="9.4862%" y="645" width="0.0657%" height="15" fill="rgb(226,26,14)" fg:x="1010" fg:w="7"/><text x="9.7362%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (6 samples, 0.06%)</title><rect x="9.4956%" y="629" width="0.0564%" height="15" fill="rgb(215,49,53)" fg:x="1011" fg:w="6"/><text x="9.7456%" y="639.50"></text></g><g><title>ostinato`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="9.5802%" y="677" width="0.0282%" height="15" fill="rgb(245,162,40)" fg:x="1020" fg:w="3"/><text x="9.8302%" y="687.50"></text></g><g><title>ostinato`hashbrown::raw::RawTableInner::fallible_with_capacity (3 samples, 0.03%)</title><rect x="9.5802%" y="661" width="0.0282%" height="15" fill="rgb(229,68,17)" fg:x="1020" fg:w="3"/><text x="9.8302%" y="671.50"></text></g><g><title>ostinato`hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (6 samples, 0.06%)</title><rect x="9.5708%" y="693" width="0.0564%" height="15" fill="rgb(213,182,10)" fg:x="1019" fg:w="6"/><text x="9.8208%" y="703.50"></text></g><g><title>ostinato`hashbrown::raw::RawTableInner::fallible_with_capacity (2 samples, 0.02%)</title><rect x="9.6083%" y="677" width="0.0188%" height="15" fill="rgb(245,125,30)" fg:x="1023" fg:w="2"/><text x="9.8583%" y="687.50"></text></g><g><title>ostinato`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="9.6365%" y="693" width="0.0188%" height="15" fill="rgb(232,202,2)" fg:x="1026" fg:w="2"/><text x="9.8865%" y="703.50"></text></g><g><title>ostinato`hashbrown::raw::RawTableInner::drop_inner_table (4 samples, 0.04%)</title><rect x="9.6553%" y="693" width="0.0376%" height="15" fill="rgb(237,140,51)" fg:x="1028" fg:w="4"/><text x="9.9053%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.03%)</title><rect x="9.7023%" y="661" width="0.0282%" height="15" fill="rgb(236,157,25)" fg:x="1033" fg:w="3"/><text x="9.9523%" y="671.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.06%)</title><rect x="9.6929%" y="677" width="0.0564%" height="15" fill="rgb(219,209,0)" fg:x="1032" fg:w="6"/><text x="9.9429%" y="687.50"></text></g><g><title>ostinato`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="9.7304%" y="661" width="0.0188%" height="15" fill="rgb(240,116,54)" fg:x="1036" fg:w="2"/><text x="9.9804%" y="671.50"></text></g><g><title>ostinato`wgpu_core::track::buffer::DeviceBufferTracker::set_from_tracker_and_drain_transitions (3 samples, 0.03%)</title><rect x="9.7492%" y="677" width="0.0282%" height="15" fill="rgb(216,10,36)" fg:x="1038" fg:w="3"/><text x="9.9992%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::CommandBuffer::insert_barriers_from_device_tracker (18 samples, 0.17%)</title><rect x="9.6929%" y="693" width="0.1691%" height="15" fill="rgb(222,72,44)" fg:x="1032" fg:w="18"/><text x="9.9429%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::texture::DeviceTextureTracker::set_from_tracker_and_drain_transitions (9 samples, 0.08%)</title><rect x="9.7774%" y="677" width="0.0845%" height="15" fill="rgb(232,159,9)" fg:x="1041" fg:w="9"/><text x="10.0274%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::memory_init::_&lt;impl wgpu_core::command::BakedCommands&gt;::initialize_buffer_memory (4 samples, 0.04%)</title><rect x="9.8807%" y="693" width="0.0376%" height="15" fill="rgb(210,39,32)" fg:x="1052" fg:w="4"/><text x="10.1307%" y="703.50"></text></g><g><title>ostinato`wgpu_core::command::memory_init::_&lt;impl wgpu_core::command::BakedCommands&gt;::initialize_texture_memory (5 samples, 0.05%)</title><rect x="9.9183%" y="693" width="0.0470%" height="15" fill="rgb(216,194,45)" fg:x="1056" fg:w="5"/><text x="10.1683%" y="703.50"></text></g><g><title>ostinato`&lt;wgpu_core::init_tracker::InitTrackerDrain&lt;Idx&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="9.9277%" y="677" width="0.0376%" height="15" fill="rgb(218,18,35)" fg:x="1057" fg:w="4"/><text x="10.1777%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::ray_tracing::_&lt;impl wgpu_core::command::CommandBufferMutable&gt;::validate_acceleration_structure_actions (4 samples, 0.04%)</title><rect x="9.9652%" y="693" width="0.0376%" height="15" fill="rgb(207,83,51)" fg:x="1061" fg:w="4"/><text x="10.2152%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="10.0404%" y="677" width="0.0188%" height="15" fill="rgb(225,63,43)" fg:x="1069" fg:w="2"/><text x="10.2904%" y="687.50"></text></g><g><title>ostinato`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="10.0686%" y="677" width="0.0188%" height="15" fill="rgb(207,57,36)" fg:x="1072" fg:w="2"/><text x="10.3186%" y="687.50"></text></g><g><title>ostinato`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (4 samples, 0.04%)</title><rect x="10.0873%" y="677" width="0.0376%" height="15" fill="rgb(216,99,33)" fg:x="1074" fg:w="4"/><text x="10.3373%" y="687.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;wgpu_core::device::life::ActiveSubmission&gt;&gt; (2 samples, 0.02%)</title><rect x="10.1249%" y="677" width="0.0188%" height="15" fill="rgb(225,42,16)" fg:x="1078" fg:w="2"/><text x="10.3749%" y="687.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::device::queue::EncoderInFlight&gt; (2 samples, 0.02%)</title><rect x="10.1437%" y="677" width="0.0188%" height="15" fill="rgb(220,201,45)" fg:x="1080" fg:w="2"/><text x="10.3937%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (2 samples, 0.02%)</title><rect x="10.2282%" y="661" width="0.0188%" height="15" fill="rgb(225,33,4)" fg:x="1089" fg:w="2"/><text x="10.4782%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`free_small (4 samples, 0.04%)</title><rect x="10.2470%" y="661" width="0.0376%" height="15" fill="rgb(224,33,50)" fg:x="1091" fg:w="4"/><text x="10.4970%" y="671.50"></text></g><g><title>ostinato`&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (7 samples, 0.07%)</title><rect x="10.2846%" y="661" width="0.0657%" height="15" fill="rgb(246,198,51)" fg:x="1095" fg:w="7"/><text x="10.5346%" y="671.50"></text></g><g><title>ostinato`&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="10.3503%" y="661" width="0.0188%" height="15" fill="rgb(205,22,4)" fg:x="1102" fg:w="2"/><text x="10.6003%" y="671.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::command::CommandEncoder&gt; (4 samples, 0.04%)</title><rect x="10.3785%" y="661" width="0.0376%" height="15" fill="rgb(206,3,8)" fg:x="1105" fg:w="4"/><text x="10.6285%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="10.4630%" y="645" width="0.0470%" height="15" fill="rgb(251,23,15)" fg:x="1114" fg:w="5"/><text x="10.7130%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="10.5194%" y="645" width="0.0282%" height="15" fill="rgb(252,88,28)" fg:x="1120" fg:w="3"/><text x="10.7694%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="10.5288%" y="629" width="0.0188%" height="15" fill="rgb(212,127,14)" fg:x="1121" fg:w="2"/><text x="10.7788%" y="639.50"></text></g><g><title>ostinato`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::destroy_buffer (3 samples, 0.03%)</title><rect x="10.5476%" y="645" width="0.0282%" height="15" fill="rgb(247,145,37)" fg:x="1123" fg:w="3"/><text x="10.7976%" y="655.50"></text></g><g><title>ostinato`&lt;wgpu_core::indirect_validation::draw::DrawResources as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="10.5757%" y="645" width="0.0282%" height="15" fill="rgb(209,117,53)" fg:x="1126" fg:w="3"/><text x="10.8257%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="10.6133%" y="597" width="0.0564%" height="15" fill="rgb(212,90,42)" fg:x="1130" fg:w="6"/><text x="10.8633%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="10.6791%" y="597" width="0.0188%" height="15" fill="rgb(218,164,37)" fg:x="1137" fg:w="2"/><text x="10.9291%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="10.6978%" y="597" width="0.0282%" height="15" fill="rgb(246,65,34)" fg:x="1139" fg:w="3"/><text x="10.9478%" y="607.50"></text></g><g><title>CoreFoundation`CFAllocatorDeallocate (2 samples, 0.02%)</title><rect x="10.8669%" y="501" width="0.0188%" height="15" fill="rgb(231,100,33)" fg:x="1157" fg:w="2"/><text x="11.1169%" y="511.50"></text></g><g><title>CoreFoundation`__CFStringDeallocate (3 samples, 0.03%)</title><rect x="10.8857%" y="501" width="0.0282%" height="15" fill="rgb(228,126,14)" fg:x="1159" fg:w="3"/><text x="11.1357%" y="511.50"></text></g><g><title>CoreFoundation`_CFRelease (8 samples, 0.08%)</title><rect x="10.8575%" y="517" width="0.0751%" height="15" fill="rgb(215,173,21)" fg:x="1156" fg:w="8"/><text x="11.1075%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="10.9139%" y="501" width="0.0188%" height="15" fill="rgb(210,6,40)" fg:x="1162" fg:w="2"/><text x="11.1639%" y="511.50"></text></g><g><title>libobjc.A.dylib`lookupMethodInClassAndLoadCache (2 samples, 0.02%)</title><rect x="10.9420%" y="485" width="0.0188%" height="15" fill="rgb(212,48,18)" fg:x="1165" fg:w="2"/><text x="11.1920%" y="495.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (5 samples, 0.05%)</title><rect x="10.9327%" y="517" width="0.0470%" height="15" fill="rgb(230,214,11)" fg:x="1164" fg:w="5"/><text x="11.1827%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (5 samples, 0.05%)</title><rect x="10.9327%" y="501" width="0.0470%" height="15" fill="rgb(254,105,39)" fg:x="1164" fg:w="5"/><text x="11.1827%" y="511.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (2 samples, 0.02%)</title><rect x="10.9608%" y="485" width="0.0188%" height="15" fill="rgb(245,158,5)" fg:x="1167" fg:w="2"/><text x="11.2108%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.03%)</title><rect x="10.9796%" y="517" width="0.0282%" height="15" fill="rgb(249,208,11)" fg:x="1169" fg:w="3"/><text x="11.2296%" y="527.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (26 samples, 0.24%)</title><rect x="10.8575%" y="533" width="0.2442%" height="15" fill="rgb(210,39,28)" fg:x="1156" fg:w="26"/><text x="11.1075%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (10 samples, 0.09%)</title><rect x="11.0078%" y="517" width="0.0939%" height="15" fill="rgb(211,56,53)" fg:x="1172" fg:w="10"/><text x="11.2578%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (7 samples, 0.07%)</title><rect x="11.0360%" y="501" width="0.0657%" height="15" fill="rgb(226,201,30)" fg:x="1175" fg:w="7"/><text x="11.2860%" y="511.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_list_add_ptr (4 samples, 0.04%)</title><rect x="11.0641%" y="485" width="0.0376%" height="15" fill="rgb(239,101,34)" fg:x="1178" fg:w="4"/><text x="11.3141%" y="495.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="11.1017%" y="533" width="0.0188%" height="15" fill="rgb(226,209,5)" fg:x="1182" fg:w="2"/><text x="11.3517%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_release (5 samples, 0.05%)</title><rect x="11.1299%" y="533" width="0.0470%" height="15" fill="rgb(250,105,47)" fg:x="1185" fg:w="5"/><text x="11.3799%" y="543.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_destroy (2 samples, 0.02%)</title><rect x="11.1956%" y="533" width="0.0188%" height="15" fill="rgb(230,72,3)" fg:x="1192" fg:w="2"/><text x="11.4456%" y="543.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (42 samples, 0.39%)</title><rect x="10.8293%" y="549" width="0.3945%" height="15" fill="rgb(232,218,39)" fg:x="1153" fg:w="42"/><text x="11.0793%" y="559.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer dealloc] (45 samples, 0.42%)</title><rect x="10.8106%" y="565" width="0.4227%" height="15" fill="rgb(248,166,6)" fg:x="1151" fg:w="45"/><text x="11.0606%" y="575.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer dealloc] (58 samples, 0.54%)</title><rect x="10.7448%" y="581" width="0.5448%" height="15" fill="rgb(247,89,20)" fg:x="1144" fg:w="58"/><text x="10.9948%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.05%)</title><rect x="11.2426%" y="565" width="0.0470%" height="15" fill="rgb(248,130,54)" fg:x="1197" fg:w="5"/><text x="11.4926%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.07%)</title><rect x="11.3177%" y="581" width="0.0657%" height="15" fill="rgb(234,196,4)" fg:x="1205" fg:w="7"/><text x="11.5677%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_retain_x28 (3 samples, 0.03%)</title><rect x="11.3835%" y="581" width="0.0282%" height="15" fill="rgb(250,143,31)" fg:x="1212" fg:w="3"/><text x="11.6335%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="11.4117%" y="581" width="0.0188%" height="15" fill="rgb(211,110,34)" fg:x="1215" fg:w="2"/><text x="11.6617%" y="591.50"></text></g><g><title>ostinato`&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.71%)</title><rect x="10.7260%" y="597" width="0.7138%" height="15" fill="rgb(215,124,48)" fg:x="1142" fg:w="76"/><text x="10.9760%" y="607.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::command::CommandEncoder&gt; (90 samples, 0.85%)</title><rect x="10.6039%" y="645" width="0.8453%" height="15" fill="rgb(216,46,13)" fg:x="1129" fg:w="90"/><text x="10.8539%" y="655.50"></text></g><g><title>ostinato`&lt;wgpu_core::command::CommandEncoder as core::ops::drop::Drop&gt;::drop (90 samples, 0.85%)</title><rect x="10.6039%" y="629" width="0.8453%" height="15" fill="rgb(205,184,25)" fg:x="1129" fg:w="90"/><text x="10.8539%" y="639.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::reset_all (90 samples, 0.85%)</title><rect x="10.6039%" y="613" width="0.8453%" height="15" fill="rgb(228,1,10)" fg:x="1129" fg:w="90"/><text x="10.8539%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXBuffer dealloc] (2 samples, 0.02%)</title><rect x="11.4774%" y="629" width="0.0188%" height="15" fill="rgb(213,116,27)" fg:x="1222" fg:w="2"/><text x="11.7274%" y="639.50"></text></g><g><title>IOGPU`-[IOGPUMemoryInfo removeResourceFromList:] (2 samples, 0.02%)</title><rect x="11.5056%" y="581" width="0.0188%" height="15" fill="rgb(241,95,50)" fg:x="1225" fg:w="2"/><text x="11.7556%" y="591.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice _removeResource:] (2 samples, 0.02%)</title><rect x="11.5244%" y="581" width="0.0188%" height="15" fill="rgb(238,48,32)" fg:x="1227" fg:w="2"/><text x="11.7744%" y="591.50"></text></g><g><title>IOGPU`std::__1::__tree_iterator&lt;std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::__tree_node&lt;std::__1::__value_type&lt;unsigned int, short&gt;, void*&gt;*, long&gt; std::__1::__tree&lt;std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::__map_value_compare&lt;unsigned int, std::__1::__value_type&lt;unsigned int, short&gt;, std::__1::less&lt;unsigned int&gt;, true&gt;, IOGPUMetalSuballocatorHeap::Allocator&lt;std::__1::__value_type&lt;unsigned int, short&gt;&gt;&gt;::__emplace_multi&lt;std::__1::pair&lt;unsigned int, short&gt;&gt;(std::__1::pair (2 samples, 0.02%)</title><rect x="11.5713%" y="549" width="0.0188%" height="15" fill="rgb(235,113,49)" fg:x="1232" fg:w="2"/><text x="11.8213%" y="559.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorFree (7 samples, 0.07%)</title><rect x="11.5432%" y="565" width="0.0657%" height="15" fill="rgb(205,127,43)" fg:x="1229" fg:w="7"/><text x="11.7932%" y="575.50"></text></g><g><title>Metal`MTLRangeAllocatorDeallocate (2 samples, 0.02%)</title><rect x="11.5901%" y="549" width="0.0188%" height="15" fill="rgb(250,162,2)" fg:x="1234" fg:w="2"/><text x="11.8401%" y="559.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice deallocBufferSubData:heapIndex:bufferIndex:bufferOffset:length:] (13 samples, 0.12%)</title><rect x="11.5432%" y="581" width="0.1221%" height="15" fill="rgb(220,13,41)" fg:x="1229" fg:w="13"/><text x="11.7932%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="11.6465%" y="565" width="0.0188%" height="15" fill="rgb(249,221,25)" fg:x="1240" fg:w="2"/><text x="11.8965%" y="575.50"></text></g><g><title>IOKit`iokit_user_client_trap (83 samples, 0.78%)</title><rect x="11.7216%" y="549" width="0.7796%" height="15" fill="rgb(215,208,19)" fg:x="1248" fg:w="83"/><text x="11.9716%" y="559.50"></text></g><g><title>CoreFoundation`_CFRelease (90 samples, 0.85%)</title><rect x="11.6747%" y="565" width="0.8453%" height="15" fill="rgb(236,175,2)" fg:x="1243" fg:w="90"/><text x="11.9247%" y="575.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource .cxx_destruct] (9 samples, 0.08%)</title><rect x="12.5200%" y="501" width="0.0845%" height="15" fill="rgb(241,52,2)" fg:x="1333" fg:w="9"/><text x="12.7700%" y="511.50"></text></g><g><title>libobjc.A.dylib`objc_destroyWeak (9 samples, 0.08%)</title><rect x="12.5200%" y="485" width="0.0845%" height="15" fill="rgb(248,140,14)" fg:x="1333" fg:w="9"/><text x="12.7700%" y="495.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (9 samples, 0.08%)</title><rect x="12.5200%" y="469" width="0.0845%" height="15" fill="rgb(253,22,42)" fg:x="1333" fg:w="9"/><text x="12.7700%" y="479.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (10 samples, 0.09%)</title><rect x="12.5200%" y="549" width="0.0939%" height="15" fill="rgb(234,61,47)" fg:x="1333" fg:w="10"/><text x="12.7700%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (10 samples, 0.09%)</title><rect x="12.5200%" y="533" width="0.0939%" height="15" fill="rgb(208,226,15)" fg:x="1333" fg:w="10"/><text x="12.7700%" y="543.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (10 samples, 0.09%)</title><rect x="12.5200%" y="517" width="0.0939%" height="15" fill="rgb(217,221,4)" fg:x="1333" fg:w="10"/><text x="12.7700%" y="527.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (11 samples, 0.10%)</title><rect x="12.5200%" y="565" width="0.1033%" height="15" fill="rgb(212,174,34)" fg:x="1333" fg:w="11"/><text x="12.7700%" y="575.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (107 samples, 1.00%)</title><rect x="11.6653%" y="581" width="1.0050%" height="15" fill="rgb(253,83,4)" fg:x="1242" fg:w="107"/><text x="11.9153%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (4 samples, 0.04%)</title><rect x="12.6327%" y="565" width="0.0376%" height="15" fill="rgb(250,195,49)" fg:x="1345" fg:w="4"/><text x="12.8827%" y="575.50"></text></g><g><title>libobjc.A.dylib`weak_unregister_no_lock (2 samples, 0.02%)</title><rect x="12.6515%" y="549" width="0.0188%" height="15" fill="rgb(241,192,25)" fg:x="1347" fg:w="2"/><text x="12.9015%" y="559.50"></text></g><g><title>libobjc.A.dylib`weak_entry_for_referent(weak_table_t*, objc_object*) (2 samples, 0.02%)</title><rect x="12.6515%" y="533" width="0.0188%" height="15" fill="rgb(208,124,10)" fg:x="1347" fg:w="2"/><text x="12.9015%" y="543.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorFree (2 samples, 0.02%)</title><rect x="12.6702%" y="581" width="0.0188%" height="15" fill="rgb(222,33,0)" fg:x="1349" fg:w="2"/><text x="12.9202%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_autorelease (2 samples, 0.02%)</title><rect x="12.7078%" y="581" width="0.0188%" height="15" fill="rgb(234,209,28)" fg:x="1353" fg:w="2"/><text x="12.9578%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="12.7454%" y="581" width="0.0282%" height="15" fill="rgb(224,11,23)" fg:x="1357" fg:w="3"/><text x="12.9954%" y="591.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (139 samples, 1.31%)</title><rect x="11.4962%" y="597" width="1.3055%" height="15" fill="rgb(232,99,1)" fg:x="1224" fg:w="139"/><text x="11.7462%" y="607.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (3 samples, 0.03%)</title><rect x="12.8111%" y="597" width="0.0282%" height="15" fill="rgb(237,95,45)" fg:x="1364" fg:w="3"/><text x="13.0611%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="12.8581%" y="597" width="0.0564%" height="15" fill="rgb(208,109,11)" fg:x="1369" fg:w="6"/><text x="13.1081%" y="607.50"></text></g><g><title>AGXMetal13_3`-[AGXBuffer dealloc] (152 samples, 1.43%)</title><rect x="11.4962%" y="613" width="1.4276%" height="15" fill="rgb(216,190,48)" fg:x="1224" fg:w="152"/><text x="11.7462%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyBuffer dealloc] (155 samples, 1.46%)</title><rect x="11.4962%" y="629" width="1.4558%" height="15" fill="rgb(251,171,36)" fg:x="1224" fg:w="155"/><text x="11.7462%" y="639.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer dealloc] (3 samples, 0.03%)</title><rect x="12.9238%" y="613" width="0.0282%" height="15" fill="rgb(230,62,22)" fg:x="1376" fg:w="3"/><text x="13.1738%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (3 samples, 0.03%)</title><rect x="12.9520%" y="629" width="0.0282%" height="15" fill="rgb(225,114,35)" fg:x="1379" fg:w="3"/><text x="13.2020%" y="639.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::device::queue::TempResource&gt; (164 samples, 1.54%)</title><rect x="11.4492%" y="645" width="1.5403%" height="15" fill="rgb(215,118,42)" fg:x="1219" fg:w="164"/><text x="11.6992%" y="655.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::indirect_validation::draw::DrawResources&gt; (5 samples, 0.05%)</title><rect x="12.9896%" y="645" width="0.0470%" height="15" fill="rgb(243,119,21)" fg:x="1383" fg:w="5"/><text x="13.2396%" y="655.50"></text></g><g><title>ostinato`&lt;wgpu_core::indirect_validation::draw::DrawResources as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="12.9896%" y="629" width="0.0470%" height="15" fill="rgb(252,177,53)" fg:x="1383" fg:w="5"/><text x="13.2396%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="13.1023%" y="629" width="0.0282%" height="15" fill="rgb(237,209,29)" fg:x="1395" fg:w="3"/><text x="13.3523%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="13.1586%" y="613" width="0.0188%" height="15" fill="rgb(212,65,23)" fg:x="1401" fg:w="2"/><text x="13.4086%" y="623.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.05%)</title><rect x="13.1868%" y="613" width="0.0470%" height="15" fill="rgb(230,222,46)" fg:x="1404" fg:w="5"/><text x="13.4368%" y="623.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (9 samples, 0.08%)</title><rect x="13.1586%" y="629" width="0.0845%" height="15" fill="rgb(215,135,32)" fg:x="1401" fg:w="9"/><text x="13.4086%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="13.2526%" y="613" width="0.0188%" height="15" fill="rgb(246,101,22)" fg:x="1411" fg:w="2"/><text x="13.5026%" y="623.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::track::Tracker&gt; (28 samples, 0.26%)</title><rect x="13.0365%" y="645" width="0.2630%" height="15" fill="rgb(206,107,13)" fg:x="1388" fg:w="28"/><text x="13.2865%" y="655.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::track::texture::TextureTracker&gt; (6 samples, 0.06%)</title><rect x="13.2432%" y="629" width="0.0564%" height="15" fill="rgb(250,100,44)" fg:x="1410" fg:w="6"/><text x="13.4932%" y="639.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::track::metadata::ResourceMetadata&lt;alloc::sync::Arc&lt;wgpu_core::resource::Texture&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="13.2713%" y="613" width="0.0282%" height="15" fill="rgb(231,147,38)" fg:x="1413" fg:w="3"/><text x="13.5213%" y="623.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::device::queue::EncoderInFlight&gt; (309 samples, 2.90%)</title><rect x="10.4161%" y="661" width="2.9022%" height="15" fill="rgb(229,8,40)" fg:x="1109" fg:w="309"/><text x="10.6661%" y="671.50">os..</text></g><g><title>ostinato`wgpu_core::device::resource::Device::maintain (353 samples, 3.32%)</title><rect x="10.0122%" y="693" width="3.3155%" height="15" fill="rgb(221,135,30)" fg:x="1066" fg:w="353"/><text x="10.2622%" y="703.50">ost..</text></g><g><title>ostinato`wgpu_core::device::queue::Queue::maintain (337 samples, 3.17%)</title><rect x="10.1625%" y="677" width="3.1652%" height="15" fill="rgb(249,193,18)" fg:x="1082" fg:w="337"/><text x="10.4125%" y="687.50">ost..</text></g><g><title>ostinato`wgpu_core::track::buffer::DeviceBufferTracker::set_from_tracker_and_drain_transitions (2 samples, 0.02%)</title><rect x="13.3371%" y="693" width="0.0188%" height="15" fill="rgb(209,133,39)" fg:x="1420" fg:w="2"/><text x="13.5871%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::texture::DeviceTextureTracker::set_from_tracker_and_drain_transitions (2 samples, 0.02%)</title><rect x="13.3559%" y="693" width="0.0188%" height="15" fill="rgb(232,100,14)" fg:x="1422" fg:w="2"/><text x="13.6059%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::texture::DeviceTextureTracker::set_from_usage_scope_and_drain_transitions (6 samples, 0.06%)</title><rect x="13.3747%" y="693" width="0.0564%" height="15" fill="rgb(224,185,1)" fg:x="1424" fg:w="6"/><text x="13.6247%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::texture::TextureUsageScope::set_size (3 samples, 0.03%)</title><rect x="13.4310%" y="693" width="0.0282%" height="15" fill="rgb(223,139,8)" fg:x="1430" fg:w="3"/><text x="13.6810%" y="703.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginKernelCommands (6 samples, 0.06%)</title><rect x="13.6095%" y="581" width="0.0564%" height="15" fill="rgb(232,213,38)" fg:x="1449" fg:w="6"/><text x="13.8595%" y="591.50"></text></g><g><title>IOGPU`IOGPUMetalDeviceShmemPoolCreateShmem (3 samples, 0.03%)</title><rect x="13.6658%" y="581" width="0.0282%" height="15" fill="rgb(207,94,22)" fg:x="1455" fg:w="3"/><text x="13.9158%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_retain (3 samples, 0.03%)</title><rect x="13.6940%" y="581" width="0.0282%" height="15" fill="rgb(219,183,54)" fg:x="1458" fg:w="3"/><text x="13.9440%" y="591.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (17 samples, 0.16%)</title><rect x="13.5813%" y="613" width="0.1597%" height="15" fill="rgb(216,185,54)" fg:x="1446" fg:w="17"/><text x="13.8313%" y="623.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageSetupShmems (15 samples, 0.14%)</title><rect x="13.6001%" y="597" width="0.1409%" height="15" fill="rgb(254,217,39)" fg:x="1448" fg:w="15"/><text x="13.8501%" y="607.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (2 samples, 0.02%)</title><rect x="13.7222%" y="581" width="0.0188%" height="15" fill="rgb(240,178,23)" fg:x="1461" fg:w="2"/><text x="13.9722%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (39 samples, 0.37%)</title><rect x="13.7504%" y="581" width="0.3663%" height="15" fill="rgb(218,11,47)" fg:x="1464" fg:w="39"/><text x="14.0004%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (36 samples, 0.34%)</title><rect x="13.7785%" y="565" width="0.3381%" height="15" fill="rgb(218,51,51)" fg:x="1467" fg:w="36"/><text x="14.0285%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (4 samples, 0.04%)</title><rect x="14.1260%" y="565" width="0.0376%" height="15" fill="rgb(238,126,27)" fg:x="1504" fg:w="4"/><text x="14.3760%" y="575.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (4 samples, 0.04%)</title><rect x="14.1260%" y="549" width="0.0376%" height="15" fill="rgb(249,202,22)" fg:x="1504" fg:w="4"/><text x="14.3760%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.04%)</title><rect x="14.1260%" y="533" width="0.0376%" height="15" fill="rgb(254,195,49)" fg:x="1504" fg:w="4"/><text x="14.3760%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="14.1448%" y="517" width="0.0188%" height="15" fill="rgb(208,123,14)" fg:x="1506" fg:w="2"/><text x="14.3948%" y="527.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="14.1448%" y="501" width="0.0188%" height="15" fill="rgb(224,200,8)" fg:x="1506" fg:w="2"/><text x="14.3948%" y="511.50"></text></g><g><title>libdispatch.dylib`dispatch_async (7 samples, 0.07%)</title><rect x="14.1167%" y="581" width="0.0657%" height="15" fill="rgb(217,61,36)" fg:x="1503" fg:w="7"/><text x="14.3667%" y="591.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (48 samples, 0.45%)</title><rect x="13.7504%" y="597" width="0.4508%" height="15" fill="rgb(206,35,45)" fg:x="1464" fg:w="48"/><text x="14.0004%" y="607.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (50 samples, 0.47%)</title><rect x="13.7410%" y="613" width="0.4696%" height="15" fill="rgb(217,65,33)" fg:x="1463" fg:w="50"/><text x="13.9910%" y="623.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (71 samples, 0.67%)</title><rect x="13.5625%" y="629" width="0.6669%" height="15" fill="rgb(222,158,48)" fg:x="1444" fg:w="71"/><text x="13.8125%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer initWithQueue:retainedReferences:] (80 samples, 0.75%)</title><rect x="13.4968%" y="645" width="0.7514%" height="15" fill="rgb(254,2,54)" fg:x="1437" fg:w="80"/><text x="13.7468%" y="655.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (2 samples, 0.02%)</title><rect x="14.2294%" y="629" width="0.0188%" height="15" fill="rgb(250,143,38)" fg:x="1515" fg:w="2"/><text x="14.4794%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="14.2294%" y="613" width="0.0188%" height="15" fill="rgb(248,25,0)" fg:x="1515" fg:w="2"/><text x="14.4794%" y="623.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (2 samples, 0.02%)</title><rect x="14.2669%" y="645" width="0.0188%" height="15" fill="rgb(206,152,27)" fg:x="1519" fg:w="2"/><text x="14.5169%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="14.2669%" y="629" width="0.0188%" height="15" fill="rgb(240,77,30)" fg:x="1519" fg:w="2"/><text x="14.5169%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (2 samples, 0.02%)</title><rect x="14.2669%" y="613" width="0.0188%" height="15" fill="rgb(231,5,3)" fg:x="1519" fg:w="2"/><text x="14.5169%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandQueue commandBufferWithUnretainedReferences] (88 samples, 0.83%)</title><rect x="13.4968%" y="661" width="0.8265%" height="15" fill="rgb(207,226,32)" fg:x="1437" fg:w="88"/><text x="13.7468%" y="671.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_unlock (2 samples, 0.02%)</title><rect x="14.3045%" y="645" width="0.0188%" height="15" fill="rgb(222,207,47)" fg:x="1523" fg:w="2"/><text x="14.5545%" y="655.50"></text></g><g><title>CoreFoundation`__CFStrHashEightBit2 (2 samples, 0.02%)</title><rect x="14.3984%" y="613" width="0.0188%" height="15" fill="rgb(229,115,45)" fg:x="1533" fg:w="2"/><text x="14.6484%" y="623.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (103 samples, 0.97%)</title><rect x="13.4592%" y="693" width="0.9674%" height="15" fill="rgb(224,191,6)" fg:x="1433" fg:w="103"/><text x="13.7092%" y="703.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (100 samples, 0.94%)</title><rect x="13.4874%" y="677" width="0.9392%" height="15" fill="rgb(230,227,24)" fg:x="1436" fg:w="100"/><text x="13.7374%" y="687.50"></text></g><g><title>ostinato`metal::commandbuffer::CommandBufferRef::set_label (9 samples, 0.08%)</title><rect x="14.3421%" y="661" width="0.0845%" height="15" fill="rgb(228,80,19)" fg:x="1527" fg:w="9"/><text x="14.5921%" y="671.50"></text></g><g><title>ostinato`metal::nsstring_from_str (8 samples, 0.08%)</title><rect x="14.3515%" y="645" width="0.0751%" height="15" fill="rgb(247,229,0)" fg:x="1528" fg:w="8"/><text x="14.6015%" y="655.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (6 samples, 0.06%)</title><rect x="14.3702%" y="629" width="0.0564%" height="15" fill="rgb(237,194,15)" fg:x="1530" fg:w="6"/><text x="14.6202%" y="639.50"></text></g><g><title>ostinato`wgpu_core::device::queue::Queue::submit (924 samples, 8.68%)</title><rect x="5.7575%" y="709" width="8.6785%" height="15" fill="rgb(219,203,20)" fg:x="613" fg:w="924"/><text x="6.0075%" y="719.50">ostinato`wgp..</text></g><g><title>ostinato`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_submit (933 samples, 8.76%)</title><rect x="5.6824%" y="725" width="8.7630%" height="15" fill="rgb(234,128,8)" fg:x="605" fg:w="933"/><text x="5.9324%" y="735.50">ostinato`wgp..</text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::submit (954 samples, 8.96%)</title><rect x="5.5039%" y="741" width="8.9603%" height="15" fill="rgb(248,202,8)" fg:x="586" fg:w="954"/><text x="5.7539%" y="751.50">ostinato`&lt;wgp..</text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="14.4454%" y="725" width="0.0188%" height="15" fill="rgb(206,104,37)" fg:x="1538" fg:w="2"/><text x="14.6954%" y="735.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::bindComputeResources (2 samples, 0.02%)</title><rect x="14.6896%" y="645" width="0.0188%" height="15" fill="rgb(223,8,27)" fg:x="1564" fg:w="2"/><text x="14.9396%" y="655.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (6 samples, 0.06%)</title><rect x="14.8962%" y="565" width="0.0564%" height="15" fill="rgb(216,217,28)" fg:x="1586" fg:w="6"/><text x="15.1462%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::DataBufferAllocator&lt;34ul&gt;::initializeDataBuffer (18 samples, 0.17%)</title><rect x="14.8023%" y="597" width="0.1691%" height="15" fill="rgb(249,199,1)" fg:x="1576" fg:w="18"/><text x="15.0523%" y="607.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (9 samples, 0.08%)</title><rect x="14.8868%" y="581" width="0.0845%" height="15" fill="rgb(240,85,17)" fg:x="1585" fg:w="9"/><text x="15.1368%" y="591.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginSegment (13 samples, 0.12%)</title><rect x="14.9714%" y="597" width="0.1221%" height="15" fill="rgb(206,108,45)" fg:x="1594" fg:w="13"/><text x="15.2214%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (13 samples, 0.12%)</title><rect x="14.9714%" y="581" width="0.1221%" height="15" fill="rgb(245,210,41)" fg:x="1594" fg:w="13"/><text x="15.2214%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::ContextCommon&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::newCommand (40 samples, 0.38%)</title><rect x="14.7553%" y="613" width="0.3757%" height="15" fill="rgb(206,13,37)" fg:x="1571" fg:w="40"/><text x="15.0053%" y="623.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (3 samples, 0.03%)</title><rect x="15.1028%" y="597" width="0.0282%" height="15" fill="rgb(250,61,18)" fg:x="1608" fg:w="3"/><text x="15.3528%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::ContextSwitcherGen3&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::setupComputeCommand (2 samples, 0.02%)</title><rect x="15.1310%" y="613" width="0.0188%" height="15" fill="rgb(235,172,48)" fg:x="1611" fg:w="2"/><text x="15.3810%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::beginComputePass (51 samples, 0.48%)</title><rect x="14.7459%" y="629" width="0.4790%" height="15" fill="rgb(249,201,17)" fg:x="1570" fg:w="51"/><text x="14.9959%" y="639.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (5 samples, 0.05%)</title><rect x="15.1780%" y="613" width="0.0470%" height="15" fill="rgb(219,208,6)" fg:x="1616" fg:w="5"/><text x="15.4280%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::bindComputeResources (6 samples, 0.06%)</title><rect x="15.2249%" y="629" width="0.0564%" height="15" fill="rgb(248,31,23)" fg:x="1621" fg:w="6"/><text x="15.4749%" y="639.50"></text></g><g><title>AGXMetal13_3`AGX::ESLInstructionEncoderGen2_3&lt;AGX::G13::Encoders&gt;::SpecLM::setComputeImageBlockData (2 samples, 0.02%)</title><rect x="15.3940%" y="613" width="0.0188%" height="15" fill="rgb(245,15,42)" fg:x="1639" fg:w="2"/><text x="15.6440%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::BlitUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitComputeProgramVariantArguments (18 samples, 0.17%)</title><rect x="15.3001%" y="629" width="0.1691%" height="15" fill="rgb(222,217,39)" fg:x="1629" fg:w="18"/><text x="15.5501%" y="639.50"></text></g><g><title>AGXMetal13_3`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformCompute&lt;AGX::G13::Encoders&gt;&gt;(unsigned long long*, unsigned long long**, unsigned int, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*, unsigned long long const*, LdShdrTransformCompute (6 samples, 0.06%)</title><rect x="15.4128%" y="613" width="0.0564%" height="15" fill="rgb(210,219,27)" fg:x="1641" fg:w="6"/><text x="15.6628%" y="623.50"></text></g><g><title>libdispatch.dylib`dispatch_group_wait (4 samples, 0.04%)</title><rect x="15.5255%" y="629" width="0.0376%" height="15" fill="rgb(252,166,36)" fg:x="1653" fg:w="4"/><text x="15.7755%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="15.5631%" y="629" width="0.0564%" height="15" fill="rgb(245,132,34)" fg:x="1657" fg:w="6"/><text x="15.8131%" y="639.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::blitCDMBuffer (100 samples, 0.94%)</title><rect x="14.7084%" y="645" width="0.9392%" height="15" fill="rgb(236,54,3)" fg:x="1566" fg:w="100"/><text x="14.9584%" y="655.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (3 samples, 0.03%)</title><rect x="15.6194%" y="629" width="0.0282%" height="15" fill="rgb(241,173,43)" fg:x="1663" fg:w="3"/><text x="15.8694%" y="639.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::checkDependentBlits (6 samples, 0.06%)</title><rect x="15.6476%" y="645" width="0.0564%" height="15" fill="rgb(215,190,9)" fg:x="1666" fg:w="6"/><text x="15.8976%" y="655.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyBlitContext copyFromBuffer:sourceOffset:toBuffer:destinationOffset:size:] (113 samples, 1.06%)</title><rect x="14.6896%" y="661" width="1.0613%" height="15" fill="rgb(242,101,16)" fg:x="1564" fg:w="113"/><text x="14.9396%" y="671.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (3 samples, 0.03%)</title><rect x="15.7227%" y="645" width="0.0282%" height="15" fill="rgb(223,190,21)" fg:x="1674" fg:w="3"/><text x="15.9727%" y="655.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (2 samples, 0.02%)</title><rect x="15.7697%" y="661" width="0.0188%" height="15" fill="rgb(215,228,25)" fg:x="1679" fg:w="2"/><text x="16.0197%" y="671.50"></text></g><g><title>AGXMetal13_3`AGX::BlitDispatchContextGen2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::BlitDispatchContextGen2(AGX::ContextCommon (2 samples, 0.02%)</title><rect x="15.8730%" y="597" width="0.0188%" height="15" fill="rgb(225,36,22)" fg:x="1690" fg:w="2"/><text x="16.1230%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_should_clear (3 samples, 0.03%)</title><rect x="15.9388%" y="581" width="0.0282%" height="15" fill="rgb(251,106,46)" fg:x="1697" fg:w="3"/><text x="16.1888%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`small_malloc_from_free_list (2 samples, 0.02%)</title><rect x="15.9482%" y="565" width="0.0188%" height="15" fill="rgb(208,90,1)" fg:x="1698" fg:w="2"/><text x="16.1982%" y="575.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyBlitContext initWithCommandBuffer:descriptor:] (17 samples, 0.16%)</title><rect x="15.8636%" y="613" width="0.1597%" height="15" fill="rgb(243,10,4)" fg:x="1689" fg:w="17"/><text x="16.1136%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 0.08%)</title><rect x="15.9388%" y="597" width="0.0845%" height="15" fill="rgb(212,137,27)" fg:x="1697" fg:w="9"/><text x="16.1888%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.06%)</title><rect x="15.9669%" y="581" width="0.0564%" height="15" fill="rgb(231,220,49)" fg:x="1700" fg:w="6"/><text x="16.2169%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::BlitCounterSamplingContextGen1::BlitCounterSamplingContextGen1 (4 samples, 0.04%)</title><rect x="16.0421%" y="613" width="0.0376%" height="15" fill="rgb(237,96,20)" fg:x="1708" fg:w="4"/><text x="16.2921%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_autorelease (2 samples, 0.02%)</title><rect x="16.0984%" y="613" width="0.0188%" height="15" fill="rgb(239,229,30)" fg:x="1714" fg:w="2"/><text x="16.3484%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer blitCommandEncoderCommon:] (30 samples, 0.28%)</title><rect x="15.8448%" y="629" width="0.2818%" height="15" fill="rgb(219,65,33)" fg:x="1687" fg:w="30"/><text x="16.0948%" y="639.50"></text></g><g><title>AGXMetal13_3`AGX::BlitCounterSamplingContextGen1::BlitCounterSamplingContextGen1 (2 samples, 0.02%)</title><rect x="16.1360%" y="629" width="0.0188%" height="15" fill="rgb(243,134,7)" fg:x="1718" fg:w="2"/><text x="16.3860%" y="639.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::copy_buffer_to_buffer (160 samples, 1.50%)</title><rect x="14.6802%" y="677" width="1.5028%" height="15" fill="rgb(216,177,54)" fg:x="1563" fg:w="160"/><text x="14.9302%" y="687.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (42 samples, 0.39%)</title><rect x="15.7885%" y="661" width="0.3945%" height="15" fill="rgb(211,160,20)" fg:x="1681" fg:w="42"/><text x="16.0385%" y="671.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (36 samples, 0.34%)</title><rect x="15.8448%" y="645" width="0.3381%" height="15" fill="rgb(239,85,39)" fg:x="1687" fg:w="36"/><text x="16.0948%" y="655.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="16.1830%" y="677" width="0.0282%" height="15" fill="rgb(232,125,22)" fg:x="1723" fg:w="3"/><text x="16.4330%" y="687.50"></text></g><g><title>FramePacing`FPCommandBufferCreated (2 samples, 0.02%)</title><rect x="16.2675%" y="597" width="0.0188%" height="15" fill="rgb(244,57,34)" fg:x="1732" fg:w="2"/><text x="16.5175%" y="607.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (3 samples, 0.03%)</title><rect x="16.2863%" y="597" width="0.0282%" height="15" fill="rgb(214,203,32)" fg:x="1734" fg:w="3"/><text x="16.5363%" y="607.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageSetupShmems (2 samples, 0.02%)</title><rect x="16.2957%" y="581" width="0.0188%" height="15" fill="rgb(207,58,43)" fg:x="1735" fg:w="2"/><text x="16.5457%" y="591.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginKernelCommands (2 samples, 0.02%)</title><rect x="16.2957%" y="565" width="0.0188%" height="15" fill="rgb(215,193,15)" fg:x="1735" fg:w="2"/><text x="16.5457%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (22 samples, 0.21%)</title><rect x="16.3145%" y="565" width="0.2066%" height="15" fill="rgb(232,15,44)" fg:x="1737" fg:w="22"/><text x="16.5645%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (22 samples, 0.21%)</title><rect x="16.3145%" y="549" width="0.2066%" height="15" fill="rgb(212,3,48)" fg:x="1737" fg:w="22"/><text x="16.5645%" y="559.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (23 samples, 0.22%)</title><rect x="16.3145%" y="581" width="0.2160%" height="15" fill="rgb(218,128,7)" fg:x="1737" fg:w="23"/><text x="16.5645%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (25 samples, 0.23%)</title><rect x="16.3145%" y="597" width="0.2348%" height="15" fill="rgb(226,216,39)" fg:x="1737" fg:w="25"/><text x="16.5645%" y="607.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (31 samples, 0.29%)</title><rect x="16.2675%" y="613" width="0.2912%" height="15" fill="rgb(243,47,51)" fg:x="1732" fg:w="31"/><text x="16.5175%" y="623.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (5 samples, 0.05%)</title><rect x="16.5587%" y="613" width="0.0470%" height="15" fill="rgb(241,183,40)" fg:x="1763" fg:w="5"/><text x="16.8087%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.05%)</title><rect x="16.5587%" y="597" width="0.0470%" height="15" fill="rgb(231,217,32)" fg:x="1763" fg:w="5"/><text x="16.8087%" y="607.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer initWithQueue:retainedReferences:] (38 samples, 0.36%)</title><rect x="16.2581%" y="629" width="0.3569%" height="15" fill="rgb(229,61,38)" fg:x="1731" fg:w="38"/><text x="16.5081%" y="639.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (2 samples, 0.02%)</title><rect x="16.6244%" y="629" width="0.0188%" height="15" fill="rgb(225,210,5)" fg:x="1770" fg:w="2"/><text x="16.8744%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandQueue commandBufferWithUnretainedReferences] (42 samples, 0.39%)</title><rect x="16.2581%" y="645" width="0.3945%" height="15" fill="rgb(231,79,45)" fg:x="1731" fg:w="42"/><text x="16.5081%" y="655.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (3 samples, 0.03%)</title><rect x="16.6995%" y="597" width="0.0282%" height="15" fill="rgb(224,100,7)" fg:x="1778" fg:w="3"/><text x="16.9495%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (2 samples, 0.02%)</title><rect x="16.7089%" y="581" width="0.0188%" height="15" fill="rgb(241,198,18)" fg:x="1779" fg:w="2"/><text x="16.9589%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="16.7089%" y="565" width="0.0188%" height="15" fill="rgb(252,97,53)" fg:x="1779" fg:w="2"/><text x="16.9589%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (2 samples, 0.02%)</title><rect x="16.7089%" y="549" width="0.0188%" height="15" fill="rgb(220,88,7)" fg:x="1779" fg:w="2"/><text x="16.9589%" y="559.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (53 samples, 0.50%)</title><rect x="16.2393%" y="677" width="0.4978%" height="15" fill="rgb(213,176,14)" fg:x="1729" fg:w="53"/><text x="16.4893%" y="687.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (51 samples, 0.48%)</title><rect x="16.2581%" y="661" width="0.4790%" height="15" fill="rgb(246,73,7)" fg:x="1731" fg:w="51"/><text x="16.5081%" y="671.50"></text></g><g><title>ostinato`metal::commandbuffer::CommandBufferRef::set_label (6 samples, 0.06%)</title><rect x="16.6808%" y="645" width="0.0564%" height="15" fill="rgb(245,64,36)" fg:x="1776" fg:w="6"/><text x="16.9308%" y="655.50"></text></g><g><title>ostinato`metal::nsstring_from_str (4 samples, 0.04%)</title><rect x="16.6995%" y="629" width="0.0376%" height="15" fill="rgb(245,80,10)" fg:x="1778" fg:w="4"/><text x="16.9495%" y="639.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (4 samples, 0.04%)</title><rect x="16.6995%" y="613" width="0.0376%" height="15" fill="rgb(232,107,50)" fg:x="1778" fg:w="4"/><text x="16.9495%" y="623.50"></text></g><g><title>ostinato`wgpu_core::device::queue::Queue::write_staging_buffer_impl (230 samples, 2.16%)</title><rect x="14.6051%" y="693" width="2.1602%" height="15" fill="rgb(253,3,0)" fg:x="1555" fg:w="230"/><text x="14.8551%" y="703.50">o..</text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::enter_blit (3 samples, 0.03%)</title><rect x="16.7371%" y="677" width="0.0282%" height="15" fill="rgb(212,99,53)" fg:x="1782" fg:w="3"/><text x="16.9871%" y="687.50"></text></g><g><title>ostinato`wgpu_core::init_tracker::InitTracker&lt;Idx&gt;::drain (3 samples, 0.03%)</title><rect x="16.7653%" y="693" width="0.0282%" height="15" fill="rgb(249,111,54)" fg:x="1785" fg:w="3"/><text x="17.0153%" y="703.50"></text></g><g><title>ostinato`wgpu_core::resource::ParentDevice::same_device_as (2 samples, 0.02%)</title><rect x="16.7935%" y="693" width="0.0188%" height="15" fill="rgb(249,55,30)" fg:x="1788" fg:w="2"/><text x="17.0435%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="16.8592%" y="645" width="0.0188%" height="15" fill="rgb(237,47,42)" fg:x="1795" fg:w="2"/><text x="17.1092%" y="655.50"></text></g><g><title>ostinato`metal::device::DeviceRef::new_buffer (3 samples, 0.03%)</title><rect x="16.8780%" y="645" width="0.0282%" height="15" fill="rgb(211,20,18)" fg:x="1797" fg:w="3"/><text x="17.1280%" y="655.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice _addResource:] (2 samples, 0.02%)</title><rect x="16.9531%" y="565" width="0.0188%" height="15" fill="rgb(231,203,46)" fg:x="1805" fg:w="2"/><text x="17.2031%" y="575.50"></text></g><g><title>IOKit`io_connect_method (175 samples, 1.64%)</title><rect x="17.0283%" y="517" width="1.6437%" height="15" fill="rgb(237,142,3)" fg:x="1813" fg:w="175"/><text x="17.2783%" y="527.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (172 samples, 1.62%)</title><rect x="17.0564%" y="501" width="1.6155%" height="15" fill="rgb(241,107,1)" fg:x="1816" fg:w="172"/><text x="17.3064%" y="511.50"></text></g><g><title>IOGPU`IOGPUResourceCreate (179 samples, 1.68%)</title><rect x="17.0189%" y="549" width="1.6812%" height="15" fill="rgb(229,83,13)" fg:x="1812" fg:w="179"/><text x="17.2689%" y="559.50"></text></g><g><title>IOKit`IOConnectCallMethod (178 samples, 1.67%)</title><rect x="17.0283%" y="533" width="1.6718%" height="15" fill="rgb(241,91,40)" fg:x="1813" fg:w="178"/><text x="17.2783%" y="543.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.04%)</title><rect x="18.7095%" y="549" width="0.0376%" height="15" fill="rgb(225,3,45)" fg:x="1992" fg:w="4"/><text x="18.9595%" y="559.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (2 samples, 0.02%)</title><rect x="18.7658%" y="517" width="0.0188%" height="15" fill="rgb(244,223,14)" fg:x="1998" fg:w="2"/><text x="19.0158%" y="527.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (10 samples, 0.09%)</title><rect x="18.7471%" y="549" width="0.0939%" height="15" fill="rgb(224,124,37)" fg:x="1996" fg:w="10"/><text x="18.9971%" y="559.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (8 samples, 0.08%)</title><rect x="18.7658%" y="533" width="0.0751%" height="15" fill="rgb(251,171,30)" fg:x="1998" fg:w="8"/><text x="19.0158%" y="543.50"></text></g><g><title>libobjc.A.dylib`weak_entry_for_referent(weak_table_t*, objc_object*) (6 samples, 0.06%)</title><rect x="18.7846%" y="517" width="0.0564%" height="15" fill="rgb(236,46,54)" fg:x="2000" fg:w="6"/><text x="19.0346%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource initWithDevice:remoteStorageResource:options:args:argsSize:] (201 samples, 1.89%)</title><rect x="16.9719%" y="565" width="1.8879%" height="15" fill="rgb(245,213,5)" fg:x="1807" fg:w="201"/><text x="17.2219%" y="575.50">I..</text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="18.8692%" y="565" width="0.0282%" height="15" fill="rgb(230,144,27)" fg:x="2009" fg:w="3"/><text x="19.1192%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (4 samples, 0.04%)</title><rect x="18.8973%" y="565" width="0.0376%" height="15" fill="rgb(220,86,6)" fg:x="2012" fg:w="4"/><text x="19.1473%" y="575.50"></text></g><g><title>IOGPU`-[IOGPUMetalBuffer initWithPrimaryBuffer:heapIndex:bufferIndex:bufferOffset:length:args:argsSize:gpuTag:] (215 samples, 2.02%)</title><rect x="16.9250%" y="581" width="2.0193%" height="15" fill="rgb(240,20,13)" fg:x="1802" fg:w="215"/><text x="17.1750%" y="591.50">I..</text></g><g><title>IOGPU`IOGPUMetalSuballocatorAllocate (3 samples, 0.03%)</title><rect x="18.9537%" y="565" width="0.0282%" height="15" fill="rgb(217,89,34)" fg:x="2018" fg:w="3"/><text x="19.2037%" y="575.50"></text></g><g><title>Metal`MTLRangeAllocatorAllocate (4 samples, 0.04%)</title><rect x="18.9819%" y="565" width="0.0376%" height="15" fill="rgb(229,13,5)" fg:x="2021" fg:w="4"/><text x="19.2319%" y="575.50"></text></g><g><title>Metal`MTLRangeAllocatorGetMaxFreeSize (2 samples, 0.02%)</title><rect x="19.0194%" y="565" width="0.0188%" height="15" fill="rgb(244,67,35)" fg:x="2025" fg:w="2"/><text x="19.2694%" y="575.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (13 samples, 0.12%)</title><rect x="18.9443%" y="581" width="0.1221%" height="15" fill="rgb(221,40,2)" fg:x="2017" fg:w="13"/><text x="19.1943%" y="591.50"></text></g><g><title>IOGPU`IOGPUMetalSuballocatorAllocate (2 samples, 0.02%)</title><rect x="19.0758%" y="581" width="0.0188%" height="15" fill="rgb(237,157,21)" fg:x="2031" fg:w="2"/><text x="19.3258%" y="591.50"></text></g><g><title>AGXMetal13_3`-[AGXBuffer(Internal) initWithDevice:length:alignment:pointerTag:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (236 samples, 2.22%)</title><rect x="16.9062%" y="597" width="2.2166%" height="15" fill="rgb(222,94,11)" fg:x="1800" fg:w="236"/><text x="17.1562%" y="607.50">A..</text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="19.0946%" y="581" width="0.0282%" height="15" fill="rgb(249,113,6)" fg:x="2033" fg:w="3"/><text x="19.3446%" y="591.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice allocBufferSubDataWithLength:options:alignment:heapIndex:bufferIndex:bufferOffset:parentAddress:parentLength:] (3 samples, 0.03%)</title><rect x="19.1321%" y="597" width="0.0282%" height="15" fill="rgb(238,137,36)" fg:x="2037" fg:w="3"/><text x="19.3821%" y="607.50"></text></g><g><title>AGXMetal13_3`-[AGXBuffer initWithDevice:length:alignment:options:isSuballocDisabled:pinnedGPULocation:] (245 samples, 2.30%)</title><rect x="16.9062%" y="629" width="2.3011%" height="15" fill="rgb(210,102,26)" fg:x="1800" fg:w="245"/><text x="17.1562%" y="639.50">A..</text></g><g><title>AGXMetal13_3`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (245 samples, 2.30%)</title><rect x="16.9062%" y="613" width="2.3011%" height="15" fill="rgb(218,30,30)" fg:x="1800" fg:w="245"/><text x="17.1562%" y="623.50">A..</text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="19.1603%" y="597" width="0.0470%" height="15" fill="rgb(214,67,26)" fg:x="2040" fg:w="5"/><text x="19.4103%" y="607.50"></text></g><g><title>AGXMetal13_3`-[AGXBuffer(Internal) initWithDevice:length:alignment:options:isSuballocDisabled:resourceInArgs:pinnedGPULocation:] (4 samples, 0.04%)</title><rect x="19.2073%" y="629" width="0.0376%" height="15" fill="rgb(251,9,53)" fg:x="2045" fg:w="4"/><text x="19.4573%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice newBufferWithLength:options:] (5 samples, 0.05%)</title><rect x="19.2449%" y="629" width="0.0470%" height="15" fill="rgb(228,204,25)" fg:x="2049" fg:w="5"/><text x="19.4949%" y="639.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (5 samples, 0.05%)</title><rect x="19.2449%" y="613" width="0.0470%" height="15" fill="rgb(207,153,8)" fg:x="2049" fg:w="5"/><text x="19.4949%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (5 samples, 0.05%)</title><rect x="19.2449%" y="597" width="0.0470%" height="15" fill="rgb(242,9,16)" fg:x="2049" fg:w="5"/><text x="19.4949%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (4 samples, 0.04%)</title><rect x="19.2543%" y="581" width="0.0376%" height="15" fill="rgb(217,211,10)" fg:x="2050" fg:w="4"/><text x="19.5043%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (3 samples, 0.03%)</title><rect x="19.2636%" y="565" width="0.0282%" height="15" fill="rgb(219,228,52)" fg:x="2051" fg:w="3"/><text x="19.5136%" y="575.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="19.2918%" y="629" width="0.0188%" height="15" fill="rgb(231,92,29)" fg:x="2054" fg:w="2"/><text x="19.5418%" y="639.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (2 samples, 0.02%)</title><rect x="19.3857%" y="581" width="0.0188%" height="15" fill="rgb(232,8,23)" fg:x="2064" fg:w="2"/><text x="19.6357%" y="591.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (10 samples, 0.09%)</title><rect x="19.3200%" y="597" width="0.0939%" height="15" fill="rgb(216,211,34)" fg:x="2057" fg:w="10"/><text x="19.5700%" y="607.50"></text></g><g><title>ostinato`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_buffer (278 samples, 2.61%)</title><rect x="16.8122%" y="677" width="2.6111%" height="15" fill="rgb(236,151,0)" fg:x="1790" fg:w="278"/><text x="17.0622%" y="687.50">os..</text></g><g><title>ostinato`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (276 samples, 2.59%)</title><rect x="16.8310%" y="661" width="2.5923%" height="15" fill="rgb(209,168,3)" fg:x="1792" fg:w="276"/><text x="17.0810%" y="671.50">os..</text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (268 samples, 2.52%)</title><rect x="16.9062%" y="645" width="2.5171%" height="15" fill="rgb(208,129,28)" fg:x="1800" fg:w="268"/><text x="17.1562%" y="655.50">os..</text></g><g><title>ostinato`metal::resource::ResourceRef::set_label (11 samples, 0.10%)</title><rect x="19.3200%" y="629" width="0.1033%" height="15" fill="rgb(229,78,22)" fg:x="2057" fg:w="11"/><text x="19.5700%" y="639.50"></text></g><g><title>ostinato`metal::nsstring_from_str (11 samples, 0.10%)</title><rect x="19.3200%" y="613" width="0.1033%" height="15" fill="rgb(228,187,13)" fg:x="2057" fg:w="11"/><text x="19.5700%" y="623.50"></text></g><g><title>ostinato`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::map_buffer (3 samples, 0.03%)</title><rect x="19.4233%" y="677" width="0.0282%" height="15" fill="rgb(240,119,24)" fg:x="2068" fg:w="3"/><text x="19.6733%" y="687.50"></text></g><g><title>ostinato`&lt;wgpu_hal::metal::Buffer as wgpu_hal::dynamic::DynResource&gt;::as_any (2 samples, 0.02%)</title><rect x="19.4515%" y="677" width="0.0188%" height="15" fill="rgb(209,194,42)" fg:x="2071" fg:w="2"/><text x="19.7015%" y="687.50"></text></g><g><title>ostinato`wgpu_core::device::queue::Queue::write_buffer (532 samples, 5.00%)</title><rect x="14.4923%" y="709" width="4.9967%" height="15" fill="rgb(247,200,46)" fg:x="1543" fg:w="532"/><text x="14.7423%" y="719.50">ostina..</text></g><g><title>ostinato`wgpu_core::resource::StagingBuffer::new (285 samples, 2.68%)</title><rect x="16.8122%" y="693" width="2.6768%" height="15" fill="rgb(218,76,16)" fg:x="1790" fg:w="285"/><text x="17.0622%" y="703.50">os..</text></g><g><title>ostinato`wgpu_hal::metal::device::_&lt;impl wgpu_hal::Device for wgpu_hal::metal::Device&gt;::create_buffer (2 samples, 0.02%)</title><rect x="19.4703%" y="677" width="0.0188%" height="15" fill="rgb(225,21,48)" fg:x="2073" fg:w="2"/><text x="19.7203%" y="687.50"></text></g><g><title>ostinato`wgpu_core::device::queue::Queue::write_staging_buffer_impl (2 samples, 0.02%)</title><rect x="19.4891%" y="709" width="0.0188%" height="15" fill="rgb(239,223,50)" fg:x="2075" fg:w="2"/><text x="19.7391%" y="719.50"></text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (4 samples, 0.04%)</title><rect x="19.5078%" y="709" width="0.0376%" height="15" fill="rgb(244,45,21)" fg:x="2077" fg:w="4"/><text x="19.7578%" y="719.50"></text></g><g><title>ostinato`wgpu_core::storage::Storage&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="19.5172%" y="693" width="0.0282%" height="15" fill="rgb(232,33,43)" fg:x="2078" fg:w="3"/><text x="19.7672%" y="703.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_buffer (542 samples, 5.09%)</title><rect x="14.4642%" y="741" width="5.0906%" height="15" fill="rgb(209,8,3)" fg:x="1540" fg:w="542"/><text x="14.7142%" y="751.50">ostina..</text></g><g><title>ostinato`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (542 samples, 5.09%)</title><rect x="14.4642%" y="725" width="5.0906%" height="15" fill="rgb(214,25,53)" fg:x="1540" fg:w="542"/><text x="14.7142%" y="735.50">ostina..</text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (9 samples, 0.08%)</title><rect x="19.6206%" y="709" width="0.0845%" height="15" fill="rgb(254,186,54)" fg:x="2089" fg:w="9"/><text x="19.8706%" y="719.50"></text></g><g><title>ostinato`wgpu_core::storage::Storage&lt;T&gt;::get (5 samples, 0.05%)</title><rect x="19.6581%" y="693" width="0.0470%" height="15" fill="rgb(208,174,49)" fg:x="2093" fg:w="5"/><text x="19.9081%" y="703.50"></text></g><g><title>ostinato`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_set_bind_group (12 samples, 0.11%)</title><rect x="19.6112%" y="725" width="0.1127%" height="15" fill="rgb(233,191,51)" fg:x="2088" fg:w="12"/><text x="19.8612%" y="735.50"></text></g><g><title>ostinato`wgpu_core::storage::Storage&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="19.7051%" y="709" width="0.0188%" height="15" fill="rgb(222,134,10)" fg:x="2098" fg:w="2"/><text x="19.9551%" y="719.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::set_bind_group (18 samples, 0.17%)</title><rect x="19.5642%" y="741" width="0.1691%" height="15" fill="rgb(230,226,20)" fg:x="2083" fg:w="18"/><text x="19.8142%" y="751.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.02%)</title><rect x="19.7333%" y="709" width="0.0188%" height="15" fill="rgb(251,111,25)" fg:x="2101" fg:w="2"/><text x="19.9833%" y="719.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="19.7333%" y="693" width="0.0188%" height="15" fill="rgb(224,40,46)" fg:x="2101" fg:w="2"/><text x="19.9833%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (2 samples, 0.02%)</title><rect x="19.7333%" y="677" width="0.0188%" height="15" fill="rgb(236,108,47)" fg:x="2101" fg:w="2"/><text x="19.9833%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="19.7333%" y="661" width="0.0188%" height="15" fill="rgb(234,93,0)" fg:x="2101" fg:w="2"/><text x="19.9833%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="19.7333%" y="645" width="0.0188%" height="15" fill="rgb(224,213,32)" fg:x="2101" fg:w="2"/><text x="19.9833%" y="655.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::set_index_buffer (5 samples, 0.05%)</title><rect x="19.7333%" y="741" width="0.0470%" height="15" fill="rgb(251,11,48)" fg:x="2101" fg:w="5"/><text x="19.9833%" y="751.50"></text></g><g><title>ostinato`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_set_index_buffer (5 samples, 0.05%)</title><rect x="19.7333%" y="725" width="0.0470%" height="15" fill="rgb(236,173,5)" fg:x="2101" fg:w="5"/><text x="19.9833%" y="735.50"></text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="19.7520%" y="709" width="0.0282%" height="15" fill="rgb(230,95,12)" fg:x="2103" fg:w="3"/><text x="20.0020%" y="719.50"></text></g><g><title>ostinato`wgpu_core::storage::Storage&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="19.7520%" y="693" width="0.0282%" height="15" fill="rgb(232,209,1)" fg:x="2103" fg:w="3"/><text x="20.0020%" y="703.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::command::render::RenderPassErrorInner&gt; (2 samples, 0.02%)</title><rect x="19.7896%" y="725" width="0.0188%" height="15" fill="rgb(232,6,1)" fg:x="2107" fg:w="2"/><text x="20.0396%" y="735.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.03%)</title><rect x="19.8178%" y="709" width="0.0282%" height="15" fill="rgb(210,224,50)" fg:x="2110" fg:w="3"/><text x="20.0678%" y="719.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="19.8272%" y="693" width="0.0188%" height="15" fill="rgb(228,127,35)" fg:x="2111" fg:w="2"/><text x="20.0772%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="19.8272%" y="677" width="0.0188%" height="15" fill="rgb(245,102,45)" fg:x="2111" fg:w="2"/><text x="20.0772%" y="687.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::command::render::RenderPassErrorInner&gt; (2 samples, 0.02%)</title><rect x="19.8460%" y="709" width="0.0188%" height="15" fill="rgb(214,1,49)" fg:x="2113" fg:w="2"/><text x="20.0960%" y="719.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::set_pipeline (12 samples, 0.11%)</title><rect x="19.7802%" y="741" width="0.1127%" height="15" fill="rgb(226,163,40)" fg:x="2106" fg:w="12"/><text x="20.0302%" y="751.50"></text></g><g><title>ostinato`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_set_pipeline (9 samples, 0.08%)</title><rect x="19.8084%" y="725" width="0.0845%" height="15" fill="rgb(239,212,28)" fg:x="2109" fg:w="9"/><text x="20.0584%" y="735.50"></text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="19.8648%" y="709" width="0.0282%" height="15" fill="rgb(220,20,13)" fg:x="2115" fg:w="3"/><text x="20.1148%" y="719.50"></text></g><g><title>ostinato`wgpu_core::storage::Storage&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="19.8741%" y="693" width="0.0188%" height="15" fill="rgb(210,164,35)" fg:x="2116" fg:w="2"/><text x="20.1241%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (2 samples, 0.02%)</title><rect x="19.8929%" y="661" width="0.0188%" height="15" fill="rgb(248,109,41)" fg:x="2118" fg:w="2"/><text x="20.1429%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`szone_realloc (2 samples, 0.02%)</title><rect x="19.8929%" y="645" width="0.0188%" height="15" fill="rgb(238,23,50)" fg:x="2118" fg:w="2"/><text x="20.1429%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`tiny_try_realloc_in_place (2 samples, 0.02%)</title><rect x="19.8929%" y="629" width="0.0188%" height="15" fill="rgb(211,48,49)" fg:x="2118" fg:w="2"/><text x="20.1429%" y="639.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (3 samples, 0.03%)</title><rect x="19.8929%" y="709" width="0.0282%" height="15" fill="rgb(223,36,21)" fg:x="2118" fg:w="3"/><text x="20.1429%" y="719.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="19.8929%" y="693" width="0.0282%" height="15" fill="rgb(207,123,46)" fg:x="2118" fg:w="3"/><text x="20.1429%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.03%)</title><rect x="19.8929%" y="677" width="0.0282%" height="15" fill="rgb(240,218,32)" fg:x="2118" fg:w="3"/><text x="20.1429%" y="687.50"></text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="19.9211%" y="709" width="0.0282%" height="15" fill="rgb(252,5,43)" fg:x="2121" fg:w="3"/><text x="20.1711%" y="719.50"></text></g><g><title>ostinato`wgpu_core::storage::Storage&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="19.9211%" y="693" width="0.0282%" height="15" fill="rgb(252,84,19)" fg:x="2121" fg:w="3"/><text x="20.1711%" y="703.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::set_vertex_buffer (10 samples, 0.09%)</title><rect x="19.8929%" y="741" width="0.0939%" height="15" fill="rgb(243,152,39)" fg:x="2118" fg:w="10"/><text x="20.1429%" y="751.50"></text></g><g><title>ostinato`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_set_vertex_buffer (10 samples, 0.09%)</title><rect x="19.8929%" y="725" width="0.0939%" height="15" fill="rgb(234,160,15)" fg:x="2118" fg:w="10"/><text x="20.1429%" y="735.50"></text></g><g><title>ostinato`wgpu_core::storage::Storage&lt;T&gt;::get (4 samples, 0.04%)</title><rect x="19.9493%" y="709" width="0.0376%" height="15" fill="rgb(237,34,20)" fg:x="2124" fg:w="4"/><text x="20.1993%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="20.0056%" y="725" width="0.0188%" height="15" fill="rgb(229,97,13)" fg:x="2130" fg:w="2"/><text x="20.2556%" y="735.50"></text></g><g><title>ostinato`alloc::alloc::exchange_malloc (3 samples, 0.03%)</title><rect x="20.2123%" y="693" width="0.0282%" height="15" fill="rgb(234,71,50)" fg:x="2152" fg:w="3"/><text x="20.4623%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.03%)</title><rect x="20.2123%" y="677" width="0.0282%" height="15" fill="rgb(253,155,4)" fg:x="2152" fg:w="3"/><text x="20.4623%" y="687.50"></text></g><g><title>ostinato`wgpu_core::device::resource::Device::describe_format_features (4 samples, 0.04%)</title><rect x="20.2498%" y="693" width="0.0376%" height="15" fill="rgb(222,185,37)" fg:x="2156" fg:w="4"/><text x="20.4998%" y="703.50"></text></g><g><title>ostinato`wgpu_types::TextureFormat::sample_type (2 samples, 0.02%)</title><rect x="20.2686%" y="677" width="0.0188%" height="15" fill="rgb(251,177,13)" fg:x="2158" fg:w="2"/><text x="20.5186%" y="687.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.02%)</title><rect x="20.2874%" y="677" width="0.0188%" height="15" fill="rgb(250,179,40)" fg:x="2160" fg:w="2"/><text x="20.5374%" y="687.50"></text></g><g><title>ostinato`wgpu_core::weak_vec::WeakVec&lt;T&gt;::push (4 samples, 0.04%)</title><rect x="20.2874%" y="693" width="0.0376%" height="15" fill="rgb(242,44,2)" fg:x="2160" fg:w="4"/><text x="20.5374%" y="703.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="20.3062%" y="677" width="0.0188%" height="15" fill="rgb(216,177,13)" fg:x="2162" fg:w="2"/><text x="20.5562%" y="687.50"></text></g><g><title>ostinato`wgpu_core::device::resource::Device::create_texture_view (28 samples, 0.26%)</title><rect x="20.0714%" y="709" width="0.2630%" height="15" fill="rgb(216,106,43)" fg:x="2137" fg:w="28"/><text x="20.3214%" y="719.50"></text></g><g><title>ostinato`wgpu_core::device::resource::Device::describe_format_features (2 samples, 0.02%)</title><rect x="20.3344%" y="709" width="0.0188%" height="15" fill="rgb(216,183,2)" fg:x="2165" fg:w="2"/><text x="20.5844%" y="719.50"></text></g><g><title>ostinato`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::texture_create_view (38 samples, 0.36%)</title><rect x="20.0244%" y="725" width="0.3569%" height="15" fill="rgb(249,75,3)" fg:x="2132" fg:w="38"/><text x="20.2744%" y="735.50"></text></g><g><title>ostinato`wgpu_core::registry::FutureId&lt;T&gt;::assign (2 samples, 0.02%)</title><rect x="20.3625%" y="709" width="0.0188%" height="15" fill="rgb(219,67,39)" fg:x="2168" fg:w="2"/><text x="20.6125%" y="719.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreTexture as wgpu::dispatch::TextureInterface&gt;::create_view (42 samples, 0.39%)</title><rect x="19.9962%" y="741" width="0.3945%" height="15" fill="rgb(253,228,2)" fg:x="2129" fg:w="42"/><text x="20.2462%" y="751.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreTextureView as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="20.3907%" y="741" width="0.0188%" height="15" fill="rgb(235,138,27)" fg:x="2171" fg:w="2"/><text x="20.6407%" y="751.50"></text></g><g><title>ostinato`DYLD-STUB$$CFRunLoopWakeUp (2 samples, 0.02%)</title><rect x="20.4095%" y="741" width="0.0188%" height="15" fill="rgb(236,97,51)" fg:x="2173" fg:w="2"/><text x="20.6595%" y="751.50"></text></g><g><title>ostinato`&lt;ostinato::ResourceId as core::fmt::Debug&gt;::fmt (5 samples, 0.05%)</title><rect x="20.4377%" y="709" width="0.0470%" height="15" fill="rgb(240,80,30)" fg:x="2176" fg:w="5"/><text x="20.6877%" y="719.50"></text></g><g><title>ostinato`core::fmt::Formatter::debug_tuple_field1_finish (4 samples, 0.04%)</title><rect x="20.4471%" y="693" width="0.0376%" height="15" fill="rgb(230,178,19)" fg:x="2177" fg:w="4"/><text x="20.6971%" y="703.50"></text></g><g><title>ostinato`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.02%)</title><rect x="20.4659%" y="677" width="0.0188%" height="15" fill="rgb(210,190,27)" fg:x="2179" fg:w="2"/><text x="20.7159%" y="687.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (10 samples, 0.09%)</title><rect x="20.4283%" y="741" width="0.0939%" height="15" fill="rgb(222,107,31)" fg:x="2175" fg:w="10"/><text x="20.6783%" y="751.50"></text></g><g><title>ostinato`core::fmt::write (10 samples, 0.09%)</title><rect x="20.4283%" y="725" width="0.0939%" height="15" fill="rgb(216,127,34)" fg:x="2175" fg:w="10"/><text x="20.6783%" y="735.50"></text></g><g><title>ostinato`&lt;str as core::fmt::Debug&gt;::fmt (4 samples, 0.04%)</title><rect x="20.4846%" y="709" width="0.0376%" height="15" fill="rgb(234,116,52)" fg:x="2181" fg:w="4"/><text x="20.7346%" y="719.50"></text></g><g><title>ostinato`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.03%)</title><rect x="20.4940%" y="693" width="0.0282%" height="15" fill="rgb(222,124,15)" fg:x="2182" fg:w="3"/><text x="20.7440%" y="703.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="20.4940%" y="677" width="0.0282%" height="15" fill="rgb(231,179,28)" fg:x="2182" fg:w="3"/><text x="20.7440%" y="687.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="20.4940%" y="661" width="0.0282%" height="15" fill="rgb(226,93,45)" fg:x="2182" fg:w="3"/><text x="20.7440%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (3 samples, 0.03%)</title><rect x="20.4940%" y="645" width="0.0282%" height="15" fill="rgb(215,8,51)" fg:x="2182" fg:w="3"/><text x="20.7440%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (3 samples, 0.03%)</title><rect x="20.4940%" y="629" width="0.0282%" height="15" fill="rgb(223,106,5)" fg:x="2182" fg:w="3"/><text x="20.7440%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.03%)</title><rect x="20.4940%" y="613" width="0.0282%" height="15" fill="rgb(250,191,5)" fg:x="2182" fg:w="3"/><text x="20.7440%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="20.4940%" y="597" width="0.0282%" height="15" fill="rgb(242,132,44)" fg:x="2182" fg:w="3"/><text x="20.7440%" y="607.50"></text></g><g><title>ostinato`alloc::sync::Arc&lt;T,A&gt;::drop_slow (5 samples, 0.05%)</title><rect x="20.5316%" y="741" width="0.0470%" height="15" fill="rgb(251,152,29)" fg:x="2186" fg:w="5"/><text x="20.7816%" y="751.50"></text></g><g><title>ostinato`cgmath::matrix::Matrix4&lt;S&gt;::look_to_rh (2 samples, 0.02%)</title><rect x="20.5880%" y="741" width="0.0188%" height="15" fill="rgb(218,179,5)" fg:x="2192" fg:w="2"/><text x="20.8380%" y="751.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="20.6349%" y="709" width="0.0282%" height="15" fill="rgb(227,67,19)" fg:x="2197" fg:w="3"/><text x="20.8849%" y="719.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_encoding (2 samples, 0.02%)</title><rect x="20.6631%" y="709" width="0.0188%" height="15" fill="rgb(233,119,31)" fg:x="2200" fg:w="2"/><text x="20.9131%" y="719.50"></text></g><g><title>ostinato`wgpu_core::command::bind::Binder::new (2 samples, 0.02%)</title><rect x="20.7288%" y="709" width="0.0188%" height="15" fill="rgb(241,120,22)" fg:x="2207" fg:w="2"/><text x="20.9788%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="20.9730%" y="693" width="0.0282%" height="15" fill="rgb(224,102,30)" fg:x="2233" fg:w="3"/><text x="21.2230%" y="703.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (2 samples, 0.02%)</title><rect x="21.0012%" y="693" width="0.0188%" height="15" fill="rgb(210,164,37)" fg:x="2236" fg:w="2"/><text x="21.2512%" y="703.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::set_index_buffer (3 samples, 0.03%)</title><rect x="21.0200%" y="693" width="0.0282%" height="15" fill="rgb(226,191,16)" fg:x="2238" fg:w="3"/><text x="21.2700%" y="703.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.03%)</title><rect x="21.0670%" y="693" width="0.0282%" height="15" fill="rgb(214,40,45)" fg:x="2243" fg:w="3"/><text x="21.3170%" y="703.50"></text></g><g><title>ostinato`&lt;arrayvec::arrayvec::ArrayVec&lt;T,_&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="21.1045%" y="693" width="0.0282%" height="15" fill="rgb(244,29,26)" fg:x="2247" fg:w="3"/><text x="21.3545%" y="703.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="21.1609%" y="677" width="0.0188%" height="15" fill="rgb(216,16,5)" fg:x="2253" fg:w="2"/><text x="21.4109%" y="687.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="21.1609%" y="661" width="0.0188%" height="15" fill="rgb(249,76,35)" fg:x="2253" fg:w="2"/><text x="21.4109%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="21.1609%" y="645" width="0.0188%" height="15" fill="rgb(207,11,44)" fg:x="2253" fg:w="2"/><text x="21.4109%" y="655.50"></text></g><g><title>ostinato`bit_vec::BitVec&lt;B&gt;::grow (3 samples, 0.03%)</title><rect x="21.1609%" y="693" width="0.0282%" height="15" fill="rgb(228,190,49)" fg:x="2253" fg:w="3"/><text x="21.4109%" y="703.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::command::bind::Binder&gt; (2 samples, 0.02%)</title><rect x="21.1891%" y="693" width="0.0188%" height="15" fill="rgb(214,173,12)" fg:x="2256" fg:w="2"/><text x="21.4391%" y="703.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::command::bind::EntryPayload&gt; (2 samples, 0.02%)</title><rect x="21.2079%" y="693" width="0.0188%" height="15" fill="rgb(218,26,35)" fg:x="2258" fg:w="2"/><text x="21.4579%" y="703.50"></text></g><g><title>ostinato`&lt;wgpu_core::track::UsageScope as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="21.2360%" y="677" width="0.0188%" height="15" fill="rgb(220,200,19)" fg:x="2261" fg:w="2"/><text x="21.4860%" y="687.50"></text></g><g><title>ostinato`wgpu_core::track::texture::TextureUsageScope::clear (2 samples, 0.02%)</title><rect x="21.2360%" y="661" width="0.0188%" height="15" fill="rgb(239,95,49)" fg:x="2261" fg:w="2"/><text x="21.4860%" y="671.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu_core::track::UsageScope&gt; (5 samples, 0.05%)</title><rect x="21.2266%" y="693" width="0.0470%" height="15" fill="rgb(235,85,53)" fg:x="2260" fg:w="5"/><text x="21.4766%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::texture::TextureUsageScope::clear (2 samples, 0.02%)</title><rect x="21.2548%" y="677" width="0.0188%" height="15" fill="rgb(233,133,31)" fg:x="2263" fg:w="2"/><text x="21.5048%" y="687.50"></text></g><g><title>ostinato`metal::encoder::RenderCommandEncoderRef::draw_indexed_primitives (2 samples, 0.02%)</title><rect x="21.3018%" y="693" width="0.0188%" height="15" fill="rgb(218,25,20)" fg:x="2268" fg:w="2"/><text x="21.5518%" y="703.50"></text></g><g><title>ostinato`wgpu_core::binding_model::BindGroup::validate_dynamic_bindings (3 samples, 0.03%)</title><rect x="21.3300%" y="693" width="0.0282%" height="15" fill="rgb(252,210,38)" fg:x="2271" fg:w="3"/><text x="21.5800%" y="703.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="21.3675%" y="677" width="0.0188%" height="15" fill="rgb(242,134,21)" fg:x="2275" fg:w="2"/><text x="21.6175%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::CommandBuffer::drain_barriers (4 samples, 0.04%)</title><rect x="21.3581%" y="693" width="0.0376%" height="15" fill="rgb(213,28,48)" fg:x="2274" fg:w="4"/><text x="21.6081%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::buffer::BufferTracker::set_from_usage_scope (2 samples, 0.02%)</title><rect x="21.4051%" y="677" width="0.0188%" height="15" fill="rgb(250,196,2)" fg:x="2279" fg:w="2"/><text x="21.6551%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::CommandBuffer::insert_barriers_from_scope (10 samples, 0.09%)</title><rect x="21.3957%" y="693" width="0.0939%" height="15" fill="rgb(227,5,17)" fg:x="2278" fg:w="10"/><text x="21.6457%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::texture::TextureTracker::set_from_usage_scope (7 samples, 0.07%)</title><rect x="21.4239%" y="677" width="0.0657%" height="15" fill="rgb(221,226,24)" fg:x="2281" fg:w="7"/><text x="21.6739%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::CommandEncoder::close (4 samples, 0.04%)</title><rect x="21.4896%" y="693" width="0.0376%" height="15" fill="rgb(211,5,48)" fg:x="2288" fg:w="4"/><text x="21.7396%" y="703.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::end_encoding (3 samples, 0.03%)</title><rect x="21.4990%" y="677" width="0.0282%" height="15" fill="rgb(219,150,6)" fg:x="2289" fg:w="3"/><text x="21.7490%" y="687.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginKernelCommands (2 samples, 0.02%)</title><rect x="21.6681%" y="565" width="0.0188%" height="15" fill="rgb(251,46,16)" fg:x="2307" fg:w="2"/><text x="21.9181%" y="575.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (12 samples, 0.11%)</title><rect x="21.6023%" y="597" width="0.1127%" height="15" fill="rgb(220,204,40)" fg:x="2300" fg:w="12"/><text x="21.8523%" y="607.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageSetupShmems (7 samples, 0.07%)</title><rect x="21.6493%" y="581" width="0.0657%" height="15" fill="rgb(211,85,2)" fg:x="2305" fg:w="7"/><text x="21.8993%" y="591.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (28 samples, 0.26%)</title><rect x="21.7338%" y="565" width="0.2630%" height="15" fill="rgb(229,17,7)" fg:x="2314" fg:w="28"/><text x="21.9838%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (28 samples, 0.26%)</title><rect x="21.7338%" y="549" width="0.2630%" height="15" fill="rgb(239,72,28)" fg:x="2314" fg:w="28"/><text x="21.9838%" y="559.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (2 samples, 0.02%)</title><rect x="21.9968%" y="533" width="0.0188%" height="15" fill="rgb(230,47,54)" fg:x="2342" fg:w="2"/><text x="22.2468%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (4 samples, 0.04%)</title><rect x="21.9968%" y="549" width="0.0376%" height="15" fill="rgb(214,50,8)" fg:x="2342" fg:w="4"/><text x="22.2468%" y="559.50"></text></g><g><title>libdispatch.dylib`dispatch_async (5 samples, 0.05%)</title><rect x="21.9968%" y="565" width="0.0470%" height="15" fill="rgb(216,198,43)" fg:x="2342" fg:w="5"/><text x="22.2468%" y="575.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (35 samples, 0.33%)</title><rect x="21.7244%" y="581" width="0.3287%" height="15" fill="rgb(234,20,35)" fg:x="2313" fg:w="35"/><text x="21.9744%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (38 samples, 0.36%)</title><rect x="21.7150%" y="597" width="0.3569%" height="15" fill="rgb(254,45,19)" fg:x="2312" fg:w="38"/><text x="21.9650%" y="607.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (53 samples, 0.50%)</title><rect x="21.5929%" y="613" width="0.4978%" height="15" fill="rgb(219,14,44)" fg:x="2299" fg:w="53"/><text x="21.8429%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer initWithQueue:retainedReferences:] (59 samples, 0.55%)</title><rect x="21.5742%" y="629" width="0.5541%" height="15" fill="rgb(217,220,26)" fg:x="2297" fg:w="59"/><text x="21.8242%" y="639.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (4 samples, 0.04%)</title><rect x="22.0907%" y="613" width="0.0376%" height="15" fill="rgb(213,158,28)" fg:x="2352" fg:w="4"/><text x="22.3407%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.04%)</title><rect x="22.0907%" y="597" width="0.0376%" height="15" fill="rgb(252,51,52)" fg:x="2352" fg:w="4"/><text x="22.3407%" y="607.50"></text></g><g><title>AGXMetal13_3`DYLD-STUB$$operator new(unsigned long) (2 samples, 0.02%)</title><rect x="22.1377%" y="629" width="0.0188%" height="15" fill="rgb(246,89,16)" fg:x="2357" fg:w="2"/><text x="22.3877%" y="639.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (3 samples, 0.03%)</title><rect x="22.1565%" y="629" width="0.0282%" height="15" fill="rgb(216,158,49)" fg:x="2359" fg:w="3"/><text x="22.4065%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (3 samples, 0.03%)</title><rect x="22.1565%" y="613" width="0.0282%" height="15" fill="rgb(236,107,19)" fg:x="2359" fg:w="3"/><text x="22.4065%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 0.03%)</title><rect x="22.1565%" y="597" width="0.0282%" height="15" fill="rgb(228,185,30)" fg:x="2359" fg:w="3"/><text x="22.4065%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.02%)</title><rect x="22.1659%" y="581" width="0.0188%" height="15" fill="rgb(246,134,8)" fg:x="2360" fg:w="2"/><text x="22.4159%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="22.1847%" y="629" width="0.0188%" height="15" fill="rgb(214,143,50)" fg:x="2362" fg:w="2"/><text x="22.4347%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandQueue commandBufferWithUnretainedReferences] (69 samples, 0.65%)</title><rect x="21.5648%" y="645" width="0.6481%" height="15" fill="rgb(228,75,8)" fg:x="2296" fg:w="69"/><text x="21.8148%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (2 samples, 0.02%)</title><rect x="22.2504%" y="645" width="0.0188%" height="15" fill="rgb(207,175,4)" fg:x="2369" fg:w="2"/><text x="22.5004%" y="655.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (2 samples, 0.02%)</title><rect x="22.3068%" y="597" width="0.0188%" height="15" fill="rgb(205,108,24)" fg:x="2375" fg:w="2"/><text x="22.5568%" y="607.50"></text></g><g><title>ostinato`wgpu_core::command::CommandEncoder::open_pass (85 samples, 0.80%)</title><rect x="21.5366%" y="693" width="0.7983%" height="15" fill="rgb(244,120,49)" fg:x="2293" fg:w="85"/><text x="21.7866%" y="703.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (85 samples, 0.80%)</title><rect x="21.5366%" y="677" width="0.7983%" height="15" fill="rgb(223,47,38)" fg:x="2293" fg:w="85"/><text x="21.7866%" y="687.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (82 samples, 0.77%)</title><rect x="21.5648%" y="661" width="0.7702%" height="15" fill="rgb(229,179,11)" fg:x="2296" fg:w="82"/><text x="21.8148%" y="671.50"></text></g><g><title>ostinato`metal::commandbuffer::CommandBufferRef::set_label (7 samples, 0.07%)</title><rect x="22.2692%" y="645" width="0.0657%" height="15" fill="rgb(231,122,1)" fg:x="2371" fg:w="7"/><text x="22.5192%" y="655.50"></text></g><g><title>ostinato`metal::nsstring_from_str (7 samples, 0.07%)</title><rect x="22.2692%" y="629" width="0.0657%" height="15" fill="rgb(245,119,9)" fg:x="2371" fg:w="7"/><text x="22.5192%" y="639.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (7 samples, 0.07%)</title><rect x="22.2692%" y="613" width="0.0657%" height="15" fill="rgb(241,163,25)" fg:x="2371" fg:w="7"/><text x="22.5192%" y="623.50"></text></g><g><title>ostinato`wgpu_core::command::bind::compute_nonoverlapping_ranges (2 samples, 0.02%)</title><rect x="22.3443%" y="693" width="0.0188%" height="15" fill="rgb(217,214,3)" fg:x="2379" fg:w="2"/><text x="22.5943%" y="703.50"></text></g><g><title>ostinato`wgpu_core::command::query::QueryResetMap::reset_queries (5 samples, 0.05%)</title><rect x="22.3631%" y="693" width="0.0470%" height="15" fill="rgb(240,86,28)" fg:x="2381" fg:w="5"/><text x="22.6131%" y="703.50"></text></g><g><title>ostinato`DYLD-STUB$$objc_msgSend (2 samples, 0.02%)</title><rect x="22.4664%" y="677" width="0.0188%" height="15" fill="rgb(215,47,9)" fg:x="2392" fg:w="2"/><text x="22.7164%" y="687.50"></text></g><g><title>ostinato`wgpu_core::track::texture::TextureUsageScope::merge_single (2 samples, 0.02%)</title><rect x="22.4852%" y="677" width="0.0188%" height="15" fill="rgb(252,25,45)" fg:x="2394" fg:w="2"/><text x="22.7352%" y="687.50"></text></g><g><title>Metal`-[_MTLCommandEncoder endEncoding] (2 samples, 0.02%)</title><rect x="22.5134%" y="629" width="0.0188%" height="15" fill="rgb(251,164,9)" fg:x="2397" fg:w="2"/><text x="22.7634%" y="639.50"></text></g><g><title>Metal`objc_msgSend$executeSynchronizationNotifications: (2 samples, 0.02%)</title><rect x="22.5322%" y="629" width="0.0188%" height="15" fill="rgb(233,194,0)" fg:x="2399" fg:w="2"/><text x="22.7822%" y="639.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder endEncoding] (8 samples, 0.08%)</title><rect x="22.5040%" y="645" width="0.0751%" height="15" fill="rgb(249,111,24)" fg:x="2396" fg:w="8"/><text x="22.7540%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="22.5510%" y="629" width="0.0282%" height="15" fill="rgb(250,223,3)" fg:x="2401" fg:w="3"/><text x="22.8010%" y="639.50"></text></g><g><title>Metal`-[_MTLCommandEncoder endEncoding] (3 samples, 0.03%)</title><rect x="22.5791%" y="645" width="0.0282%" height="15" fill="rgb(236,178,37)" fg:x="2404" fg:w="3"/><text x="22.8291%" y="655.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext endEncoding] (13 samples, 0.12%)</title><rect x="22.5040%" y="661" width="0.1221%" height="15" fill="rgb(241,158,50)" fg:x="2396" fg:w="13"/><text x="22.7540%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (2 samples, 0.02%)</title><rect x="22.6073%" y="645" width="0.0188%" height="15" fill="rgb(213,121,41)" fg:x="2407" fg:w="2"/><text x="22.8573%" y="655.50"></text></g><g><title>ostinato`wgpu_core::command::render::RenderPassInfo::finish (26 samples, 0.24%)</title><rect x="22.4101%" y="693" width="0.2442%" height="15" fill="rgb(240,92,3)" fg:x="2386" fg:w="26"/><text x="22.6601%" y="703.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::end_render_pass (16 samples, 0.15%)</title><rect x="22.5040%" y="677" width="0.1503%" height="15" fill="rgb(205,123,3)" fg:x="2396" fg:w="16"/><text x="22.7540%" y="687.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.02%)</title><rect x="22.9079%" y="677" width="0.0188%" height="15" fill="rgb(205,97,47)" fg:x="2439" fg:w="2"/><text x="23.1579%" y="687.50"></text></g><g><title>ostinato`&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="22.9548%" y="645" width="0.0188%" height="15" fill="rgb(247,152,14)" fg:x="2444" fg:w="2"/><text x="23.2048%" y="655.50"></text></g><g><title>ostinato`&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.04%)</title><rect x="22.9548%" y="661" width="0.0376%" height="15" fill="rgb(248,195,53)" fg:x="2444" fg:w="4"/><text x="23.2048%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.07%)</title><rect x="23.0487%" y="645" width="0.0657%" height="15" fill="rgb(226,201,16)" fg:x="2454" fg:w="7"/><text x="23.2987%" y="655.50"></text></g><g><title>ostinato`metal::commandbuffer::CommandBufferRef::new_render_command_encoder (2 samples, 0.02%)</title><rect x="23.1239%" y="645" width="0.0188%" height="15" fill="rgb(205,98,0)" fg:x="2462" fg:w="2"/><text x="23.3739%" y="655.50"></text></g><g><title>AGXMetal13_3`AGX::EndOfTileEmitter&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitEndOfTileArgumentsEarly(IOGPUResourceList*, AGX::G13::DataBufferAllocator&amp;, AGX::G13::EndOfTileProgramVariant const*, LdShdrTransformFragment (2 samples, 0.02%)</title><rect x="23.4996%" y="597" width="0.0188%" height="15" fill="rgb(214,191,48)" fg:x="2502" fg:w="2"/><text x="23.7496%" y="607.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture hazardTrackingMode] (2 samples, 0.02%)</title><rect x="23.6499%" y="565" width="0.0188%" height="15" fill="rgb(237,112,39)" fg:x="2518" fg:w="2"/><text x="23.8999%" y="575.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource resourceOptions] (3 samples, 0.03%)</title><rect x="23.6499%" y="581" width="0.0282%" height="15" fill="rgb(247,203,27)" fg:x="2518" fg:w="3"/><text x="23.8999%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferDriverConfig&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::FramebufferDriverConfig (16 samples, 0.15%)</title><rect x="23.5371%" y="597" width="0.1503%" height="15" fill="rgb(235,124,28)" fg:x="2506" fg:w="16"/><text x="23.7871%" y="607.50"></text></g><g><title>libc++abi.dylib`operator new(unsigned long) (3 samples, 0.03%)</title><rect x="23.7438%" y="549" width="0.0282%" height="15" fill="rgb(208,207,46)" fg:x="2528" fg:w="3"/><text x="23.9938%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.03%)</title><rect x="23.7438%" y="533" width="0.0282%" height="15" fill="rgb(234,176,4)" fg:x="2528" fg:w="3"/><text x="23.9938%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="23.7532%" y="517" width="0.0188%" height="15" fill="rgb(230,133,28)" fg:x="2529" fg:w="2"/><text x="24.0032%" y="527.50"></text></g><g><title>AGXMetal13_3`AGX::PassiveResourceGroupUsage&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::bindPassiveResource (6 samples, 0.06%)</title><rect x="23.7250%" y="565" width="0.0564%" height="15" fill="rgb(211,137,40)" fg:x="2526" fg:w="6"/><text x="23.9750%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::sumLevelSizesTiled (3 samples, 0.03%)</title><rect x="23.7907%" y="565" width="0.0282%" height="15" fill="rgb(254,35,13)" fg:x="2533" fg:w="3"/><text x="24.0407%" y="575.50"></text></g><g><title>AGXMetal13_3`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::getPlaneSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::View)0&gt; (5 samples, 0.05%)</title><rect x="23.8189%" y="565" width="0.0470%" height="15" fill="rgb(225,49,51)" fg:x="2536" fg:w="5"/><text x="24.0689%" y="575.50"></text></g><g><title>AGXMetal13_3`unsigned long AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::getPlaneSize&lt;(AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::View)0&gt; (3 samples, 0.03%)</title><rect x="23.8377%" y="549" width="0.0282%" height="15" fill="rgb(251,10,15)" fg:x="2538" fg:w="3"/><text x="24.0877%" y="559.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferGen3&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::updateResourceGroupUsage (20 samples, 0.19%)</title><rect x="23.6874%" y="597" width="0.1878%" height="15" fill="rgb(228,207,15)" fg:x="2522" fg:w="20"/><text x="23.9374%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::ResourceGroupUsage&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::setAndBindRenderTarget (19 samples, 0.18%)</title><rect x="23.6968%" y="581" width="0.1785%" height="15" fill="rgb(241,99,19)" fg:x="2523" fg:w="19"/><text x="23.9468%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::Program&lt;AGX::G13::EndOfTileProgramVariant, AGX::EndOfTileProgramKey, AGX::G13::IndirectArgumentLayout, AGXG13GFamilyIndirectArgumentBufferLayout&gt;::getOrCreateVariantEntry (2 samples, 0.02%)</title><rect x="24.2791%" y="533" width="0.0188%" height="15" fill="rgb(207,104,49)" fg:x="2585" fg:w="2"/><text x="24.5291%" y="543.50"></text></g><g><title>AGXMetal13_3`AGX::G13::EndOfTileProgramVariant* AGX::Device&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::tryFindOrCreateDriverProgramVariant&lt;AGX::G13::EndOfTileProgramVariant, AGX::EndOfTileProgramKey, AGX::G13::EndOfTileProgram&gt;(AGX::G13::EndOfTileProgram*, AGX::EndOfTileProgramKey const&amp;, NSArray&lt;id (3 samples, 0.03%)</title><rect x="24.2791%" y="549" width="0.0282%" height="15" fill="rgb(234,99,18)" fg:x="2585" fg:w="3"/><text x="24.5291%" y="559.50"></text></g><g><title>AGXMetal13_3`AGX::Device&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::populateEndOfTileProgramVariants(AGX::EndOfTileProgramKey const&amp;, NSArray&lt;id (10 samples, 0.09%)</title><rect x="24.2228%" y="565" width="0.0939%" height="15" fill="rgb(213,191,49)" fg:x="2579" fg:w="10"/><text x="24.4728%" y="575.50"></text></g><g><title>IOSurface`IOSurfaceClientGetBaseAddressOfPlane (2 samples, 0.02%)</title><rect x="24.3825%" y="549" width="0.0188%" height="15" fill="rgb(210,226,19)" fg:x="2596" fg:w="2"/><text x="24.6325%" y="559.50"></text></g><g><title>AGXMetal13_3`AGX::Framebuffer&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::configurePBE (11 samples, 0.10%)</title><rect x="24.3167%" y="565" width="0.1033%" height="15" fill="rgb(229,97,18)" fg:x="2589" fg:w="11"/><text x="24.5667%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::G13::BackgroundObjectProgramVariant* AGX::Device&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::tryFindOrCreateDriverProgramVariant&lt;AGX::G13::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::G13::BackgroundObjectProgram&gt;(AGX::G13::BackgroundObjectProgram*, AGX::BackgroundObjectProgramKey const&amp;, NSArray&lt;id (8 samples, 0.08%)</title><rect x="24.4294%" y="565" width="0.0751%" height="15" fill="rgb(211,167,15)" fg:x="2601" fg:w="8"/><text x="24.6794%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::Program&lt;AGX::G13::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::G13::IndirectArgumentLayout, AGXG13GFamilyIndirectArgumentBufferLayout&gt;::getOrCreateVariantEntry (8 samples, 0.08%)</title><rect x="24.4294%" y="549" width="0.0751%" height="15" fill="rgb(210,169,34)" fg:x="2601" fg:w="8"/><text x="24.6794%" y="559.50"></text></g><g><title>AGXMetal13_3`VectorMap&lt;AGX::BackgroundObjectProgramKey, AGX::ProgramVariantEntry&lt;AGX::G13::BackgroundObjectProgramVariant&gt;, 4u&gt;::operator[] (8 samples, 0.08%)</title><rect x="24.4294%" y="533" width="0.0751%" height="15" fill="rgb(241,121,31)" fg:x="2601" fg:w="8"/><text x="24.6794%" y="543.50"></text></g><g><title>AGXMetal13_3`AGX::PBEStateEncoderGen7&lt;kAGXRevG13&gt;::StateFields::StateFields(AGX::PBEStateEncoderGen7 (2 samples, 0.02%)</title><rect x="24.5046%" y="565" width="0.0188%" height="15" fill="rgb(232,40,11)" fg:x="2609" fg:w="2"/><text x="24.7546%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::Program&lt;AGX::G13::BackgroundObjectProgramVariant, AGX::BackgroundObjectProgramKey, AGX::G13::IndirectArgumentLayout, AGXG13GFamilyIndirectArgumentBufferLayout&gt;::getOrCreateVariantEntry (2 samples, 0.02%)</title><rect x="24.5233%" y="565" width="0.0188%" height="15" fill="rgb(205,86,26)" fg:x="2611" fg:w="2"/><text x="24.7733%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::Texture&lt;(AGXTextureMemoryLayout)3, AGX::G13::Encoders, AGX::G13::Classes&gt;::getGPUVirtualAddress (2 samples, 0.02%)</title><rect x="24.5421%" y="565" width="0.0188%" height="15" fill="rgb(231,126,28)" fg:x="2613" fg:w="2"/><text x="24.7921%" y="575.50"></text></g><g><title>AGXMetal13_3`areDriverUberShadersDisabled() (.4966) (3 samples, 0.03%)</title><rect x="24.5609%" y="565" width="0.0282%" height="15" fill="rgb(219,221,18)" fg:x="2615" fg:w="3"/><text x="24.8109%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::Framebuffer&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::Framebuffer (75 samples, 0.70%)</title><rect x="23.8941%" y="581" width="0.7044%" height="15" fill="rgb(211,40,0)" fg:x="2544" fg:w="75"/><text x="24.1441%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferGen3_2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::FramebufferGen3_2 (81 samples, 0.76%)</title><rect x="23.8753%" y="597" width="0.7608%" height="15" fill="rgb(239,85,43)" fg:x="2542" fg:w="81"/><text x="24.1253%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="24.6173%" y="581" width="0.0188%" height="15" fill="rgb(231,55,21)" fg:x="2621" fg:w="2"/><text x="24.8673%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferGen3_2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::addAPIResources (2 samples, 0.02%)</title><rect x="24.6360%" y="597" width="0.0188%" height="15" fill="rgb(225,184,43)" fg:x="2623" fg:w="2"/><text x="24.8860%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferGen3_2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::allocateDatabufferResources (3 samples, 0.03%)</title><rect x="24.6548%" y="597" width="0.0282%" height="15" fill="rgb(251,158,41)" fg:x="2625" fg:w="3"/><text x="24.9048%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::G13::TextureFormatTable::chooseTextureFormatOBJC (3 samples, 0.03%)</title><rect x="24.6830%" y="597" width="0.0282%" height="15" fill="rgb(234,159,37)" fg:x="2628" fg:w="3"/><text x="24.9330%" y="607.50"></text></g><g><title>IOGPU`IOGPUMetalResourcePoolCreatePooledResource (10 samples, 0.09%)</title><rect x="25.0305%" y="533" width="0.0939%" height="15" fill="rgb(216,204,22)" fg:x="2665" fg:w="10"/><text x="25.2805%" y="543.50"></text></g><g><title>Metal`MTLValidationEnabled (2 samples, 0.02%)</title><rect x="25.1244%" y="533" width="0.0188%" height="15" fill="rgb(214,17,3)" fg:x="2675" fg:w="2"/><text x="25.3744%" y="543.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (9 samples, 0.08%)</title><rect x="25.1432%" y="533" width="0.0845%" height="15" fill="rgb(212,111,17)" fg:x="2677" fg:w="9"/><text x="25.3932%" y="543.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageAllocResourceAtIndex (25 samples, 0.23%)</title><rect x="25.0023%" y="549" width="0.2348%" height="15" fill="rgb(221,157,24)" fg:x="2662" fg:w="25"/><text x="25.2523%" y="559.50"></text></g><g><title>AGXMetal13_3`AGX::DataBufferAllocator&lt;34ul&gt;::initializeDataBuffer (37 samples, 0.35%)</title><rect x="24.8990%" y="565" width="0.3475%" height="15" fill="rgb(252,16,13)" fg:x="2651" fg:w="37"/><text x="25.1490%" y="575.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginSegment (12 samples, 0.11%)</title><rect x="25.2559%" y="565" width="0.1127%" height="15" fill="rgb(221,62,2)" fg:x="2689" fg:w="12"/><text x="25.5059%" y="575.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (11 samples, 0.10%)</title><rect x="25.2653%" y="549" width="0.1033%" height="15" fill="rgb(247,87,22)" fg:x="2690" fg:w="11"/><text x="25.5153%" y="559.50"></text></g><g><title>AGXMetal13_3`AGX::ContextCommon&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::newCommand (60 samples, 0.56%)</title><rect x="24.8427%" y="581" width="0.5635%" height="15" fill="rgb(215,73,9)" fg:x="2645" fg:w="60"/><text x="25.0927%" y="591.50"></text></g><g><title>IOGPU`ioGPUResourceListAddHashValue (4 samples, 0.04%)</title><rect x="25.3686%" y="565" width="0.0376%" height="15" fill="rgb(207,175,33)" fg:x="2701" fg:w="4"/><text x="25.6186%" y="575.50"></text></g><g><title>AGXMetal13_3`AGX::DataBufferAllocator&lt;34ul&gt;::initializeDataBuffer (3 samples, 0.03%)</title><rect x="25.4062%" y="581" width="0.0282%" height="15" fill="rgb(243,129,54)" fg:x="2705" fg:w="3"/><text x="25.6562%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::EndOfTileEmitter&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitEndOfTileArgumentsEarly(IOGPUResourceList*, AGX::G13::DataBufferAllocator&amp;, AGX::G13::EndOfTileProgramVariant const*, LdShdrTransformFragment (3 samples, 0.03%)</title><rect x="25.4344%" y="581" width="0.0282%" height="15" fill="rgb(227,119,45)" fg:x="2708" fg:w="3"/><text x="25.6844%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferGen3_2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::addGPUResources(IOGPUResourceList*, AGX::G13::ResourceGroupUsage&amp;, AGX::Framebuffer (3 samples, 0.03%)</title><rect x="25.4626%" y="581" width="0.0282%" height="15" fill="rgb(205,109,36)" fg:x="2711" fg:w="3"/><text x="25.7126%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitBackgroundObjectArguments(IOGPUResourceList*, AGX::G13::DataBufferAllocator&amp;, AGX::G13::BackgroundObjectProgramVariant const*, AGX::BackgroundObjectArgumentTable (7 samples, 0.07%)</title><rect x="25.4907%" y="581" width="0.0657%" height="15" fill="rgb(205,6,39)" fg:x="2714" fg:w="7"/><text x="25.7407%" y="591.50"></text></g><g><title>AGXMetal13_3`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformFragment&lt;AGX::G13::Encoders&gt;&gt;(unsigned long long*, unsigned long long**, unsigned int, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*, unsigned long long const*, LdShdrTransformFragment (2 samples, 0.02%)</title><rect x="25.5377%" y="565" width="0.0188%" height="15" fill="rgb(221,32,16)" fg:x="2719" fg:w="2"/><text x="25.7877%" y="575.50"></text></g><g><title>AGXMetal13_3`DYLD-STUB$$IOGPUResourceListAddResource (2 samples, 0.02%)</title><rect x="25.5565%" y="581" width="0.0188%" height="15" fill="rgb(228,144,50)" fg:x="2721" fg:w="2"/><text x="25.8065%" y="591.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (12 samples, 0.11%)</title><rect x="25.5847%" y="581" width="0.1127%" height="15" fill="rgb(229,201,53)" fg:x="2724" fg:w="12"/><text x="25.8347%" y="591.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::beginRenderPass (106 samples, 1.00%)</title><rect x="24.7206%" y="597" width="0.9956%" height="15" fill="rgb(249,153,27)" fg:x="2632" fg:w="106"/><text x="24.9706%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::SpillInfoGen2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::checkSpillParams(AGX::SpillInfoGen2 (2 samples, 0.02%)</title><rect x="25.7349%" y="597" width="0.0188%" height="15" fill="rgb(227,106,25)" fg:x="2740" fg:w="2"/><text x="25.9849%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::SpillInfoGen2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::init (2 samples, 0.02%)</title><rect x="25.7537%" y="597" width="0.0188%" height="15" fill="rgb(230,65,29)" fg:x="2742" fg:w="2"/><text x="26.0037%" y="607.50"></text></g><g><title>Metal`-[_MTLCommandBuffer errorOptions] (2 samples, 0.02%)</title><rect x="25.8101%" y="581" width="0.0188%" height="15" fill="rgb(221,57,46)" fg:x="2748" fg:w="2"/><text x="26.0601%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandEncoder initWithCommandBuffer:] (2 samples, 0.02%)</title><rect x="25.8289%" y="581" width="0.0188%" height="15" fill="rgb(229,161,17)" fg:x="2750" fg:w="2"/><text x="26.0789%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="25.8477%" y="581" width="0.0188%" height="15" fill="rgb(222,213,11)" fg:x="2752" fg:w="2"/><text x="26.0977%" y="591.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandEncoder initWithCommandBuffer:] (10 samples, 0.09%)</title><rect x="25.7913%" y="597" width="0.0939%" height="15" fill="rgb(235,35,13)" fg:x="2746" fg:w="10"/><text x="26.0413%" y="607.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (2 samples, 0.02%)</title><rect x="25.9040%" y="597" width="0.0188%" height="15" fill="rgb(233,158,34)" fg:x="2758" fg:w="2"/><text x="26.1540%" y="607.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorInternal _descriptorPrivate] (2 samples, 0.02%)</title><rect x="25.9228%" y="597" width="0.0188%" height="15" fill="rgb(215,151,48)" fg:x="2760" fg:w="2"/><text x="26.1728%" y="607.50"></text></g><g><title>Metal`-[_MTLDevice limits] (2 samples, 0.02%)</title><rect x="25.9698%" y="581" width="0.0188%" height="15" fill="rgb(229,84,14)" fg:x="2765" fg:w="2"/><text x="26.2198%" y="591.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal validate:width:height:] (5 samples, 0.05%)</title><rect x="25.9510%" y="597" width="0.0470%" height="15" fill="rgb(229,68,14)" fg:x="2763" fg:w="5"/><text x="26.2010%" y="607.50"></text></g><g><title>Metal`-[_MTLDevice minTilePixels] (2 samples, 0.02%)</title><rect x="25.9979%" y="597" width="0.0188%" height="15" fill="rgb(243,106,26)" fg:x="2768" fg:w="2"/><text x="26.2479%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (11 samples, 0.10%)</title><rect x="26.0449%" y="597" width="0.1033%" height="15" fill="rgb(206,45,38)" fg:x="2773" fg:w="11"/><text x="26.2949%" y="607.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="26.1482%" y="597" width="0.0188%" height="15" fill="rgb(226,6,15)" fg:x="2784" fg:w="2"/><text x="26.3982%" y="607.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext initWithCommandBuffer:descriptor:subEncoderIndex:framebuffer:] (316 samples, 2.97%)</title><rect x="23.2554%" y="613" width="2.9680%" height="15" fill="rgb(232,22,54)" fg:x="2476" fg:w="316"/><text x="23.5054%" y="623.50">AGX..</text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.06%)</title><rect x="26.1670%" y="597" width="0.0564%" height="15" fill="rgb(229,222,32)" fg:x="2786" fg:w="6"/><text x="26.4170%" y="607.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferCompilerConfigGen3&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::buildDrawBufferState (4 samples, 0.04%)</title><rect x="26.2327%" y="613" width="0.0376%" height="15" fill="rgb(228,62,29)" fg:x="2793" fg:w="4"/><text x="26.4827%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::FramebufferDriverConfig&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::FramebufferDriverConfig (2 samples, 0.02%)</title><rect x="26.2703%" y="613" width="0.0188%" height="15" fill="rgb(251,103,34)" fg:x="2797" fg:w="2"/><text x="26.5203%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::SpillInfoGen2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::SpillInfoGen2(AGX::G13::Device*, AGX::DeviceInternalBuffer (2 samples, 0.02%)</title><rect x="26.3173%" y="613" width="0.0188%" height="15" fill="rgb(233,12,30)" fg:x="2802" fg:w="2"/><text x="26.5673%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::SpillInfoGen2&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::init (2 samples, 0.02%)</title><rect x="26.3361%" y="613" width="0.0188%" height="15" fill="rgb(238,52,0)" fg:x="2804" fg:w="2"/><text x="26.5861%" y="623.50"></text></g><g><title>AGXMetal13_3`objc_msgSend$rasterizationRateMap (2 samples, 0.02%)</title><rect x="26.3736%" y="613" width="0.0188%" height="15" fill="rgb(223,98,5)" fg:x="2808" fg:w="2"/><text x="26.6236%" y="623.50"></text></g><g><title>AGXMetal13_3`objc_msgSend$threadgroupMemoryLength (3 samples, 0.03%)</title><rect x="26.4018%" y="613" width="0.0282%" height="15" fill="rgb(228,75,37)" fg:x="2811" fg:w="3"/><text x="26.6518%" y="623.50"></text></g><g><title>AGXMetal13_3`std::__1::__function::__func&lt;AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::&apos;lambda&apos;(void*), std::__1::allocator&lt;AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::&apos;lambda&apos;(void*)&gt;, void (void*)&gt;::__clone(std::__1::__function::__base&lt;void (4 samples, 0.04%)</title><rect x="26.4300%" y="613" width="0.0376%" height="15" fill="rgb(205,115,49)" fg:x="2814" fg:w="4"/><text x="26.6800%" y="623.50"></text></g><g><title>AGXMetal13_3`std::__1::__function::__func&lt;AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::&apos;lambda&apos;(void*), std::__1::allocator&lt;AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::&apos;lambda&apos;(void*)&gt;, void (void*)&gt;::destroy (3 samples, 0.03%)</title><rect x="26.4675%" y="613" width="0.0282%" height="15" fill="rgb(250,154,43)" fg:x="2818" fg:w="3"/><text x="26.7175%" y="623.50"></text></g><g><title>Metal`-[_MTLCommandBuffer ownedByParallelEncoder] (2 samples, 0.02%)</title><rect x="26.5051%" y="613" width="0.0188%" height="15" fill="rgb(226,43,29)" fg:x="2822" fg:w="2"/><text x="26.7551%" y="623.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (5 samples, 0.05%)</title><rect x="26.5239%" y="613" width="0.0470%" height="15" fill="rgb(249,228,39)" fg:x="2824" fg:w="5"/><text x="26.7739%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (5 samples, 0.05%)</title><rect x="26.5239%" y="597" width="0.0470%" height="15" fill="rgb(216,79,43)" fg:x="2824" fg:w="5"/><text x="26.7739%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.09%)</title><rect x="26.5709%" y="613" width="0.0939%" height="15" fill="rgb(228,95,12)" fg:x="2829" fg:w="10"/><text x="26.8209%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.04%)</title><rect x="26.6648%" y="613" width="0.0376%" height="15" fill="rgb(249,221,15)" fg:x="2839" fg:w="4"/><text x="26.9148%" y="623.50"></text></g><g><title>libsystem_platform.dylib`__bzero (10 samples, 0.09%)</title><rect x="26.7024%" y="613" width="0.0939%" height="15" fill="rgb(233,34,13)" fg:x="2843" fg:w="10"/><text x="26.9524%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer renderCommandEncoderWithDescriptor:] (387 samples, 3.63%)</title><rect x="23.2366%" y="629" width="3.6348%" height="15" fill="rgb(214,103,39)" fg:x="2474" fg:w="387"/><text x="23.4866%" y="639.50">AGXM..</text></g><g><title>libsystem_platform.dylib`_platform_memset (8 samples, 0.08%)</title><rect x="26.7963%" y="613" width="0.0751%" height="15" fill="rgb(251,126,39)" fg:x="2853" fg:w="8"/><text x="27.0463%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (2 samples, 0.02%)</title><rect x="26.8902%" y="597" width="0.0188%" height="15" fill="rgb(214,216,36)" fg:x="2863" fg:w="2"/><text x="27.1402%" y="607.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal init] (4 samples, 0.04%)</title><rect x="26.8808%" y="613" width="0.0376%" height="15" fill="rgb(220,221,8)" fg:x="2862" fg:w="4"/><text x="27.1308%" y="623.50"></text></g><g><title>Metal`+[MTLRenderPassDescriptor renderPassDescriptor] (12 samples, 0.11%)</title><rect x="26.8808%" y="629" width="0.1127%" height="15" fill="rgb(240,216,3)" fg:x="2862" fg:w="12"/><text x="27.1308%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (6 samples, 0.06%)</title><rect x="26.9372%" y="613" width="0.0564%" height="15" fill="rgb(232,218,17)" fg:x="2868" fg:w="6"/><text x="27.1872%" y="623.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal objectAtIndexedSubscript:] (3 samples, 0.03%)</title><rect x="26.9935%" y="629" width="0.0282%" height="15" fill="rgb(229,163,45)" fg:x="2874" fg:w="3"/><text x="27.2435%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (2 samples, 0.02%)</title><rect x="27.0029%" y="613" width="0.0188%" height="15" fill="rgb(231,110,42)" fg:x="2875" fg:w="2"/><text x="27.2529%" y="623.50"></text></g><g><title>Metal`MTLFailureTypeGetEnabled (2 samples, 0.02%)</title><rect x="27.0217%" y="613" width="0.0188%" height="15" fill="rgb(208,170,48)" fg:x="2877" fg:w="2"/><text x="27.2717%" y="623.50"></text></g><g><title>Metal`MTLFailureTypeGetErrorModeType (2 samples, 0.02%)</title><rect x="27.0217%" y="597" width="0.0188%" height="15" fill="rgb(239,116,25)" fg:x="2877" fg:w="2"/><text x="27.2717%" y="607.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorInternal setTexture:] (3 samples, 0.03%)</title><rect x="27.0217%" y="629" width="0.0282%" height="15" fill="rgb(219,200,50)" fg:x="2877" fg:w="3"/><text x="27.2717%" y="639.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal depthAttachment] (2 samples, 0.02%)</title><rect x="27.0499%" y="629" width="0.0188%" height="15" fill="rgb(245,200,0)" fg:x="2880" fg:w="2"/><text x="27.2999%" y="639.50"></text></g><g><title>Metal`-[MTLRenderPassColorAttachmentDescriptorArrayInternal dealloc] (4 samples, 0.04%)</title><rect x="27.1062%" y="581" width="0.0376%" height="15" fill="rgb(245,119,33)" fg:x="2886" fg:w="4"/><text x="27.3562%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.03%)</title><rect x="27.1626%" y="581" width="0.0282%" height="15" fill="rgb(231,125,12)" fg:x="2892" fg:w="3"/><text x="27.4126%" y="591.50"></text></g><g><title>Metal`-[MTLRenderPassDescriptorInternal dealloc] (11 samples, 0.10%)</title><rect x="27.1062%" y="597" width="0.1033%" height="15" fill="rgb(216,96,41)" fg:x="2886" fg:w="11"/><text x="27.3562%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="27.1908%" y="581" width="0.0188%" height="15" fill="rgb(248,43,45)" fg:x="2895" fg:w="2"/><text x="27.4408%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="27.2095%" y="597" width="0.0188%" height="15" fill="rgb(217,222,7)" fg:x="2897" fg:w="2"/><text x="27.4595%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (15 samples, 0.14%)</title><rect x="27.1062%" y="629" width="0.1409%" height="15" fill="rgb(233,28,6)" fg:x="2886" fg:w="15"/><text x="27.3562%" y="639.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (15 samples, 0.14%)</title><rect x="27.1062%" y="613" width="0.1409%" height="15" fill="rgb(231,218,15)" fg:x="2886" fg:w="15"/><text x="27.3562%" y="623.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (7 samples, 0.07%)</title><rect x="27.2847%" y="597" width="0.0657%" height="15" fill="rgb(226,171,48)" fg:x="2905" fg:w="7"/><text x="27.5347%" y="607.50"></text></g><g><title>ostinato`metal::encoder::CommandEncoderRef::set_label (10 samples, 0.09%)</title><rect x="27.2659%" y="629" width="0.0939%" height="15" fill="rgb(235,201,9)" fg:x="2903" fg:w="10"/><text x="27.5159%" y="639.50"></text></g><g><title>ostinato`metal::nsstring_from_str (9 samples, 0.08%)</title><rect x="27.2753%" y="613" width="0.0845%" height="15" fill="rgb(217,80,15)" fg:x="2904" fg:w="9"/><text x="27.5253%" y="623.50"></text></g><g><title>ostinato`metal::renderpass::RenderPassAttachmentDescriptorRef::set_texture (2 samples, 0.02%)</title><rect x="27.3598%" y="629" width="0.0188%" height="15" fill="rgb(219,152,8)" fg:x="2913" fg:w="2"/><text x="27.6098%" y="639.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (451 samples, 4.24%)</title><rect x="23.1521%" y="645" width="4.2359%" height="15" fill="rgb(243,107,38)" fg:x="2465" fg:w="451"/><text x="23.4021%" y="655.50">ostin..</text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_render_pass (475 samples, 4.46%)</title><rect x="23.0018%" y="661" width="4.4614%" height="15" fill="rgb(231,17,5)" fg:x="2449" fg:w="475"/><text x="23.2518%" y="671.50">ostin..</text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::metal::CommandEncoder&gt;::begin_pass (8 samples, 0.08%)</title><rect x="27.3880%" y="645" width="0.0751%" height="15" fill="rgb(209,25,54)" fg:x="2916" fg:w="8"/><text x="27.6380%" y="655.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::begin_render_pass (483 samples, 4.54%)</title><rect x="22.9360%" y="677" width="4.5365%" height="15" fill="rgb(219,0,2)" fg:x="2442" fg:w="483"/><text x="23.1860%" y="687.50">ostin..</text></g><g><title>ostinato`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (4 samples, 0.04%)</title><rect x="27.5007%" y="677" width="0.0376%" height="15" fill="rgb(246,9,5)" fg:x="2928" fg:w="4"/><text x="27.7507%" y="687.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="27.5195%" y="661" width="0.0188%" height="15" fill="rgb(226,159,4)" fg:x="2930" fg:w="2"/><text x="27.7695%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="27.5195%" y="645" width="0.0188%" height="15" fill="rgb(219,175,34)" fg:x="2930" fg:w="2"/><text x="27.7695%" y="655.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="27.5852%" y="645" width="0.0282%" height="15" fill="rgb(236,10,46)" fg:x="2937" fg:w="3"/><text x="27.8352%" y="655.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="27.5852%" y="629" width="0.0282%" height="15" fill="rgb(240,211,16)" fg:x="2937" fg:w="3"/><text x="27.8352%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.03%)</title><rect x="27.5852%" y="613" width="0.0282%" height="15" fill="rgb(205,3,43)" fg:x="2937" fg:w="3"/><text x="27.8352%" y="623.50"></text></g><g><title>ostinato`wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_init_action (6 samples, 0.06%)</title><rect x="27.5665%" y="661" width="0.0564%" height="15" fill="rgb(245,7,22)" fg:x="2935" fg:w="6"/><text x="27.8165%" y="671.50"></text></g><g><title>ostinato`wgpu_core::command::memory_init::CommandBufferTextureMemoryActions::register_implicit_init (10 samples, 0.09%)</title><rect x="27.5383%" y="677" width="0.0939%" height="15" fill="rgb(239,132,32)" fg:x="2932" fg:w="10"/><text x="27.7883%" y="687.50"></text></g><g><title>ostinato`wgpu_core::track::UsageScope::new_pooled (2 samples, 0.02%)</title><rect x="27.6322%" y="677" width="0.0188%" height="15" fill="rgb(228,202,34)" fg:x="2942" fg:w="2"/><text x="27.8822%" y="687.50"></text></g><g><title>ostinato`alloc::vec::Vec&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="27.6322%" y="661" width="0.0188%" height="15" fill="rgb(254,200,22)" fg:x="2942" fg:w="2"/><text x="27.8822%" y="671.50"></text></g><g><title>ostinato`wgpu_core::command::render::RenderPassInfo::start (533 samples, 5.01%)</title><rect x="22.6543%" y="693" width="5.0061%" height="15" fill="rgb(219,10,39)" fg:x="2412" fg:w="533"/><text x="22.9043%" y="703.50">ostina..</text></g><g><title>ostinato`wgpu_core::command::render::VertexState::update_limits (2 samples, 0.02%)</title><rect x="27.6604%" y="693" width="0.0188%" height="15" fill="rgb(226,210,39)" fg:x="2945" fg:w="2"/><text x="27.9104%" y="703.50"></text></g><g><title>AGXMetal13_3`AGX::ClipRectContextGen3&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::updateClipRegions (6 samples, 0.06%)</title><rect x="28.1488%" y="645" width="0.0564%" height="15" fill="rgb(208,219,16)" fg:x="2997" fg:w="6"/><text x="28.3988%" y="655.50"></text></g><g><title>AGXMetal13_3`AGX::Mempool&lt;16u, 0u, true, AGX::ImageStateEncoderGen6&lt;kAGXRevG13&gt;::ImageStateFields, AGX::ImageStateEncoderGen6&lt;kAGXRevG13&gt;::ImageStateFields, unsigned int&gt;::addToResourceList(std::__1::array&lt;AGX::Mempool&lt;16u, 0u, true, AGX::ImageStateEncoderGen6&lt;kAGXRevG13&gt;::ImageStateFields, AGX::ImageStateEncoderGen6 (6 samples, 0.06%)</title><rect x="28.2051%" y="645" width="0.0564%" height="15" fill="rgb(216,158,51)" fg:x="3003" fg:w="6"/><text x="28.4551%" y="655.50"></text></g><g><title>Metal`MTLResourceListAddResource (3 samples, 0.03%)</title><rect x="28.2333%" y="629" width="0.0282%" height="15" fill="rgb(233,14,44)" fg:x="3006" fg:w="3"/><text x="28.4833%" y="639.50"></text></g><g><title>Metal`MTLResourceListChunksAddEntry(MTLResourceListPrivate&amp;, unsigned long long) (2 samples, 0.02%)</title><rect x="28.2427%" y="613" width="0.0188%" height="15" fill="rgb(237,97,39)" fg:x="3007" fg:w="2"/><text x="28.4927%" y="623.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::bindFragmentTextureResources (3 samples, 0.03%)</title><rect x="28.2615%" y="645" width="0.0282%" height="15" fill="rgb(218,198,43)" fg:x="3009" fg:w="3"/><text x="28.5115%" y="655.50"></text></g><g><title>AGXMetal13_3`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::emitVertexProgramVariantAndArguments(AGX::G13::DataBufferAllocator&amp;, AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::VertexDriverArgumentTable&lt;AGX::G13::Classes&gt;&amp;, unsigned long long, bool, unsigned int, unsigned char, unsigned long long*, AGX::FlagsConfiguration (7 samples, 0.07%)</title><rect x="28.2897%" y="645" width="0.0657%" height="15" fill="rgb(231,104,20)" fg:x="3012" fg:w="7"/><text x="28.5397%" y="655.50"></text></g><g><title>AGXMetal13_3`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformNone&gt; (4 samples, 0.04%)</title><rect x="28.3178%" y="629" width="0.0376%" height="15" fill="rgb(254,36,13)" fg:x="3015" fg:w="4"/><text x="28.5678%" y="639.50"></text></g><g><title>AGXMetal13_3`void AGX::ESLStateLoadEncoderGen1&lt;AGX::G13::Classes, AGX::G13::Encoders&gt;::emitUscStateLoad&lt;LdShdrTransformFragment&lt;AGX::G13::Encoders&gt;&gt;(unsigned long long*, unsigned long long**, unsigned int, unsigned long long, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int const*, unsigned long long const*, LdShdrTransformFragment (6 samples, 0.06%)</title><rect x="28.3648%" y="645" width="0.0564%" height="15" fill="rgb(248,14,50)" fg:x="3020" fg:w="6"/><text x="28.6148%" y="655.50"></text></g><g><title>Metal`MTLResourceListAddResource (3 samples, 0.03%)</title><rect x="28.4493%" y="645" width="0.0282%" height="15" fill="rgb(217,107,29)" fg:x="3029" fg:w="3"/><text x="28.6993%" y="655.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeAndEmitRenderState(AGX::G13::VertexProgramVariant const*, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;&amp;, AGX::RenderDirtyBits (84 samples, 0.79%)</title><rect x="27.7167%" y="661" width="0.7890%" height="15" fill="rgb(251,169,33)" fg:x="2951" fg:w="84"/><text x="27.9667%" y="671.50"></text></g><g><title>AGXMetal13_3`AGX::RenderUSCStateLoader&lt;AGX::G13::Encoders, AGX::G13::Classes&gt;::extractProgramVariantArgumentDirtyBits(AGX::G13::VertexProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::G13::FragmentProgramVariant const*, AGX::ArgumentTable&lt;AGX::G13::Encoders, AGX::G13::Classes&gt; const&amp;, AGX::RenderDirtyBits (2 samples, 0.02%)</title><rect x="28.5057%" y="661" width="0.0188%" height="15" fill="rgb(217,108,32)" fg:x="3035" fg:w="2"/><text x="28.7557%" y="671.50"></text></g><g><title>AGXMetal13_3`AGX::ResourceGroupUsage&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::setAndBindResource (2 samples, 0.02%)</title><rect x="28.5339%" y="661" width="0.0188%" height="15" fill="rgb(219,66,42)" fg:x="3038" fg:w="2"/><text x="28.7839%" y="671.50"></text></g><g><title>IOGPU`IOGPUResourceListAddResource (3 samples, 0.03%)</title><rect x="28.5620%" y="661" width="0.0282%" height="15" fill="rgb(206,180,7)" fg:x="3041" fg:w="3"/><text x="28.8120%" y="671.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext drawIndexedPrimitives:indexCount:indexType:indexBuffer:indexBufferOffset:] (100 samples, 0.94%)</title><rect x="27.6792%" y="677" width="0.9392%" height="15" fill="rgb(208,226,31)" fg:x="2947" fg:w="100"/><text x="27.9292%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_retain (2 samples, 0.02%)</title><rect x="28.5996%" y="661" width="0.0188%" height="15" fill="rgb(218,26,49)" fg:x="3045" fg:w="2"/><text x="28.8496%" y="671.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::encodeISPPrimitiveType (5 samples, 0.05%)</title><rect x="28.6184%" y="677" width="0.0470%" height="15" fill="rgb(233,197,48)" fg:x="3047" fg:w="5"/><text x="28.8684%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::render::draw_indexed (114 samples, 1.07%)</title><rect x="27.6792%" y="693" width="1.0707%" height="15" fill="rgb(252,181,51)" fg:x="2947" fg:w="114"/><text x="27.9292%" y="703.50"></text></g><g><title>ostinato`wgpu_core::command::render::State::is_ready (8 samples, 0.08%)</title><rect x="28.6747%" y="677" width="0.0751%" height="15" fill="rgb(253,90,19)" fg:x="3053" fg:w="8"/><text x="28.9247%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::bind::Binder::check_compatibility (2 samples, 0.02%)</title><rect x="28.7311%" y="661" width="0.0188%" height="15" fill="rgb(215,171,30)" fg:x="3059" fg:w="2"/><text x="28.9811%" y="671.50"></text></g><g><title>ostinato`wgpu_core::command::bind::compat::BoundBindGroupLayouts::get_invalid (2 samples, 0.02%)</title><rect x="28.7311%" y="645" width="0.0188%" height="15" fill="rgb(214,222,9)" fg:x="3059" fg:w="2"/><text x="28.9811%" y="655.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::set_bind_group (5 samples, 0.05%)</title><rect x="28.7781%" y="677" width="0.0470%" height="15" fill="rgb(223,3,22)" fg:x="3064" fg:w="5"/><text x="29.0281%" y="687.50"></text></g><g><title>ostinato`&lt;T as core::any::Any&gt;::type_id (5 samples, 0.05%)</title><rect x="28.8250%" y="677" width="0.0470%" height="15" fill="rgb(225,196,46)" fg:x="3069" fg:w="5"/><text x="29.0750%" y="687.50"></text></g><g><title>ostinato`&lt;wgpu_hal::metal::BindGroup as wgpu_hal::dynamic::DynResource&gt;::as_any (3 samples, 0.03%)</title><rect x="28.8720%" y="677" width="0.0282%" height="15" fill="rgb(209,110,37)" fg:x="3074" fg:w="3"/><text x="29.1220%" y="687.50"></text></g><g><title>ostinato`alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.02%)</title><rect x="28.9096%" y="677" width="0.0188%" height="15" fill="rgb(249,89,12)" fg:x="3078" fg:w="2"/><text x="29.1596%" y="687.50"></text></g><g><title>ostinato`wgpu_core::binding_model::BindGroup::validate_dynamic_bindings (3 samples, 0.03%)</title><rect x="28.9471%" y="677" width="0.0282%" height="15" fill="rgb(226,27,33)" fg:x="3082" fg:w="3"/><text x="29.1971%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::bind::Binder::assign_group (7 samples, 0.07%)</title><rect x="28.9753%" y="677" width="0.0657%" height="15" fill="rgb(213,82,22)" fg:x="3085" fg:w="7"/><text x="29.2253%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::bind::compat::BoundBindGroupLayouts::assign (3 samples, 0.03%)</title><rect x="29.0129%" y="661" width="0.0282%" height="15" fill="rgb(248,140,0)" fg:x="3089" fg:w="3"/><text x="29.2629%" y="671.50"></text></g><g><title>ostinato`wgpu_core::resource::ParentDevice::same_device_as (6 samples, 0.06%)</title><rect x="29.0504%" y="677" width="0.0564%" height="15" fill="rgb(228,106,3)" fg:x="3093" fg:w="6"/><text x="29.3004%" y="687.50"></text></g><g><title>ostinato`wgpu_core::track::buffer::BufferUsageScope::merge_bind_group (7 samples, 0.07%)</title><rect x="29.1068%" y="677" width="0.0657%" height="15" fill="rgb(209,23,37)" fg:x="3099" fg:w="7"/><text x="29.3568%" y="687.50"></text></g><g><title>ostinato`wgpu_core::track::texture::TextureUsageScope::merge_single (3 samples, 0.03%)</title><rect x="29.1725%" y="677" width="0.0282%" height="15" fill="rgb(241,93,50)" fg:x="3106" fg:w="3"/><text x="29.4225%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::render::set_bind_group (59 samples, 0.55%)</title><rect x="28.7499%" y="693" width="0.5541%" height="15" fill="rgb(253,46,43)" fg:x="3061" fg:w="59"/><text x="28.9999%" y="703.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::set_bind_group (11 samples, 0.10%)</title><rect x="29.2007%" y="677" width="0.1033%" height="15" fill="rgb(226,206,43)" fg:x="3109" fg:w="11"/><text x="29.4507%" y="687.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext setFragmentTexture:atIndex:] (4 samples, 0.04%)</title><rect x="29.2665%" y="661" width="0.0376%" height="15" fill="rgb(217,54,7)" fg:x="3116" fg:w="4"/><text x="29.5165%" y="671.50"></text></g><g><title>ostinato`wgpu_core::command::render::set_index_buffer (10 samples, 0.09%)</title><rect x="29.3040%" y="693" width="0.0939%" height="15" fill="rgb(223,5,52)" fg:x="3120" fg:w="10"/><text x="29.5540%" y="703.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext setRenderPipelineState:] (3 samples, 0.03%)</title><rect x="29.5013%" y="677" width="0.0282%" height="15" fill="rgb(206,52,46)" fg:x="3141" fg:w="3"/><text x="29.7513%" y="687.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext setTriangleFillMode:] (2 samples, 0.02%)</title><rect x="29.5294%" y="677" width="0.0188%" height="15" fill="rgb(253,136,11)" fg:x="3144" fg:w="2"/><text x="29.7794%" y="687.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="29.5576%" y="677" width="0.0282%" height="15" fill="rgb(208,106,33)" fg:x="3147" fg:w="3"/><text x="29.8076%" y="687.50"></text></g><g><title>ostinato`&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="29.5952%" y="677" width="0.0470%" height="15" fill="rgb(206,54,4)" fg:x="3151" fg:w="5"/><text x="29.8452%" y="687.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.02%)</title><rect x="29.6422%" y="677" width="0.0188%" height="15" fill="rgb(213,3,15)" fg:x="3156" fg:w="2"/><text x="29.8922%" y="687.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="29.6422%" y="661" width="0.0188%" height="15" fill="rgb(252,211,39)" fg:x="3156" fg:w="2"/><text x="29.8922%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="29.6422%" y="645" width="0.0188%" height="15" fill="rgb(223,6,36)" fg:x="3156" fg:w="2"/><text x="29.8922%" y="655.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (2 samples, 0.02%)</title><rect x="29.7361%" y="661" width="0.0188%" height="15" fill="rgb(252,169,45)" fg:x="3166" fg:w="2"/><text x="29.9861%" y="671.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="29.7361%" y="645" width="0.0188%" height="15" fill="rgb(212,48,26)" fg:x="3166" fg:w="2"/><text x="29.9861%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="29.7361%" y="629" width="0.0188%" height="15" fill="rgb(251,102,48)" fg:x="3166" fg:w="2"/><text x="29.9861%" y="639.50"></text></g><g><title>ostinato`wgpu_core::command::bind::Binder::change_pipeline_layout (15 samples, 0.14%)</title><rect x="29.6703%" y="677" width="0.1409%" height="15" fill="rgb(243,208,16)" fg:x="3159" fg:w="15"/><text x="29.9203%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::bind::compat::BoundBindGroupLayouts::update_expectations (6 samples, 0.06%)</title><rect x="29.7549%" y="661" width="0.0564%" height="15" fill="rgb(219,96,24)" fg:x="3168" fg:w="6"/><text x="30.0049%" y="671.50"></text></g><g><title>ostinato`wgpu_core::command::bind::compat::BoundBindGroupLayouts::update_expectations (2 samples, 0.02%)</title><rect x="29.8112%" y="677" width="0.0188%" height="15" fill="rgb(219,33,29)" fg:x="3174" fg:w="2"/><text x="30.0612%" y="687.50"></text></g><g><title>ostinato`wgpu_core::device::RenderPassContext::check_compatible (2 samples, 0.02%)</title><rect x="29.8394%" y="677" width="0.0188%" height="15" fill="rgb(223,176,5)" fg:x="3177" fg:w="2"/><text x="30.0894%" y="687.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyRenderContext setRenderPipelineState:] (4 samples, 0.04%)</title><rect x="29.8957%" y="661" width="0.0376%" height="15" fill="rgb(228,140,14)" fg:x="3183" fg:w="4"/><text x="30.1457%" y="671.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::setRenderPipelineStateCommon (16 samples, 0.15%)</title><rect x="29.9333%" y="661" width="0.1503%" height="15" fill="rgb(217,179,31)" fg:x="3187" fg:w="16"/><text x="30.1833%" y="671.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::setVertexProgramBufferBytes (3 samples, 0.03%)</title><rect x="30.0836%" y="661" width="0.0282%" height="15" fill="rgb(230,9,30)" fg:x="3203" fg:w="3"/><text x="30.3336%" y="671.50"></text></g><g><title>ostinato`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="30.1212%" y="661" width="0.0188%" height="15" fill="rgb(230,136,20)" fg:x="3207" fg:w="2"/><text x="30.3712%" y="671.50"></text></g><g><title>ostinato`metal::encoder::RenderCommandEncoderRef::set_depth_stencil_state (2 samples, 0.02%)</title><rect x="30.1493%" y="661" width="0.0188%" height="15" fill="rgb(215,210,22)" fg:x="3210" fg:w="2"/><text x="30.3993%" y="671.50"></text></g><g><title>ostinato`wgpu_core::command::render::set_pipeline (95 samples, 0.89%)</title><rect x="29.3980%" y="693" width="0.8923%" height="15" fill="rgb(218,43,5)" fg:x="3130" fg:w="95"/><text x="29.6480%" y="703.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::set_render_pipeline (44 samples, 0.41%)</title><rect x="29.8770%" y="677" width="0.4133%" height="15" fill="rgb(216,11,5)" fg:x="3181" fg:w="44"/><text x="30.1270%" y="687.50"></text></g><g><title>ostinato`wgpu_hal::metal::PipelineStageInfo::assign_from (13 samples, 0.12%)</title><rect x="30.1681%" y="661" width="0.1221%" height="15" fill="rgb(209,82,29)" fg:x="3212" fg:w="13"/><text x="30.4181%" y="671.50"></text></g><g><title>ostinato`&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.06%)</title><rect x="30.2339%" y="645" width="0.0564%" height="15" fill="rgb(244,115,12)" fg:x="3219" fg:w="6"/><text x="30.4839%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="30.2714%" y="629" width="0.0188%" height="15" fill="rgb(222,82,18)" fg:x="3223" fg:w="2"/><text x="30.5214%" y="639.50"></text></g><g><title>AGXMetal13_3`AGX::RenderContext&lt;AGX::G13::Encoders, AGX::G13::Classes, AGX::G13::ObjClasses&gt;::setVertexProgramBufferBytes (2 samples, 0.02%)</title><rect x="30.2996%" y="661" width="0.0188%" height="15" fill="rgb(249,227,8)" fg:x="3226" fg:w="2"/><text x="30.5496%" y="671.50"></text></g><g><title>ostinato`&lt;C as wgpu_hal::dynamic::command::DynCommandEncoder&gt;::set_vertex_buffer (7 samples, 0.07%)</title><rect x="30.2996%" y="677" width="0.0657%" height="15" fill="rgb(253,141,45)" fg:x="3226" fg:w="7"/><text x="30.5496%" y="687.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::set_vertex_buffer (5 samples, 0.05%)</title><rect x="30.3184%" y="661" width="0.0470%" height="15" fill="rgb(234,184,4)" fg:x="3228" fg:w="5"/><text x="30.5684%" y="671.50"></text></g><g><title>ostinato`&lt;T as core::any::Any&gt;::type_id (3 samples, 0.03%)</title><rect x="30.3654%" y="677" width="0.0282%" height="15" fill="rgb(218,194,23)" fg:x="3233" fg:w="3"/><text x="30.6154%" y="687.50"></text></g><g><title>ostinato`wgpu_core::resource::ParentDevice::same_device_as (2 samples, 0.02%)</title><rect x="30.4029%" y="677" width="0.0188%" height="15" fill="rgb(235,66,41)" fg:x="3237" fg:w="2"/><text x="30.6529%" y="687.50"></text></g><g><title>ostinato`wgpu_core::command::render::set_vertex_buffer (16 samples, 0.15%)</title><rect x="30.2902%" y="693" width="0.1503%" height="15" fill="rgb(245,217,1)" fg:x="3225" fg:w="16"/><text x="30.5402%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::buffer::BufferUsageScope::merge_single (2 samples, 0.02%)</title><rect x="30.4217%" y="677" width="0.0188%" height="15" fill="rgb(229,91,1)" fg:x="3239" fg:w="2"/><text x="30.6717%" y="687.50"></text></g><g><title>ostinato`wgpu_core::indirect_validation::draw::Draw::inject_validation_pass (4 samples, 0.04%)</title><rect x="30.4405%" y="693" width="0.0376%" height="15" fill="rgb(207,101,30)" fg:x="3241" fg:w="4"/><text x="30.6905%" y="703.50"></text></g><g><title>ostinato`wgpu_core::resource::ParentDevice::same_device_as (3 samples, 0.03%)</title><rect x="30.4781%" y="693" width="0.0282%" height="15" fill="rgb(223,82,49)" fg:x="3245" fg:w="3"/><text x="30.7281%" y="703.50"></text></g><g><title>ostinato`wgpu_core::track::buffer::BufferTracker::set_size (4 samples, 0.04%)</title><rect x="30.5062%" y="693" width="0.0376%" height="15" fill="rgb(218,167,17)" fg:x="3248" fg:w="4"/><text x="30.7562%" y="703.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="30.5156%" y="677" width="0.0282%" height="15" fill="rgb(208,103,14)" fg:x="3249" fg:w="3"/><text x="30.7656%" y="687.50"></text></g><g><title>ostinato`wgpu_core::track::buffer::BufferUsageScope::merge_bind_group (2 samples, 0.02%)</title><rect x="30.5438%" y="693" width="0.0188%" height="15" fill="rgb(238,20,8)" fg:x="3252" fg:w="2"/><text x="30.7938%" y="703.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="30.6096%" y="677" width="0.0376%" height="15" fill="rgb(218,80,54)" fg:x="3259" fg:w="4"/><text x="30.8596%" y="687.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer initWithQueue:retainedReferences:] (3 samples, 0.03%)</title><rect x="30.6471%" y="661" width="0.0282%" height="15" fill="rgb(240,144,17)" fg:x="3263" fg:w="3"/><text x="30.8971%" y="671.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer .cxx_construct] (2 samples, 0.02%)</title><rect x="30.6753%" y="645" width="0.0188%" height="15" fill="rgb(245,27,50)" fg:x="3266" fg:w="2"/><text x="30.9253%" y="655.50"></text></g><g><title>IOGPU`IOGPUDeviceGetNextGlobalTraceID (2 samples, 0.02%)</title><rect x="30.7598%" y="613" width="0.0188%" height="15" fill="rgb(251,51,7)" fg:x="3275" fg:w="2"/><text x="31.0098%" y="623.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginKernelCommands (3 samples, 0.03%)</title><rect x="30.7880%" y="581" width="0.0282%" height="15" fill="rgb(245,217,29)" fg:x="3278" fg:w="3"/><text x="31.0380%" y="591.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageSetupShmems (6 samples, 0.06%)</title><rect x="30.7786%" y="597" width="0.0564%" height="15" fill="rgb(221,176,29)" fg:x="3277" fg:w="6"/><text x="31.0286%" y="607.50"></text></g><g><title>IOGPU`IOGPUMetalDeviceShmemPoolCreateShmem (2 samples, 0.02%)</title><rect x="30.8162%" y="581" width="0.0188%" height="15" fill="rgb(212,180,24)" fg:x="3281" fg:w="2"/><text x="31.0662%" y="591.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (7 samples, 0.07%)</title><rect x="30.7786%" y="613" width="0.0657%" height="15" fill="rgb(254,24,2)" fg:x="3277" fg:w="7"/><text x="31.0286%" y="623.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (36 samples, 0.34%)</title><rect x="30.8444%" y="581" width="0.3381%" height="15" fill="rgb(230,100,2)" fg:x="3284" fg:w="36"/><text x="31.0944%" y="591.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (36 samples, 0.34%)</title><rect x="30.8444%" y="565" width="0.3381%" height="15" fill="rgb(219,142,25)" fg:x="3284" fg:w="36"/><text x="31.0944%" y="575.50"></text></g><g><title>libdispatch.dylib`dispatch_async (3 samples, 0.03%)</title><rect x="31.1825%" y="581" width="0.0282%" height="15" fill="rgb(240,73,43)" fg:x="3320" fg:w="3"/><text x="31.4325%" y="591.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (41 samples, 0.39%)</title><rect x="30.8444%" y="597" width="0.3851%" height="15" fill="rgb(214,114,15)" fg:x="3284" fg:w="41"/><text x="31.0944%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (2 samples, 0.02%)</title><rect x="31.2107%" y="581" width="0.0188%" height="15" fill="rgb(207,130,4)" fg:x="3323" fg:w="2"/><text x="31.4607%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (49 samples, 0.46%)</title><rect x="30.8444%" y="613" width="0.4602%" height="15" fill="rgb(221,25,40)" fg:x="3284" fg:w="49"/><text x="31.0944%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (4 samples, 0.04%)</title><rect x="31.2670%" y="597" width="0.0376%" height="15" fill="rgb(241,184,7)" fg:x="3329" fg:w="4"/><text x="31.5170%" y="607.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_wait (2 samples, 0.02%)</title><rect x="31.3609%" y="613" width="0.0188%" height="15" fill="rgb(235,159,4)" fg:x="3339" fg:w="2"/><text x="31.6109%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="31.3891%" y="613" width="0.0564%" height="15" fill="rgb(214,87,48)" fg:x="3342" fg:w="6"/><text x="31.6391%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (2 samples, 0.02%)</title><rect x="31.4549%" y="613" width="0.0188%" height="15" fill="rgb(246,198,24)" fg:x="3349" fg:w="2"/><text x="31.7049%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.02%)</title><rect x="31.4737%" y="613" width="0.0188%" height="15" fill="rgb(209,66,40)" fg:x="3351" fg:w="2"/><text x="31.7237%" y="623.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (81 samples, 0.76%)</title><rect x="30.7411%" y="629" width="0.7608%" height="15" fill="rgb(233,147,39)" fg:x="3273" fg:w="81"/><text x="30.9911%" y="639.50"></text></g><g><title>IOGPU`-[IOGPUMetalDevice deviceRef] (2 samples, 0.02%)</title><rect x="31.5018%" y="629" width="0.0188%" height="15" fill="rgb(231,145,52)" fg:x="3354" fg:w="2"/><text x="31.7518%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_opt_class (4 samples, 0.04%)</title><rect x="31.5676%" y="629" width="0.0376%" height="15" fill="rgb(206,20,26)" fg:x="3361" fg:w="4"/><text x="31.8176%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer initWithQueue:retainedReferences:] (100 samples, 0.94%)</title><rect x="30.6941%" y="645" width="0.9392%" height="15" fill="rgb(238,220,4)" fg:x="3268" fg:w="100"/><text x="30.9441%" y="655.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (2 samples, 0.02%)</title><rect x="31.6145%" y="629" width="0.0188%" height="15" fill="rgb(252,195,42)" fg:x="3366" fg:w="2"/><text x="31.8645%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice alertCommandBufferActivityStart] (3 samples, 0.03%)</title><rect x="31.6333%" y="645" width="0.0282%" height="15" fill="rgb(209,10,6)" fg:x="3368" fg:w="3"/><text x="31.8833%" y="655.50"></text></g><g><title>AGXMetal13_3`DYLD-STUB$$operator new(unsigned long) (2 samples, 0.02%)</title><rect x="31.6615%" y="645" width="0.0188%" height="15" fill="rgb(229,3,52)" fg:x="3371" fg:w="2"/><text x="31.9115%" y="655.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:] (2 samples, 0.02%)</title><rect x="31.6803%" y="645" width="0.0188%" height="15" fill="rgb(253,49,37)" fg:x="3373" fg:w="2"/><text x="31.9303%" y="655.50"></text></g><g><title>IOGPU`objc_msgSend$initWithQueue:retainedReferences:synchronousDebugMode: (2 samples, 0.02%)</title><rect x="31.6991%" y="645" width="0.0188%" height="15" fill="rgb(240,103,49)" fg:x="3375" fg:w="2"/><text x="31.9491%" y="655.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (2 samples, 0.02%)</title><rect x="31.7272%" y="645" width="0.0188%" height="15" fill="rgb(250,182,30)" fg:x="3378" fg:w="2"/><text x="31.9772%" y="655.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (2 samples, 0.02%)</title><rect x="31.7272%" y="629" width="0.0188%" height="15" fill="rgb(248,8,30)" fg:x="3378" fg:w="2"/><text x="31.9772%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="31.7460%" y="645" width="0.0188%" height="15" fill="rgb(237,120,30)" fg:x="3380" fg:w="2"/><text x="31.9960%" y="655.50"></text></g><g><title>libobjc.A.dylib`object_cxxConstructFromClass (3 samples, 0.03%)</title><rect x="31.7648%" y="645" width="0.0282%" height="15" fill="rgb(221,146,34)" fg:x="3382" fg:w="3"/><text x="32.0148%" y="655.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandQueue commandBufferWithUnretainedReferences] (122 samples, 1.15%)</title><rect x="30.6753%" y="661" width="1.1459%" height="15" fill="rgb(242,55,13)" fg:x="3266" fg:w="122"/><text x="30.9253%" y="671.50"></text></g><g><title>libsystem_platform.dylib`__bzero (3 samples, 0.03%)</title><rect x="31.7930%" y="645" width="0.0282%" height="15" fill="rgb(242,112,31)" fg:x="3385" fg:w="3"/><text x="32.0430%" y="655.50"></text></g><g><title>AGXMetal13_3`DYLD-STUB$$objc_alloc (2 samples, 0.02%)</title><rect x="31.8212%" y="661" width="0.0188%" height="15" fill="rgb(249,192,27)" fg:x="3388" fg:w="2"/><text x="32.0712%" y="671.50"></text></g><g><title>AGXMetal13_3`objc_msgSend$initWithQueue:retainedReferences: (2 samples, 0.02%)</title><rect x="31.8400%" y="661" width="0.0188%" height="15" fill="rgb(208,204,44)" fg:x="3390" fg:w="2"/><text x="32.0900%" y="671.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel setLabel:] (3 samples, 0.03%)</title><rect x="31.8681%" y="661" width="0.0282%" height="15" fill="rgb(208,93,54)" fg:x="3393" fg:w="3"/><text x="32.1181%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (5 samples, 0.05%)</title><rect x="31.8963%" y="661" width="0.0470%" height="15" fill="rgb(242,1,31)" fg:x="3396" fg:w="5"/><text x="32.1463%" y="671.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="31.9433%" y="661" width="0.0564%" height="15" fill="rgb(241,83,25)" fg:x="3401" fg:w="6"/><text x="32.1933%" y="671.50"></text></g><g><title>CoreFoundation`CFStringCreateWithBytes (2 samples, 0.02%)</title><rect x="32.0090%" y="645" width="0.0188%" height="15" fill="rgb(205,169,50)" fg:x="3408" fg:w="2"/><text x="32.2590%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="32.0372%" y="645" width="0.0470%" height="15" fill="rgb(239,186,37)" fg:x="3411" fg:w="5"/><text x="32.2872%" y="655.50"></text></g><g><title>CoreFoundation`CFStringConvertNSStringEncodingToEncoding (3 samples, 0.03%)</title><rect x="32.0842%" y="629" width="0.0282%" height="15" fill="rgb(205,221,10)" fg:x="3416" fg:w="3"/><text x="32.3342%" y="639.50"></text></g><g><title>libobjc.A.dylib`object_setClass (2 samples, 0.02%)</title><rect x="32.1311%" y="597" width="0.0188%" height="15" fill="rgb(218,196,15)" fg:x="3421" fg:w="2"/><text x="32.3811%" y="607.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (3 samples, 0.03%)</title><rect x="32.1311%" y="613" width="0.0282%" height="15" fill="rgb(218,196,35)" fg:x="3421" fg:w="3"/><text x="32.3811%" y="623.50"></text></g><g><title>CoreFoundation`__CFSearchStringROM (7 samples, 0.07%)</title><rect x="32.1593%" y="613" width="0.0657%" height="15" fill="rgb(233,63,24)" fg:x="3424" fg:w="7"/><text x="32.4093%" y="623.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (14 samples, 0.13%)</title><rect x="32.1217%" y="629" width="0.1315%" height="15" fill="rgb(225,8,4)" fg:x="3420" fg:w="14"/><text x="32.3717%" y="639.50"></text></g><g><title>Foundation`DYLD-STUB$$CFStringConvertNSStringEncodingToEncoding (2 samples, 0.02%)</title><rect x="32.2532%" y="629" width="0.0188%" height="15" fill="rgb(234,105,35)" fg:x="3434" fg:w="2"/><text x="32.5032%" y="639.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::begin_encoding (182 samples, 1.71%)</title><rect x="30.5814%" y="693" width="1.7094%" height="15" fill="rgb(236,21,32)" fg:x="3256" fg:w="182"/><text x="30.8314%" y="703.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (175 samples, 1.64%)</title><rect x="30.6471%" y="677" width="1.6437%" height="15" fill="rgb(228,109,6)" fg:x="3263" fg:w="175"/><text x="30.8971%" y="687.50"></text></g><g><title>ostinato`metal::commandbuffer::CommandBufferRef::set_label (30 samples, 0.28%)</title><rect x="32.0090%" y="661" width="0.2818%" height="15" fill="rgb(229,215,31)" fg:x="3408" fg:w="30"/><text x="32.2590%" y="671.50"></text></g><g><title>ostinato`metal::nsstring_from_str (22 samples, 0.21%)</title><rect x="32.0842%" y="645" width="0.2066%" height="15" fill="rgb(221,52,54)" fg:x="3416" fg:w="22"/><text x="32.3342%" y="655.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAutorelease (2 samples, 0.02%)</title><rect x="32.2720%" y="629" width="0.0188%" height="15" fill="rgb(252,129,43)" fg:x="3436" fg:w="2"/><text x="32.5220%" y="639.50"></text></g><g><title>ostinato`wgpu_hal::metal::command::_&lt;impl wgpu_hal::CommandEncoder for wgpu_hal::metal::CommandEncoder&gt;::draw_indexed (2 samples, 0.02%)</title><rect x="32.2908%" y="693" width="0.0188%" height="15" fill="rgb(248,183,27)" fg:x="3438" fg:w="2"/><text x="32.5408%" y="703.50"></text></g><g><title>ostinato`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_end (1,232 samples, 11.57%)</title><rect x="20.7570%" y="709" width="11.5713%" height="15" fill="rgb(250,0,22)" fg:x="2210" fg:w="1232"/><text x="21.0070%" y="719.50">ostinato`wgpu_cor..</text></g><g><title>ostinato`wgpu_core::command::render::draw_indexed (2 samples, 0.02%)</title><rect x="32.3284%" y="709" width="0.0188%" height="15" fill="rgb(213,166,10)" fg:x="3442" fg:w="2"/><text x="32.5784%" y="719.50"></text></g><g><title>ostinato`wgpu_core::command::render::set_pipeline (2 samples, 0.02%)</title><rect x="32.3565%" y="709" width="0.0188%" height="15" fill="rgb(207,163,36)" fg:x="3445" fg:w="2"/><text x="32.6065%" y="719.50"></text></g><g><title>ostinato`wgpu_core::track::SharedTrackerIndexAllocator::size (3 samples, 0.03%)</title><rect x="32.3847%" y="709" width="0.0282%" height="15" fill="rgb(208,122,22)" fg:x="3448" fg:w="3"/><text x="32.6347%" y="719.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreRenderPass as wgpu::dispatch::RenderPassInterface&gt;::end (1,256 samples, 11.80%)</title><rect x="20.6255%" y="725" width="11.7968%" height="15" fill="rgb(207,104,49)" fg:x="2196" fg:w="1256"/><text x="20.8755%" y="735.50">ostinato`&lt;wgpu::b..</text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu::api::render_pass::RenderPass&gt; (1,258 samples, 11.82%)</title><rect x="20.6161%" y="741" width="11.8155%" height="15" fill="rgb(248,211,50)" fg:x="2195" fg:w="1258"/><text x="20.8661%" y="751.50">ostinato`core::ptr..</text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="32.4317%" y="725" width="0.0188%" height="15" fill="rgb(217,13,45)" fg:x="3453" fg:w="2"/><text x="32.6817%" y="735.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu::api::surface_texture::SurfaceTexture&gt; (3 samples, 0.03%)</title><rect x="32.4317%" y="741" width="0.0282%" height="15" fill="rgb(211,216,49)" fg:x="3453" fg:w="3"/><text x="32.6817%" y="751.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;winit::event::WindowEvent&gt; (4 samples, 0.04%)</title><rect x="32.4598%" y="741" width="0.0376%" height="15" fill="rgb(221,58,53)" fg:x="3456" fg:w="4"/><text x="32.7098%" y="751.50"></text></g><g><title>ostinato`hecs::borrow::AtomicBorrow::borrow (3 samples, 0.03%)</title><rect x="32.5068%" y="741" width="0.0282%" height="15" fill="rgb(220,112,41)" fg:x="3461" fg:w="3"/><text x="32.7568%" y="751.50"></text></g><g><title>ostinato`ostinato::State::camera_mut (6 samples, 0.06%)</title><rect x="32.5350%" y="741" width="0.0564%" height="15" fill="rgb(236,38,28)" fg:x="3464" fg:w="6"/><text x="32.7850%" y="751.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (4 samples, 0.04%)</title><rect x="32.5538%" y="725" width="0.0376%" height="15" fill="rgb(227,195,22)" fg:x="3466" fg:w="4"/><text x="32.8038%" y="735.50"></text></g><g><title>ostinato`core::fmt::write (2 samples, 0.02%)</title><rect x="32.5726%" y="709" width="0.0188%" height="15" fill="rgb(214,55,33)" fg:x="3468" fg:w="2"/><text x="32.8226%" y="719.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (2 samples, 0.02%)</title><rect x="32.5913%" y="725" width="0.0188%" height="15" fill="rgb(248,80,13)" fg:x="3470" fg:w="2"/><text x="32.8413%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.03%)</title><rect x="32.6289%" y="709" width="0.0282%" height="15" fill="rgb(238,52,6)" fg:x="3474" fg:w="3"/><text x="32.8789%" y="719.50"></text></g><g><title>ostinato`&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.04%)</title><rect x="32.6571%" y="709" width="0.0376%" height="15" fill="rgb(224,198,47)" fg:x="3477" fg:w="4"/><text x="32.9071%" y="719.50"></text></g><g><title>ostinato`&lt;ostinato::ResourceId as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="32.6947%" y="709" width="0.0188%" height="15" fill="rgb(233,171,20)" fg:x="3481" fg:w="2"/><text x="32.9447%" y="719.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="32.7228%" y="693" width="0.0376%" height="15" fill="rgb(241,30,25)" fg:x="3484" fg:w="4"/><text x="32.9728%" y="703.50"></text></g><g><title>ostinato`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="32.7886%" y="661" width="0.0188%" height="15" fill="rgb(207,171,38)" fg:x="3491" fg:w="2"/><text x="33.0386%" y="671.50"></text></g><g><title>ostinato`&lt;ostinato::ResourceId as core::fmt::Debug&gt;::fmt (5 samples, 0.05%)</title><rect x="32.7792%" y="693" width="0.0470%" height="15" fill="rgb(234,70,1)" fg:x="3490" fg:w="5"/><text x="33.0292%" y="703.50"></text></g><g><title>ostinato`core::fmt::Formatter::debug_tuple_field1_finish (5 samples, 0.05%)</title><rect x="32.7792%" y="677" width="0.0470%" height="15" fill="rgb(232,178,18)" fg:x="3490" fg:w="5"/><text x="33.0292%" y="687.50"></text></g><g><title>ostinato`core::fmt::num::imp::_&lt;impl core::fmt::Display for u64&gt;::fmt (2 samples, 0.02%)</title><rect x="32.8074%" y="661" width="0.0188%" height="15" fill="rgb(241,78,40)" fg:x="3493" fg:w="2"/><text x="33.0574%" y="671.50"></text></g><g><title>ostinato`&lt;alloc::string::String as core::fmt::Write&gt;::write_char (3 samples, 0.03%)</title><rect x="32.8637%" y="677" width="0.0282%" height="15" fill="rgb(222,35,25)" fg:x="3499" fg:w="3"/><text x="33.1137%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`_realloc (9 samples, 0.08%)</title><rect x="32.9107%" y="629" width="0.0845%" height="15" fill="rgb(207,92,16)" fg:x="3504" fg:w="9"/><text x="33.1607%" y="639.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_realloc (9 samples, 0.08%)</title><rect x="32.9107%" y="613" width="0.0845%" height="15" fill="rgb(216,59,51)" fg:x="3504" fg:w="9"/><text x="33.1607%" y="623.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (7 samples, 0.07%)</title><rect x="32.9295%" y="597" width="0.0657%" height="15" fill="rgb(213,80,28)" fg:x="3506" fg:w="7"/><text x="33.1795%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.06%)</title><rect x="32.9389%" y="581" width="0.0564%" height="15" fill="rgb(220,93,7)" fg:x="3507" fg:w="6"/><text x="33.1889%" y="591.50"></text></g><g><title>ostinato`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.11%)</title><rect x="32.8919%" y="677" width="0.1127%" height="15" fill="rgb(225,24,44)" fg:x="3502" fg:w="12"/><text x="33.1419%" y="687.50"></text></g><g><title>ostinato`alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (12 samples, 0.11%)</title><rect x="32.8919%" y="661" width="0.1127%" height="15" fill="rgb(243,74,40)" fg:x="3502" fg:w="12"/><text x="33.1419%" y="671.50"></text></g><g><title>ostinato`alloc::raw_vec::finish_grow (11 samples, 0.10%)</title><rect x="32.9013%" y="645" width="0.1033%" height="15" fill="rgb(228,39,7)" fg:x="3503" fg:w="11"/><text x="33.1513%" y="655.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (43 samples, 0.40%)</title><rect x="32.6101%" y="725" width="0.4039%" height="15" fill="rgb(227,79,8)" fg:x="3472" fg:w="43"/><text x="32.8601%" y="735.50"></text></g><g><title>ostinato`core::fmt::write (31 samples, 0.29%)</title><rect x="32.7228%" y="709" width="0.2912%" height="15" fill="rgb(236,58,11)" fg:x="3484" fg:w="31"/><text x="32.9728%" y="719.50"></text></g><g><title>ostinato`&lt;str as core::fmt::Debug&gt;::fmt (20 samples, 0.19%)</title><rect x="32.8261%" y="693" width="0.1878%" height="15" fill="rgb(249,63,35)" fg:x="3495" fg:w="20"/><text x="33.0761%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.04%)</title><rect x="33.1173%" y="677" width="0.0376%" height="15" fill="rgb(252,114,16)" fg:x="3526" fg:w="4"/><text x="33.3673%" y="687.50"></text></g><g><title>ostinato`&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="33.1643%" y="677" width="0.0188%" height="15" fill="rgb(254,151,24)" fg:x="3531" fg:w="2"/><text x="33.4143%" y="687.50"></text></g><g><title>ostinato`&lt;ostinato::ResourceId as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="33.1831%" y="677" width="0.0188%" height="15" fill="rgb(253,54,39)" fg:x="3533" fg:w="2"/><text x="33.4331%" y="687.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="33.2018%" y="661" width="0.0188%" height="15" fill="rgb(243,25,45)" fg:x="3535" fg:w="2"/><text x="33.4518%" y="671.50"></text></g><g><title>ostinato`&lt;&amp;T as core::fmt::Debug&gt;::fmt (4 samples, 0.04%)</title><rect x="33.2394%" y="645" width="0.0376%" height="15" fill="rgb(234,134,9)" fg:x="3539" fg:w="4"/><text x="33.4894%" y="655.50"></text></g><g><title>ostinato`&lt;ostinato::ResourceId as core::fmt::Debug&gt;::fmt (9 samples, 0.08%)</title><rect x="33.2206%" y="661" width="0.0845%" height="15" fill="rgb(227,166,31)" fg:x="3537" fg:w="9"/><text x="33.4706%" y="671.50"></text></g><g><title>ostinato`core::fmt::Formatter::debug_tuple_field1_finish (3 samples, 0.03%)</title><rect x="33.2770%" y="645" width="0.0282%" height="15" fill="rgb(245,143,41)" fg:x="3543" fg:w="3"/><text x="33.5270%" y="655.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (23 samples, 0.22%)</title><rect x="33.0985%" y="693" width="0.2160%" height="15" fill="rgb(238,181,32)" fg:x="3524" fg:w="23"/><text x="33.3485%" y="703.50"></text></g><g><title>ostinato`core::fmt::write (12 samples, 0.11%)</title><rect x="33.2018%" y="677" width="0.1127%" height="15" fill="rgb(224,113,18)" fg:x="3535" fg:w="12"/><text x="33.4518%" y="687.50"></text></g><g><title>ostinato`anyhow::__private::format_err (25 samples, 0.23%)</title><rect x="33.0985%" y="709" width="0.2348%" height="15" fill="rgb(240,229,28)" fg:x="3524" fg:w="25"/><text x="33.3485%" y="719.50"></text></g><g><title>ostinato`ostinato::State::downcast_resource (88 samples, 0.83%)</title><rect x="32.5913%" y="741" width="0.8265%" height="15" fill="rgb(250,185,3)" fg:x="3470" fg:w="88"/><text x="32.8413%" y="751.50"></text></g><g><title>ostinato`ostinato::State::get_resource (40 samples, 0.38%)</title><rect x="33.0422%" y="725" width="0.3757%" height="15" fill="rgb(212,59,25)" fg:x="3518" fg:w="40"/><text x="33.2922%" y="735.50"></text></g><g><title>ostinato`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.08%)</title><rect x="33.3333%" y="709" width="0.0845%" height="15" fill="rgb(221,87,20)" fg:x="3549" fg:w="9"/><text x="33.5833%" y="719.50"></text></g><g><title>ostinato`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="33.3615%" y="693" width="0.0564%" height="15" fill="rgb(213,74,28)" fg:x="3552" fg:w="6"/><text x="33.6115%" y="703.50"></text></g><g><title>ostinato`ostinato::State::downcast_resource_mut (2 samples, 0.02%)</title><rect x="33.4179%" y="741" width="0.0188%" height="15" fill="rgb(224,132,34)" fg:x="3558" fg:w="2"/><text x="33.6679%" y="751.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (2 samples, 0.02%)</title><rect x="33.4179%" y="725" width="0.0188%" height="15" fill="rgb(222,101,24)" fg:x="3558" fg:w="2"/><text x="33.6679%" y="735.50"></text></g><g><title>ostinato`&lt;ostinato::ResourceId as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="33.4179%" y="709" width="0.0188%" height="15" fill="rgb(254,142,4)" fg:x="3558" fg:w="2"/><text x="33.6679%" y="719.50"></text></g><g><title>ostinato`&lt;ostinato::ResourceId as core::fmt::Debug&gt;::fmt (4 samples, 0.04%)</title><rect x="33.4460%" y="677" width="0.0376%" height="15" fill="rgb(230,229,49)" fg:x="3561" fg:w="4"/><text x="33.6960%" y="687.50"></text></g><g><title>ostinato`core::fmt::Formatter::debug_tuple_field1_finish (2 samples, 0.02%)</title><rect x="33.4648%" y="661" width="0.0188%" height="15" fill="rgb(238,70,47)" fg:x="3563" fg:w="2"/><text x="33.7148%" y="671.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (6 samples, 0.06%)</title><rect x="33.4366%" y="709" width="0.0564%" height="15" fill="rgb(231,160,17)" fg:x="3560" fg:w="6"/><text x="33.6866%" y="719.50"></text></g><g><title>ostinato`core::fmt::write (5 samples, 0.05%)</title><rect x="33.4460%" y="693" width="0.0470%" height="15" fill="rgb(218,68,53)" fg:x="3561" fg:w="5"/><text x="33.6960%" y="703.50"></text></g><g><title>ostinato`anyhow::__private::format_err (9 samples, 0.08%)</title><rect x="33.4366%" y="725" width="0.0845%" height="15" fill="rgb(236,111,10)" fg:x="3560" fg:w="9"/><text x="33.6866%" y="735.50"></text></g><g><title>ostinato`std::backtrace::Backtrace::capture (2 samples, 0.02%)</title><rect x="33.5024%" y="709" width="0.0188%" height="15" fill="rgb(224,34,41)" fg:x="3567" fg:w="2"/><text x="33.7524%" y="719.50"></text></g><g><title>ostinato`ostinato::State::get_resource (15 samples, 0.14%)</title><rect x="33.4366%" y="741" width="0.1409%" height="15" fill="rgb(241,118,19)" fg:x="3560" fg:w="15"/><text x="33.6866%" y="751.50"></text></g><g><title>ostinato`hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.06%)</title><rect x="33.5212%" y="725" width="0.0564%" height="15" fill="rgb(238,129,25)" fg:x="3569" fg:w="6"/><text x="33.7712%" y="735.50"></text></g><g><title>ostinato`&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="33.5587%" y="709" width="0.0188%" height="15" fill="rgb(238,22,31)" fg:x="3573" fg:w="2"/><text x="33.8087%" y="719.50"></text></g><g><title>ostinato`ostinato::State::get_resource_mut (3 samples, 0.03%)</title><rect x="33.5775%" y="741" width="0.0282%" height="15" fill="rgb(222,174,48)" fg:x="3575" fg:w="3"/><text x="33.8275%" y="751.50"></text></g><g><title>ostinato`anyhow::__private::format_err (2 samples, 0.02%)</title><rect x="33.5869%" y="725" width="0.0188%" height="15" fill="rgb(206,152,40)" fg:x="3576" fg:w="2"/><text x="33.8369%" y="735.50"></text></g><g><title>ostinato`ostinato::State::graphics_mut (3 samples, 0.03%)</title><rect x="33.6151%" y="741" width="0.0282%" height="15" fill="rgb(218,99,54)" fg:x="3579" fg:w="3"/><text x="33.8651%" y="751.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (2 samples, 0.02%)</title><rect x="33.6245%" y="725" width="0.0188%" height="15" fill="rgb(220,174,26)" fg:x="3580" fg:w="2"/><text x="33.8745%" y="735.50"></text></g><g><title>ostinato`core::fmt::write (2 samples, 0.02%)</title><rect x="33.6245%" y="709" width="0.0188%" height="15" fill="rgb(245,116,9)" fg:x="3580" fg:w="2"/><text x="33.8745%" y="719.50"></text></g><g><title>ostinato`&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="33.6245%" y="693" width="0.0188%" height="15" fill="rgb(209,72,35)" fg:x="3580" fg:w="2"/><text x="33.8745%" y="703.50"></text></g><g><title>ostinato`&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="33.6527%" y="709" width="0.0188%" height="15" fill="rgb(226,126,21)" fg:x="3583" fg:w="2"/><text x="33.9027%" y="719.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (5 samples, 0.05%)</title><rect x="33.6433%" y="725" width="0.0470%" height="15" fill="rgb(227,192,1)" fg:x="3582" fg:w="5"/><text x="33.8933%" y="735.50"></text></g><g><title>ostinato`core::fmt::write (2 samples, 0.02%)</title><rect x="33.6715%" y="709" width="0.0188%" height="15" fill="rgb(237,180,29)" fg:x="3585" fg:w="2"/><text x="33.9215%" y="719.50"></text></g><g><title>ostinato`&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="33.6715%" y="693" width="0.0188%" height="15" fill="rgb(230,197,35)" fg:x="3585" fg:w="2"/><text x="33.9215%" y="703.50"></text></g><g><title>ostinato`ostinato::State::keyboard (6 samples, 0.06%)</title><rect x="33.6433%" y="741" width="0.0564%" height="15" fill="rgb(246,193,31)" fg:x="3582" fg:w="6"/><text x="33.8933%" y="751.50"></text></g><g><title>ostinato`ostinato::State::keyboard_mut (9 samples, 0.08%)</title><rect x="33.6996%" y="741" width="0.0845%" height="15" fill="rgb(241,36,4)" fg:x="3588" fg:w="9"/><text x="33.9496%" y="751.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (8 samples, 0.08%)</title><rect x="33.7090%" y="725" width="0.0751%" height="15" fill="rgb(241,130,17)" fg:x="3589" fg:w="8"/><text x="33.9590%" y="735.50"></text></g><g><title>ostinato`core::fmt::write (6 samples, 0.06%)</title><rect x="33.7278%" y="709" width="0.0564%" height="15" fill="rgb(206,137,32)" fg:x="3591" fg:w="6"/><text x="33.9778%" y="719.50"></text></g><g><title>ostinato`&lt;str as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="33.7560%" y="693" width="0.0282%" height="15" fill="rgb(237,228,51)" fg:x="3594" fg:w="3"/><text x="34.0060%" y="703.50"></text></g><g><title>ostinato`ostinato::State::mouse (2 samples, 0.02%)</title><rect x="33.7842%" y="741" width="0.0188%" height="15" fill="rgb(243,6,42)" fg:x="3597" fg:w="2"/><text x="34.0342%" y="751.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (2 samples, 0.02%)</title><rect x="33.7842%" y="725" width="0.0188%" height="15" fill="rgb(251,74,28)" fg:x="3597" fg:w="2"/><text x="34.0342%" y="735.50"></text></g><g><title>ostinato`core::fmt::write (2 samples, 0.02%)</title><rect x="33.7842%" y="709" width="0.0188%" height="15" fill="rgb(218,20,49)" fg:x="3597" fg:w="2"/><text x="34.0342%" y="719.50"></text></g><g><title>ostinato`&lt;str as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="33.7842%" y="693" width="0.0188%" height="15" fill="rgb(238,28,14)" fg:x="3597" fg:w="2"/><text x="34.0342%" y="703.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.06%)</title><rect x="33.8217%" y="709" width="0.0564%" height="15" fill="rgb(229,40,46)" fg:x="3601" fg:w="6"/><text x="34.0717%" y="719.50"></text></g><g><title>ostinato`ostinato::State::mouse_mut (13 samples, 0.12%)</title><rect x="33.8029%" y="741" width="0.1221%" height="15" fill="rgb(244,195,20)" fg:x="3599" fg:w="13"/><text x="34.0529%" y="751.50"></text></g><g><title>ostinato`alloc::fmt::format::format_inner (12 samples, 0.11%)</title><rect x="33.8123%" y="725" width="0.1127%" height="15" fill="rgb(253,56,35)" fg:x="3600" fg:w="12"/><text x="34.0623%" y="735.50"></text></g><g><title>ostinato`core::fmt::write (2 samples, 0.02%)</title><rect x="33.9063%" y="709" width="0.0188%" height="15" fill="rgb(210,149,44)" fg:x="3610" fg:w="2"/><text x="34.1563%" y="719.50"></text></g><g><title>ostinato`ostinato::camera::controller::CameraController::update_camera (9 samples, 0.08%)</title><rect x="33.9250%" y="741" width="0.0845%" height="15" fill="rgb(240,135,12)" fg:x="3612" fg:w="9"/><text x="34.1750%" y="751.50"></text></g><g><title>libsystem_m.dylib`__sincosf_stret (2 samples, 0.02%)</title><rect x="33.9908%" y="725" width="0.0188%" height="15" fill="rgb(251,24,50)" fg:x="3619" fg:w="2"/><text x="34.2408%" y="735.50"></text></g><g><title>ostinato`std::sys::pal::unix::time::Timespec::now (4 samples, 0.04%)</title><rect x="34.0096%" y="741" width="0.0376%" height="15" fill="rgb(243,200,47)" fg:x="3621" fg:w="4"/><text x="34.2596%" y="751.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (3 samples, 0.03%)</title><rect x="34.0190%" y="725" width="0.0282%" height="15" fill="rgb(224,166,26)" fg:x="3622" fg:w="3"/><text x="34.2690%" y="735.50"></text></g><g><title>libsystem_c.dylib`clock_gettime_nsec_np (2 samples, 0.02%)</title><rect x="34.0565%" y="693" width="0.0188%" height="15" fill="rgb(233,0,47)" fg:x="3626" fg:w="2"/><text x="34.3065%" y="703.50"></text></g><g><title>ostinato`std::time::Instant::elapsed (5 samples, 0.05%)</title><rect x="34.0471%" y="741" width="0.0470%" height="15" fill="rgb(253,80,5)" fg:x="3625" fg:w="5"/><text x="34.2971%" y="751.50"></text></g><g><title>ostinato`std::sys::pal::unix::time::Timespec::now (5 samples, 0.05%)</title><rect x="34.0471%" y="725" width="0.0470%" height="15" fill="rgb(214,133,25)" fg:x="3625" fg:w="5"/><text x="34.2971%" y="735.50"></text></g><g><title>libsystem_c.dylib`clock_gettime (5 samples, 0.05%)</title><rect x="34.0471%" y="709" width="0.0470%" height="15" fill="rgb(209,27,14)" fg:x="3625" fg:w="5"/><text x="34.2971%" y="719.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreCommandEncoder as wgpu::dispatch::CommandEncoderInterface&gt;::finish (2 samples, 0.02%)</title><rect x="34.1035%" y="725" width="0.0188%" height="15" fill="rgb(219,102,51)" fg:x="3631" fg:w="2"/><text x="34.3535%" y="735.50"></text></g><g><title>ostinato`wgpu::api::command_encoder::CommandEncoder::finish (3 samples, 0.03%)</title><rect x="34.1035%" y="741" width="0.0282%" height="15" fill="rgb(237,18,16)" fg:x="3631" fg:w="3"/><text x="34.3535%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`malloc (2 samples, 0.02%)</title><rect x="34.4041%" y="677" width="0.0188%" height="15" fill="rgb(241,85,17)" fg:x="3663" fg:w="2"/><text x="34.6541%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (6 samples, 0.06%)</title><rect x="34.4228%" y="677" width="0.0564%" height="15" fill="rgb(236,90,42)" fg:x="3665" fg:w="6"/><text x="34.6728%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (6 samples, 0.06%)</title><rect x="34.4228%" y="661" width="0.0564%" height="15" fill="rgb(249,57,21)" fg:x="3665" fg:w="6"/><text x="34.6728%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.04%)</title><rect x="34.4416%" y="645" width="0.0376%" height="15" fill="rgb(243,12,36)" fg:x="3667" fg:w="4"/><text x="34.6916%" y="655.50"></text></g><g><title>ostinato`wgpu_hal::metal::adapter::_&lt;impl wgpu_hal::metal::PrivateCapabilities&gt;::map_format (4 samples, 0.04%)</title><rect x="34.5074%" y="661" width="0.0376%" height="15" fill="rgb(253,128,47)" fg:x="3674" fg:w="4"/><text x="34.7574%" y="671.50"></text></g><g><title>ostinato`&lt;D as wgpu_hal::dynamic::device::DynDevice&gt;::create_texture_view (6 samples, 0.06%)</title><rect x="34.4980%" y="677" width="0.0564%" height="15" fill="rgb(207,33,20)" fg:x="3673" fg:w="6"/><text x="34.7480%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="34.6201%" y="661" width="0.0188%" height="15" fill="rgb(233,215,35)" fg:x="3686" fg:w="2"/><text x="34.8701%" y="671.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable texture] (2 samples, 0.02%)</title><rect x="34.6670%" y="645" width="0.0188%" height="15" fill="rgb(249,188,52)" fg:x="3691" fg:w="2"/><text x="34.9170%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="34.7046%" y="645" width="0.0470%" height="15" fill="rgb(225,12,32)" fg:x="3695" fg:w="5"/><text x="34.9546%" y="655.50"></text></g><g><title>ostinato`DYLD-STUB$$objc_msgSend (2 samples, 0.02%)</title><rect x="34.7610%" y="645" width="0.0188%" height="15" fill="rgb(247,98,14)" fg:x="3701" fg:w="2"/><text x="35.0110%" y="655.50"></text></g><g><title>ostinato`metal::MetalDrawableRef::texture (2 samples, 0.02%)</title><rect x="34.7798%" y="645" width="0.0188%" height="15" fill="rgb(247,219,48)" fg:x="3703" fg:w="2"/><text x="35.0298%" y="655.50"></text></g><g><title>QuartzCore`-[CAMetalLayer(CAMetalLayerPrivate) currentDisplay] (4 samples, 0.04%)</title><rect x="34.8361%" y="597" width="0.0376%" height="15" fill="rgb(253,60,48)" fg:x="3709" fg:w="4"/><text x="35.0861%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="34.9019%" y="597" width="0.0188%" height="15" fill="rgb(245,15,52)" fg:x="3716" fg:w="2"/><text x="35.1519%" y="607.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable estimateTargets] (10 samples, 0.09%)</title><rect x="34.8361%" y="613" width="0.0939%" height="15" fill="rgb(220,133,28)" fg:x="3709" fg:w="10"/><text x="35.0861%" y="623.50"></text></g><g><title>QuartzCore`-[CAMetalLayer(CAMetalLayerPrivate) currentDisplay] (2 samples, 0.02%)</title><rect x="34.9394%" y="613" width="0.0188%" height="15" fill="rgb(217,180,4)" fg:x="3720" fg:w="2"/><text x="35.1894%" y="623.50"></text></g><g><title>QuartzCore`CA::Display::DisplayTimingsControl::server_triple_buffered (2 samples, 0.02%)</title><rect x="34.9582%" y="613" width="0.0188%" height="15" fill="rgb(251,24,1)" fg:x="3722" fg:w="2"/><text x="35.2082%" y="623.50"></text></g><g><title>CoreFoundation`CFEqual (2 samples, 0.02%)</title><rect x="35.1085%" y="597" width="0.0188%" height="15" fill="rgb(212,185,49)" fg:x="3738" fg:w="2"/><text x="35.3585%" y="607.50"></text></g><g><title>FramePacing`FPDrawableLifetimeMarkStarted (3 samples, 0.03%)</title><rect x="35.1273%" y="597" width="0.0282%" height="15" fill="rgb(215,175,22)" fg:x="3740" fg:w="3"/><text x="35.3773%" y="607.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent init] (2 samples, 0.02%)</title><rect x="35.1554%" y="597" width="0.0188%" height="15" fill="rgb(250,205,14)" fg:x="3743" fg:w="2"/><text x="35.4054%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (49 samples, 0.46%)</title><rect x="35.2118%" y="549" width="0.4602%" height="15" fill="rgb(225,211,22)" fg:x="3749" fg:w="49"/><text x="35.4618%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (47 samples, 0.44%)</title><rect x="35.2306%" y="533" width="0.4414%" height="15" fill="rgb(251,179,42)" fg:x="3751" fg:w="47"/><text x="35.4806%" y="543.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (4 samples, 0.04%)</title><rect x="35.6908%" y="533" width="0.0376%" height="15" fill="rgb(208,216,51)" fg:x="3800" fg:w="4"/><text x="35.9408%" y="543.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (4 samples, 0.04%)</title><rect x="35.6908%" y="517" width="0.0376%" height="15" fill="rgb(235,36,11)" fg:x="3800" fg:w="4"/><text x="35.9408%" y="527.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (4 samples, 0.04%)</title><rect x="35.6908%" y="501" width="0.0376%" height="15" fill="rgb(213,189,28)" fg:x="3800" fg:w="4"/><text x="35.9408%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (4 samples, 0.04%)</title><rect x="35.6908%" y="485" width="0.0376%" height="15" fill="rgb(227,203,42)" fg:x="3800" fg:w="4"/><text x="35.9408%" y="495.50"></text></g><g><title>libdispatch.dylib`dispatch_async (8 samples, 0.08%)</title><rect x="35.6720%" y="549" width="0.0751%" height="15" fill="rgb(244,72,36)" fg:x="3798" fg:w="8"/><text x="35.9220%" y="559.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_alloc_from_heap (2 samples, 0.02%)</title><rect x="35.7284%" y="533" width="0.0188%" height="15" fill="rgb(213,53,17)" fg:x="3804" fg:w="2"/><text x="35.9784%" y="543.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (2 samples, 0.02%)</title><rect x="35.7284%" y="517" width="0.0188%" height="15" fill="rgb(207,167,3)" fg:x="3804" fg:w="2"/><text x="35.9784%" y="527.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (58 samples, 0.54%)</title><rect x="35.2118%" y="565" width="0.5448%" height="15" fill="rgb(216,98,30)" fg:x="3749" fg:w="58"/><text x="35.4618%" y="575.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeStart:drawableID:surfaceID:acquisitionWaitStart:acquiredTime:] (64 samples, 0.60%)</title><rect x="35.2118%" y="581" width="0.6011%" height="15" fill="rgb(236,123,15)" fg:x="3749" fg:w="64"/><text x="35.4618%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.02%)</title><rect x="35.7941%" y="565" width="0.0188%" height="15" fill="rgb(248,81,50)" fg:x="3811" fg:w="2"/><text x="36.0441%" y="575.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.02%)</title><rect x="35.8223%" y="581" width="0.0188%" height="15" fill="rgb(214,120,4)" fg:x="3814" fg:w="2"/><text x="36.0723%" y="591.50"></text></g><g><title>IOKit`io_connect_method (171 samples, 1.61%)</title><rect x="35.8693%" y="549" width="1.6061%" height="15" fill="rgb(208,179,34)" fg:x="3819" fg:w="171"/><text x="36.1193%" y="559.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (170 samples, 1.60%)</title><rect x="35.8787%" y="533" width="1.5967%" height="15" fill="rgb(227,140,7)" fg:x="3820" fg:w="170"/><text x="36.1287%" y="543.50"></text></g><g><title>libsystem_c.dylib`__memcpy_chk (2 samples, 0.02%)</title><rect x="37.4753%" y="549" width="0.0188%" height="15" fill="rgb(214,22,6)" fg:x="3990" fg:w="2"/><text x="37.7253%" y="559.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="37.4941%" y="549" width="0.0282%" height="15" fill="rgb(207,137,27)" fg:x="3992" fg:w="3"/><text x="37.7441%" y="559.50"></text></g><g><title>IOKit`IOConnectCallMethod (179 samples, 1.68%)</title><rect x="35.8505%" y="565" width="1.6812%" height="15" fill="rgb(210,8,46)" fg:x="3817" fg:w="179"/><text x="36.1005%" y="575.50"></text></g><g><title>IOKit`io_connect_method (3 samples, 0.03%)</title><rect x="37.5317%" y="565" width="0.0282%" height="15" fill="rgb(240,16,54)" fg:x="3996" fg:w="3"/><text x="37.7817%" y="575.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent initWithOptions:] (184 samples, 1.73%)</title><rect x="35.8411%" y="581" width="1.7282%" height="15" fill="rgb(211,209,29)" fg:x="3816" fg:w="184"/><text x="36.0911%" y="591.50"></text></g><g><title>libobjc.A.dylib`callSetWeaklyReferenced(objc_object*) (2 samples, 0.02%)</title><rect x="37.6162%" y="565" width="0.0188%" height="15" fill="rgb(226,228,24)" fg:x="4005" fg:w="2"/><text x="37.8662%" y="575.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable initWithDrawablePrivate:layer:waitStart:] (265 samples, 2.49%)</title><rect x="35.1742%" y="597" width="2.4890%" height="15" fill="rgb(222,84,9)" fg:x="3745" fg:w="265"/><text x="35.4242%" y="607.50">Qu..</text></g><g><title>libobjc.A.dylib`objc_storeWeak (7 samples, 0.07%)</title><rect x="37.5974%" y="581" width="0.0657%" height="15" fill="rgb(234,203,30)" fg:x="4003" fg:w="7"/><text x="37.8474%" y="591.50"></text></g><g><title>libobjc.A.dylib`weak_register_no_lock (3 samples, 0.03%)</title><rect x="37.6350%" y="565" width="0.0282%" height="15" fill="rgb(238,109,14)" fg:x="4007" fg:w="3"/><text x="37.8850%" y="575.50"></text></g><g><title>libobjc.A.dylib`append_referrer(weak_entry_t*, objc_object**) (3 samples, 0.03%)</title><rect x="37.6350%" y="549" width="0.0282%" height="15" fill="rgb(233,206,34)" fg:x="4007" fg:w="3"/><text x="37.8850%" y="559.50"></text></g><g><title>IOSurface`IOSurfaceClientGetDetachModeCode (3 samples, 0.03%)</title><rect x="37.7102%" y="581" width="0.0282%" height="15" fill="rgb(220,167,47)" fg:x="4015" fg:w="3"/><text x="37.9602%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`rack_get_thread_index (3 samples, 0.03%)</title><rect x="37.7759%" y="549" width="0.0282%" height="15" fill="rgb(238,105,10)" fg:x="4022" fg:w="3"/><text x="38.0259%" y="559.50"></text></g><g><title>QuartzCore`release_image(_CAImageQueue*, unsigned long, CAImageQueueReleased*, bool) (13 samples, 0.12%)</title><rect x="37.7477%" y="581" width="0.1221%" height="15" fill="rgb(213,227,17)" fg:x="4019" fg:w="13"/><text x="37.9977%" y="591.50"></text></g><g><title>libsystem_malloc.dylib`szone_malloc_should_clear (10 samples, 0.09%)</title><rect x="37.7759%" y="565" width="0.0939%" height="15" fill="rgb(217,132,38)" fg:x="4022" fg:w="10"/><text x="38.0259%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 0.07%)</title><rect x="37.8041%" y="549" width="0.0657%" height="15" fill="rgb(242,146,4)" fg:x="4025" fg:w="7"/><text x="38.0541%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_malloc_from_free_list (4 samples, 0.04%)</title><rect x="37.8323%" y="533" width="0.0376%" height="15" fill="rgb(212,61,9)" fg:x="4028" fg:w="4"/><text x="38.0823%" y="543.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderArray initWithCapacity:] (2 samples, 0.02%)</title><rect x="37.8792%" y="549" width="0.0188%" height="15" fill="rgb(247,126,22)" fg:x="4033" fg:w="2"/><text x="38.1292%" y="559.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (4 samples, 0.04%)</title><rect x="37.9262%" y="533" width="0.0376%" height="15" fill="rgb(220,196,2)" fg:x="4038" fg:w="4"/><text x="38.1762%" y="543.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (2 samples, 0.02%)</title><rect x="37.9450%" y="517" width="0.0188%" height="15" fill="rgb(208,46,4)" fg:x="4040" fg:w="2"/><text x="38.1950%" y="527.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (8 samples, 0.08%)</title><rect x="37.8980%" y="549" width="0.0751%" height="15" fill="rgb(252,104,46)" fg:x="4035" fg:w="8"/><text x="38.1480%" y="559.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="37.9731%" y="549" width="0.0564%" height="15" fill="rgb(237,152,48)" fg:x="4043" fg:w="6"/><text x="38.2231%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.04%)</title><rect x="38.0295%" y="549" width="0.0376%" height="15" fill="rgb(221,59,37)" fg:x="4049" fg:w="4"/><text x="38.2795%" y="559.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (23 samples, 0.22%)</title><rect x="37.8792%" y="565" width="0.2160%" height="15" fill="rgb(209,202,51)" fg:x="4033" fg:w="23"/><text x="38.1292%" y="575.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (2 samples, 0.02%)</title><rect x="38.1046%" y="565" width="0.0188%" height="15" fill="rgb(228,81,30)" fg:x="4057" fg:w="2"/><text x="38.3546%" y="575.50"></text></g><g><title>QuartzCore`release_sample(unsigned int, unsigned long long, void*) (.11157) (2 samples, 0.02%)</title><rect x="38.1328%" y="565" width="0.0188%" height="15" fill="rgb(227,42,39)" fg:x="4060" fg:w="2"/><text x="38.3828%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="38.1610%" y="565" width="0.0282%" height="15" fill="rgb(221,26,2)" fg:x="4063" fg:w="3"/><text x="38.4110%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`_szone_free (3 samples, 0.03%)</title><rect x="38.1892%" y="565" width="0.0282%" height="15" fill="rgb(254,61,31)" fg:x="4066" fg:w="3"/><text x="38.4392%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`find_zone_and_free (6 samples, 0.06%)</title><rect x="38.2173%" y="565" width="0.0564%" height="15" fill="rgb(222,173,38)" fg:x="4069" fg:w="6"/><text x="38.4673%" y="575.50"></text></g><g><title>libsystem_malloc.dylib`szone_size (5 samples, 0.05%)</title><rect x="38.2267%" y="549" width="0.0470%" height="15" fill="rgb(218,50,12)" fg:x="4070" fg:w="5"/><text x="38.4767%" y="559.50"></text></g><g><title>libsystem_malloc.dylib`tiny_size (5 samples, 0.05%)</title><rect x="38.2267%" y="533" width="0.0470%" height="15" fill="rgb(223,88,40)" fg:x="4070" fg:w="5"/><text x="38.4767%" y="543.50"></text></g><g><title>QuartzCore`release_images(_CAImageQueue*, CAImageQueueReleased*) (46 samples, 0.43%)</title><rect x="37.8698%" y="581" width="0.4320%" height="15" fill="rgb(237,54,19)" fg:x="4032" fg:w="46"/><text x="38.1198%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.04%)</title><rect x="38.3019%" y="581" width="0.0376%" height="15" fill="rgb(251,129,25)" fg:x="4078" fg:w="4"/><text x="38.5519%" y="591.50"></text></g><g><title>QuartzCore`CAImageQueueCollect_ (73 samples, 0.69%)</title><rect x="37.6726%" y="597" width="0.6856%" height="15" fill="rgb(238,97,19)" fg:x="4011" fg:w="73"/><text x="37.9226%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`szone_try_free_default (2 samples, 0.02%)</title><rect x="38.3394%" y="581" width="0.0188%" height="15" fill="rgb(240,169,18)" fg:x="4082" fg:w="2"/><text x="38.5894%" y="591.50"></text></g><g><title>IOSurface`-[IOSurface initWithProperties:] (3 samples, 0.03%)</title><rect x="38.4428%" y="533" width="0.0282%" height="15" fill="rgb(230,187,49)" fg:x="4093" fg:w="3"/><text x="38.6928%" y="543.50"></text></g><g><title>IOSurface`IOSurfaceClientCreateChild (3 samples, 0.03%)</title><rect x="38.4428%" y="517" width="0.0282%" height="15" fill="rgb(209,44,26)" fg:x="4093" fg:w="3"/><text x="38.6928%" y="527.50"></text></g><g><title>IOKit`IOCFSerialize (3 samples, 0.03%)</title><rect x="38.4428%" y="501" width="0.0282%" height="15" fill="rgb(244,0,6)" fg:x="4093" fg:w="3"/><text x="38.6928%" y="511.50"></text></g><g><title>IOKit`DoCFSerializeBinary (2 samples, 0.02%)</title><rect x="38.4521%" y="485" width="0.0188%" height="15" fill="rgb(248,18,21)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="495.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM __apply:context:] (2 samples, 0.02%)</title><rect x="38.4521%" y="469" width="0.0188%" height="15" fill="rgb(245,180,19)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="479.50"></text></g><g><title>IOKit`IOCFSerializeBinaryCFDictionaryFunction (2 samples, 0.02%)</title><rect x="38.4521%" y="453" width="0.0188%" height="15" fill="rgb(252,118,36)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="463.50"></text></g><g><title>IOKit`DoCFSerializeBinary (2 samples, 0.02%)</title><rect x="38.4521%" y="437" width="0.0188%" height="15" fill="rgb(210,224,19)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="447.50"></text></g><g><title>CoreFoundation`CFArrayApplyFunction (2 samples, 0.02%)</title><rect x="38.4521%" y="421" width="0.0188%" height="15" fill="rgb(218,30,24)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="431.50"></text></g><g><title>IOKit`IOCFSerializeBinaryCFArraySetFunction (2 samples, 0.02%)</title><rect x="38.4521%" y="405" width="0.0188%" height="15" fill="rgb(219,75,50)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="415.50"></text></g><g><title>IOKit`DoCFSerializeBinary (2 samples, 0.02%)</title><rect x="38.4521%" y="389" width="0.0188%" height="15" fill="rgb(234,72,50)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="399.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryI __apply:context:] (2 samples, 0.02%)</title><rect x="38.4521%" y="373" width="0.0188%" height="15" fill="rgb(219,100,48)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="383.50"></text></g><g><title>IOKit`IOCFSerializeBinaryCFDictionaryFunction (2 samples, 0.02%)</title><rect x="38.4521%" y="357" width="0.0188%" height="15" fill="rgb(253,5,41)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="367.50"></text></g><g><title>IOKit`DoCFSerializeBinary (2 samples, 0.02%)</title><rect x="38.4521%" y="341" width="0.0188%" height="15" fill="rgb(247,181,11)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="351.50"></text></g><g><title>IOKit`IOCFSerializeBinaryAddObject (2 samples, 0.02%)</title><rect x="38.4521%" y="325" width="0.0188%" height="15" fill="rgb(222,223,25)" fg:x="4094" fg:w="2"/><text x="38.7021%" y="335.50"></text></g><g><title>QuartzCore`CA::SurfaceUtil::CAIOSurfaceCreate (5 samples, 0.05%)</title><rect x="38.4334%" y="565" width="0.0470%" height="15" fill="rgb(214,198,28)" fg:x="4092" fg:w="5"/><text x="38.6834%" y="575.50"></text></g><g><title>IOSurface`IOSurfaceCreate (4 samples, 0.04%)</title><rect x="38.4428%" y="549" width="0.0376%" height="15" fill="rgb(230,46,43)" fg:x="4093" fg:w="4"/><text x="38.6928%" y="559.50"></text></g><g><title>QuartzCore`CA::Render::create_iosurface_with_pixel_format (6 samples, 0.06%)</title><rect x="38.4334%" y="581" width="0.0564%" height="15" fill="rgb(233,65,53)" fg:x="4092" fg:w="6"/><text x="38.6834%" y="591.50"></text></g><g><title>QuartzCore`CA::Render::iosurface_set_colorspace (3 samples, 0.03%)</title><rect x="38.4897%" y="581" width="0.0282%" height="15" fill="rgb(221,121,27)" fg:x="4098" fg:w="3"/><text x="38.7397%" y="591.50"></text></g><g><title>IOSurface`IOSurfaceClientSetValue (3 samples, 0.03%)</title><rect x="38.4897%" y="565" width="0.0282%" height="15" fill="rgb(247,70,47)" fg:x="4098" fg:w="3"/><text x="38.7397%" y="575.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyDevice newTextureWithDescriptor:iosurface:plane:] (2 samples, 0.02%)</title><rect x="38.5179%" y="565" width="0.0188%" height="15" fill="rgb(228,85,35)" fg:x="4101" fg:w="2"/><text x="38.7679%" y="575.50"></text></g><g><title>IOSurface`IOSurfaceClientCopyValue (2 samples, 0.02%)</title><rect x="38.5179%" y="549" width="0.0188%" height="15" fill="rgb(209,50,18)" fg:x="4101" fg:w="2"/><text x="38.7679%" y="559.50"></text></g><g><title>IOSurface`IOSurfaceClientUpdateNonBulkValueCache (2 samples, 0.02%)</title><rect x="38.5179%" y="533" width="0.0188%" height="15" fill="rgb(250,19,35)" fg:x="4101" fg:w="2"/><text x="38.7679%" y="543.50"></text></g><g><title>IOKit`IOConnectCallMethod (2 samples, 0.02%)</title><rect x="38.5179%" y="517" width="0.0188%" height="15" fill="rgb(253,107,29)" fg:x="4101" fg:w="2"/><text x="38.7679%" y="527.50"></text></g><g><title>IOKit`io_connect_method (2 samples, 0.02%)</title><rect x="38.5179%" y="501" width="0.0188%" height="15" fill="rgb(252,179,29)" fg:x="4101" fg:w="2"/><text x="38.7679%" y="511.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="38.5179%" y="485" width="0.0188%" height="15" fill="rgb(238,194,6)" fg:x="4101" fg:w="2"/><text x="38.7679%" y="495.50"></text></g><g><title>QuartzCore`allocate_drawable_texture(id&lt;MTLDevice&gt;, __IOSurface*, unsigned int, unsigned int, MTLPixelFormat, unsigned long long, bool, NSString*, unsigned long) (3 samples, 0.03%)</title><rect x="38.5179%" y="581" width="0.0282%" height="15" fill="rgb(238,164,29)" fg:x="4101" fg:w="3"/><text x="38.7679%" y="591.50"></text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (24 samples, 0.23%)</title><rect x="38.3676%" y="597" width="0.2254%" height="15" fill="rgb(224,25,9)" fg:x="4085" fg:w="24"/><text x="38.6176%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (4 samples, 0.04%)</title><rect x="38.5555%" y="581" width="0.0376%" height="15" fill="rgb(244,153,23)" fg:x="4105" fg:w="4"/><text x="38.8055%" y="591.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectArrayI dealloc] (2 samples, 0.02%)</title><rect x="38.5930%" y="581" width="0.0188%" height="15" fill="rgb(212,203,14)" fg:x="4109" fg:w="2"/><text x="38.8430%" y="591.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (2 samples, 0.02%)</title><rect x="38.5930%" y="565" width="0.0188%" height="15" fill="rgb(220,164,20)" fg:x="4109" fg:w="2"/><text x="38.8430%" y="575.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyTexture dealloc] (2 samples, 0.02%)</title><rect x="38.5930%" y="549" width="0.0188%" height="15" fill="rgb(222,203,48)" fg:x="4109" fg:w="2"/><text x="38.8430%" y="559.50"></text></g><g><title>AGXMetal13_3`-[AGXTexture dealloc] (2 samples, 0.02%)</title><rect x="38.5930%" y="533" width="0.0188%" height="15" fill="rgb(215,159,22)" fg:x="4109" fg:w="2"/><text x="38.8430%" y="543.50"></text></g><g><title>IOGPU`-[IOGPUMetalTexture dealloc] (2 samples, 0.02%)</title><rect x="38.5930%" y="517" width="0.0188%" height="15" fill="rgb(216,183,47)" fg:x="4109" fg:w="2"/><text x="38.8430%" y="527.50"></text></g><g><title>IOGPU`-[IOGPUMetalResource dealloc] (2 samples, 0.02%)</title><rect x="38.5930%" y="501" width="0.0188%" height="15" fill="rgb(229,195,25)" fg:x="4109" fg:w="2"/><text x="38.8430%" y="511.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.02%)</title><rect x="38.5930%" y="485" width="0.0188%" height="15" fill="rgb(224,132,51)" fg:x="4109" fg:w="2"/><text x="38.8430%" y="495.50"></text></g><g><title>IOKit`iokit_user_client_trap (2 samples, 0.02%)</title><rect x="38.5930%" y="469" width="0.0188%" height="15" fill="rgb(240,63,7)" fg:x="4109" fg:w="2"/><text x="38.8430%" y="479.50"></text></g><g><title>QuartzCore`layer_private_cleanup_callbacks(_CAMetalLayerPrivate*) (3 samples, 0.03%)</title><rect x="38.5930%" y="597" width="0.0282%" height="15" fill="rgb(249,182,41)" fg:x="4109" fg:w="3"/><text x="38.8430%" y="607.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_wait_slow (54 samples, 0.51%)</title><rect x="38.6306%" y="597" width="0.5072%" height="15" fill="rgb(243,47,26)" fg:x="4113" fg:w="54"/><text x="38.8806%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_timedwait_trap (49 samples, 0.46%)</title><rect x="38.6776%" y="581" width="0.4602%" height="15" fill="rgb(233,48,2)" fg:x="4118" fg:w="49"/><text x="38.9276%" y="591.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (3 samples, 0.03%)</title><rect x="39.1472%" y="597" width="0.0282%" height="15" fill="rgb(244,165,34)" fg:x="4168" fg:w="3"/><text x="39.3972%" y="607.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (3 samples, 0.03%)</title><rect x="39.1472%" y="581" width="0.0282%" height="15" fill="rgb(207,89,7)" fg:x="4168" fg:w="3"/><text x="39.3972%" y="591.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="39.1847%" y="597" width="0.0564%" height="15" fill="rgb(244,117,36)" fg:x="4172" fg:w="6"/><text x="39.4347%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (2 samples, 0.02%)</title><rect x="39.2411%" y="597" width="0.0188%" height="15" fill="rgb(226,144,34)" fg:x="4178" fg:w="2"/><text x="39.4911%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_retain (2 samples, 0.02%)</title><rect x="39.2599%" y="597" width="0.0188%" height="15" fill="rgb(213,23,19)" fg:x="4180" fg:w="2"/><text x="39.5099%" y="607.50"></text></g><g><title>libsystem_c.dylib`usleep (21 samples, 0.20%)</title><rect x="39.2787%" y="597" width="0.1972%" height="15" fill="rgb(217,75,12)" fg:x="4182" fg:w="21"/><text x="39.5287%" y="607.50"></text></g><g><title>libsystem_kernel.dylib`__semwait_signal (20 samples, 0.19%)</title><rect x="39.2881%" y="581" width="0.1878%" height="15" fill="rgb(224,159,17)" fg:x="4183" fg:w="20"/><text x="39.5381%" y="591.50"></text></g><g><title>QuartzCore`CAMetalLayerPrivateNextDrawableLocked(CAMetalLayer*, CAMetalDrawable**, unsigned long*) (481 samples, 4.52%)</title><rect x="34.9864%" y="613" width="4.5177%" height="15" fill="rgb(217,118,1)" fg:x="3725" fg:w="481"/><text x="35.2364%" y="623.50">Quart..</text></g><g><title>QuartzCore`get_unused_drawable(_CAMetalLayerPrivate*, bool, bool) (2 samples, 0.02%)</title><rect x="39.5135%" y="613" width="0.0188%" height="15" fill="rgb(232,180,48)" fg:x="4207" fg:w="2"/><text x="39.7635%" y="623.50"></text></g><g><title>QuartzCore`objc_msgSend$currentDisplay (2 samples, 0.02%)</title><rect x="39.5323%" y="613" width="0.0188%" height="15" fill="rgb(230,27,33)" fg:x="4209" fg:w="2"/><text x="39.7823%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (3 samples, 0.03%)</title><rect x="39.5604%" y="613" width="0.0282%" height="15" fill="rgb(205,31,21)" fg:x="4212" fg:w="3"/><text x="39.8104%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="39.5980%" y="613" width="0.0470%" height="15" fill="rgb(253,59,4)" fg:x="4216" fg:w="5"/><text x="39.8480%" y="623.50"></text></g><g><title>QuartzCore`-[CAMetalLayer nextDrawable] (520 samples, 4.88%)</title><rect x="34.8361%" y="629" width="4.8840%" height="15" fill="rgb(224,201,9)" fg:x="3709" fg:w="520"/><text x="35.0861%" y="639.50">Quartz..</text></g><g><title>libsystem_pthread.dylib`pthread_setspecific (5 samples, 0.05%)</title><rect x="39.6731%" y="613" width="0.0470%" height="15" fill="rgb(229,206,30)" fg:x="4224" fg:w="5"/><text x="39.9231%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="39.7483%" y="629" width="0.0188%" height="15" fill="rgb(212,67,47)" fg:x="4232" fg:w="2"/><text x="39.9983%" y="639.50"></text></g><g><title>ostinato`&lt;S as wgpu_hal::dynamic::surface::DynSurface&gt;::acquire_texture (558 samples, 5.24%)</title><rect x="34.5543%" y="677" width="5.2409%" height="15" fill="rgb(211,96,50)" fg:x="3679" fg:w="558"/><text x="34.8043%" y="687.50">ostina..</text></g><g><title>ostinato`wgpu_hal::metal::surface::_&lt;impl wgpu_hal::Surface for wgpu_hal::metal::Surface&gt;::acquire_texture (549 samples, 5.16%)</title><rect x="34.6389%" y="661" width="5.1564%" height="15" fill="rgb(252,114,18)" fg:x="3688" fg:w="549"/><text x="34.8889%" y="671.50">ostina..</text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (531 samples, 4.99%)</title><rect x="34.8079%" y="645" width="4.9873%" height="15" fill="rgb(223,58,37)" fg:x="3706" fg:w="531"/><text x="35.0579%" y="655.50">ostina..</text></g><g><title>ostinato`metal::MetalDrawableRef::texture (2 samples, 0.02%)</title><rect x="39.7765%" y="629" width="0.0188%" height="15" fill="rgb(237,70,4)" fg:x="4235" fg:w="2"/><text x="40.0265%" y="639.50"></text></g><g><title>ostinato`&lt;T as core::any::Any&gt;::type_id (5 samples, 0.05%)</title><rect x="39.7952%" y="677" width="0.0470%" height="15" fill="rgb(244,85,46)" fg:x="4237" fg:w="5"/><text x="40.0452%" y="687.50"></text></g><g><title>ostinato`DYLD-STUB$$malloc (2 samples, 0.02%)</title><rect x="39.8610%" y="677" width="0.0188%" height="15" fill="rgb(223,39,52)" fg:x="4244" fg:w="2"/><text x="40.1110%" y="687.50"></text></g><g><title>ostinato`_RNvCsf4S8Lu1qssB_7___rustc12___rust_alloc (2 samples, 0.02%)</title><rect x="39.8798%" y="677" width="0.0188%" height="15" fill="rgb(218,200,14)" fg:x="4246" fg:w="2"/><text x="40.1298%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.06%)</title><rect x="39.9080%" y="661" width="0.0564%" height="15" fill="rgb(208,171,16)" fg:x="4249" fg:w="6"/><text x="40.1580%" y="671.50"></text></g><g><title>ostinato`wgpu_core::resource::Texture::new (8 samples, 0.08%)</title><rect x="39.8986%" y="677" width="0.0751%" height="15" fill="rgb(234,200,18)" fg:x="4248" fg:w="8"/><text x="40.1486%" y="687.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (7 samples, 0.07%)</title><rect x="40.0113%" y="661" width="0.0657%" height="15" fill="rgb(228,45,11)" fg:x="4260" fg:w="7"/><text x="40.2613%" y="671.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="40.0582%" y="645" width="0.0188%" height="15" fill="rgb(237,182,11)" fg:x="4265" fg:w="2"/><text x="40.3082%" y="655.50"></text></g><g><title>ostinato`wgpu_core::present::_&lt;impl wgpu_core::instance::Surface&gt;::get_current_texture (619 samples, 5.81%)</title><rect x="34.2820%" y="693" width="5.8138%" height="15" fill="rgb(241,175,49)" fg:x="3650" fg:w="619"/><text x="34.5320%" y="703.50">ostinat..</text></g><g><title>ostinato`wgpu_core::track::texture::DeviceTextureTracker::insert_single (12 samples, 0.11%)</title><rect x="39.9831%" y="677" width="0.1127%" height="15" fill="rgb(247,38,35)" fg:x="4257" fg:w="12"/><text x="40.2331%" y="687.50"></text></g><g><title>ostinato`wgpu_core::track::texture::DeviceTextureTracker::allow_index (2 samples, 0.02%)</title><rect x="40.0770%" y="661" width="0.0188%" height="15" fill="rgb(228,39,49)" fg:x="4267" fg:w="2"/><text x="40.3270%" y="671.50"></text></g><g><title>ostinato`wgpu_core::present::_&lt;impl wgpu_core::global::Global&gt;::surface_get_current_texture (629 samples, 5.91%)</title><rect x="34.1974%" y="709" width="5.9078%" height="15" fill="rgb(226,101,26)" fg:x="3641" fg:w="629"/><text x="34.4474%" y="719.50">ostinato..</text></g><g><title>ostinato`wgpu::api::surface::Surface::get_current_texture (638 samples, 5.99%)</title><rect x="34.1317%" y="741" width="5.9923%" height="15" fill="rgb(206,141,19)" fg:x="3634" fg:w="638"/><text x="34.3817%" y="751.50">ostinato..</text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreSurface as wgpu::dispatch::SurfaceInterface&gt;::get_current_texture (638 samples, 5.99%)</title><rect x="34.1317%" y="725" width="5.9923%" height="15" fill="rgb(211,200,13)" fg:x="3634" fg:w="638"/><text x="34.3817%" y="735.50">ostinato..</text></g><g><title>ostinato`wgpu_core::registry::FutureId&lt;T&gt;::assign (2 samples, 0.02%)</title><rect x="40.1052%" y="709" width="0.0188%" height="15" fill="rgb(241,121,6)" fg:x="4270" fg:w="2"/><text x="40.3552%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="40.1897%" y="661" width="0.0188%" height="15" fill="rgb(234,221,29)" fg:x="4279" fg:w="2"/><text x="40.4397%" y="671.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (13 samples, 0.12%)</title><rect x="40.2179%" y="565" width="0.1221%" height="15" fill="rgb(229,136,5)" fg:x="4282" fg:w="13"/><text x="40.4679%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (13 samples, 0.12%)</title><rect x="40.2179%" y="549" width="0.1221%" height="15" fill="rgb(238,36,11)" fg:x="4282" fg:w="13"/><text x="40.4679%" y="559.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (2 samples, 0.02%)</title><rect x="40.3588%" y="517" width="0.0188%" height="15" fill="rgb(251,55,41)" fg:x="4297" fg:w="2"/><text x="40.6088%" y="527.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (2 samples, 0.02%)</title><rect x="40.3588%" y="501" width="0.0188%" height="15" fill="rgb(242,34,40)" fg:x="4297" fg:w="2"/><text x="40.6088%" y="511.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (2 samples, 0.02%)</title><rect x="40.3588%" y="485" width="0.0188%" height="15" fill="rgb(215,42,17)" fg:x="4297" fg:w="2"/><text x="40.6088%" y="495.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="40.3588%" y="469" width="0.0188%" height="15" fill="rgb(207,44,46)" fg:x="4297" fg:w="2"/><text x="40.6088%" y="479.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (5 samples, 0.05%)</title><rect x="40.3494%" y="549" width="0.0470%" height="15" fill="rgb(211,206,28)" fg:x="4296" fg:w="5"/><text x="40.5994%" y="559.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (5 samples, 0.05%)</title><rect x="40.3494%" y="533" width="0.0470%" height="15" fill="rgb(237,167,16)" fg:x="4296" fg:w="5"/><text x="40.5994%" y="543.50"></text></g><g><title>libdispatch.dylib`dispatch_async (7 samples, 0.07%)</title><rect x="40.3400%" y="565" width="0.0657%" height="15" fill="rgb(233,66,6)" fg:x="4295" fg:w="7"/><text x="40.5900%" y="575.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (21 samples, 0.20%)</title><rect x="40.2179%" y="581" width="0.1972%" height="15" fill="rgb(246,123,29)" fg:x="4282" fg:w="21"/><text x="40.4679%" y="591.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCommit:commitTime:] (22 samples, 0.21%)</title><rect x="40.2179%" y="597" width="0.2066%" height="15" fill="rgb(209,62,40)" fg:x="4282" fg:w="22"/><text x="40.4679%" y="607.50"></text></g><g><title>Metal`-[_MTLCommandBuffer commit] (24 samples, 0.23%)</title><rect x="40.2179%" y="613" width="0.2254%" height="15" fill="rgb(218,4,25)" fg:x="4282" fg:w="24"/><text x="40.4679%" y="623.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer commit] (27 samples, 0.25%)</title><rect x="40.2085%" y="629" width="0.2536%" height="15" fill="rgb(253,91,49)" fg:x="4281" fg:w="27"/><text x="40.4585%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="40.4433%" y="613" width="0.0188%" height="15" fill="rgb(228,155,29)" fg:x="4306" fg:w="2"/><text x="40.6933%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer commit] (28 samples, 0.26%)</title><rect x="40.2085%" y="645" width="0.2630%" height="15" fill="rgb(243,57,37)" fg:x="4281" fg:w="28"/><text x="40.4585%" y="655.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStoragePoolCreateStorage (5 samples, 0.05%)</title><rect x="40.4997%" y="597" width="0.0470%" height="15" fill="rgb(244,167,17)" fg:x="4312" fg:w="5"/><text x="40.7497%" y="607.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageSetupShmems (3 samples, 0.03%)</title><rect x="40.5185%" y="581" width="0.0282%" height="15" fill="rgb(207,181,38)" fg:x="4314" fg:w="3"/><text x="40.7685%" y="591.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageBeginKernelCommands (3 samples, 0.03%)</title><rect x="40.5185%" y="565" width="0.0282%" height="15" fill="rgb(211,8,23)" fg:x="4314" fg:w="3"/><text x="40.7685%" y="575.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (14 samples, 0.13%)</title><rect x="40.5654%" y="565" width="0.1315%" height="15" fill="rgb(235,11,44)" fg:x="4319" fg:w="14"/><text x="40.8154%" y="575.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (14 samples, 0.13%)</title><rect x="40.5654%" y="549" width="0.1315%" height="15" fill="rgb(248,18,52)" fg:x="4319" fg:w="14"/><text x="40.8154%" y="559.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCreate:creationTime:] (15 samples, 0.14%)</title><rect x="40.5654%" y="581" width="0.1409%" height="15" fill="rgb(208,4,7)" fg:x="4319" fg:w="15"/><text x="40.8154%" y="591.50"></text></g><g><title>Metal`-[_MTLCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (18 samples, 0.17%)</title><rect x="40.5466%" y="597" width="0.1691%" height="15" fill="rgb(240,17,39)" fg:x="4317" fg:w="18"/><text x="40.7966%" y="607.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="40.7251%" y="597" width="0.0188%" height="15" fill="rgb(207,170,3)" fg:x="4336" fg:w="2"/><text x="40.9751%" y="607.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer initWithQueue:retainedReferences:synchronousDebugMode:] (29 samples, 0.27%)</title><rect x="40.4997%" y="613" width="0.2724%" height="15" fill="rgb(236,100,52)" fg:x="4312" fg:w="29"/><text x="40.7497%" y="623.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer initWithQueue:retainedReferences:] (33 samples, 0.31%)</title><rect x="40.4809%" y="629" width="0.3099%" height="15" fill="rgb(246,78,51)" fg:x="4310" fg:w="33"/><text x="40.7309%" y="639.50"></text></g><g><title>libsystem_platform.dylib`__bzero (2 samples, 0.02%)</title><rect x="40.8096%" y="629" width="0.0188%" height="15" fill="rgb(211,17,15)" fg:x="4345" fg:w="2"/><text x="41.0596%" y="639.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandQueue commandBuffer] (40 samples, 0.38%)</title><rect x="40.4715%" y="645" width="0.3757%" height="15" fill="rgb(209,59,46)" fg:x="4309" fg:w="40"/><text x="40.7215%" y="655.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderDictionary initWithObjects:forKeys:count:] (2 samples, 0.02%)</title><rect x="40.8941%" y="613" width="0.0188%" height="15" fill="rgb(210,92,25)" fg:x="4354" fg:w="2"/><text x="41.1441%" y="623.50"></text></g><g><title>CoreFoundation`____NSDictionaryI_new_block_invoke (6 samples, 0.06%)</title><rect x="40.9693%" y="597" width="0.0564%" height="15" fill="rgb(238,174,52)" fg:x="4362" fg:w="6"/><text x="41.2193%" y="607.50"></text></g><g><title>CoreFoundation`__NSDictionaryI_new (16 samples, 0.15%)</title><rect x="40.9129%" y="613" width="0.1503%" height="15" fill="rgb(230,73,7)" fg:x="4356" fg:w="16"/><text x="41.1629%" y="623.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="41.0256%" y="597" width="0.0376%" height="15" fill="rgb(243,124,40)" fg:x="4368" fg:w="4"/><text x="41.2756%" y="607.50"></text></g><g><title>Foundation`-[NSConstantDoubleNumber retain] (2 samples, 0.02%)</title><rect x="41.0726%" y="613" width="0.0188%" height="15" fill="rgb(244,170,11)" fg:x="4373" fg:w="2"/><text x="41.3226%" y="623.50"></text></g><g><title>libobjc.A.dylib`0x000000018c533b2c (3 samples, 0.03%)</title><rect x="41.0914%" y="613" width="0.0282%" height="15" fill="rgb(207,114,54)" fg:x="4375" fg:w="3"/><text x="41.3414%" y="623.50"></text></g><g><title>CoreFoundation`+[NSDictionary dictionaryWithObjects:forKeys:count:] (28 samples, 0.26%)</title><rect x="40.8754%" y="629" width="0.2630%" height="15" fill="rgb(205,42,20)" fg:x="4352" fg:w="28"/><text x="41.1254%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="41.1196%" y="613" width="0.0188%" height="15" fill="rgb(230,30,28)" fg:x="4378" fg:w="2"/><text x="41.3696%" y="623.50"></text></g><g><title>CoreFoundation`CFBooleanGetValue (2 samples, 0.02%)</title><rect x="41.1665%" y="613" width="0.0188%" height="15" fill="rgb(205,73,54)" fg:x="4383" fg:w="2"/><text x="41.4165%" y="623.50"></text></g><g><title>Metal`__copy_helper_block_e8_32o40o48o (2 samples, 0.02%)</title><rect x="41.1853%" y="581" width="0.0188%" height="15" fill="rgb(254,227,23)" fg:x="4385" fg:w="2"/><text x="41.4353%" y="591.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (3 samples, 0.03%)</title><rect x="41.1853%" y="597" width="0.0282%" height="15" fill="rgb(228,202,34)" fg:x="4385" fg:w="3"/><text x="41.4353%" y="607.50"></text></g><g><title>Metal`MTLDispatchListAppendBlock (4 samples, 0.04%)</title><rect x="41.1853%" y="613" width="0.0376%" height="15" fill="rgb(222,225,37)" fg:x="4385" fg:w="4"/><text x="41.4353%" y="623.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:options:] (10 samples, 0.09%)</title><rect x="41.1477%" y="629" width="0.0939%" height="15" fill="rgb(221,14,54)" fg:x="4381" fg:w="10"/><text x="41.3977%" y="639.50"></text></g><g><title>libobjc.A.dylib`class_respondsToSelector_inst (2 samples, 0.02%)</title><rect x="41.2229%" y="613" width="0.0188%" height="15" fill="rgb(254,102,2)" fg:x="4389" fg:w="2"/><text x="41.4729%" y="623.50"></text></g><g><title>Metal`_MTLShouldRemapPresent (2 samples, 0.02%)</title><rect x="41.2417%" y="629" width="0.0188%" height="15" fill="rgb(232,104,17)" fg:x="4391" fg:w="2"/><text x="41.4917%" y="639.50"></text></g><g><title>Metal`objc_msgSend$addScheduledHandler: (2 samples, 0.02%)</title><rect x="41.2604%" y="629" width="0.0188%" height="15" fill="rgb(250,220,14)" fg:x="4393" fg:w="2"/><text x="41.5104%" y="639.50"></text></g><g><title>Metal`-[_MTLCommandBuffer presentDrawable:] (49 samples, 0.46%)</title><rect x="40.8660%" y="645" width="0.4602%" height="15" fill="rgb(241,158,9)" fg:x="4351" fg:w="49"/><text x="41.1160%" y="655.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="41.2886%" y="629" width="0.0376%" height="15" fill="rgb(246,9,43)" fg:x="4396" fg:w="4"/><text x="41.5386%" y="639.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (3 samples, 0.03%)</title><rect x="41.3450%" y="645" width="0.0282%" height="15" fill="rgb(206,73,33)" fg:x="4402" fg:w="3"/><text x="41.5950%" y="655.50"></text></g><g><title>ostinato`wgpu_core::present::_&lt;impl wgpu_core::instance::Surface&gt;::present (138 samples, 1.30%)</title><rect x="40.1240%" y="709" width="1.2961%" height="15" fill="rgb(222,79,8)" fg:x="4272" fg:w="138"/><text x="40.3740%" y="719.50"></text></g><g><title>ostinato`&lt;Q as wgpu_hal::dynamic::queue::DynQueue&gt;::present (134 samples, 1.26%)</title><rect x="40.1615%" y="693" width="1.2586%" height="15" fill="rgb(234,8,54)" fg:x="4276" fg:w="134"/><text x="40.4115%" y="703.50"></text></g><g><title>ostinato`&lt;wgpu_hal::metal::Queue as wgpu_hal::Queue&gt;::present (132 samples, 1.24%)</title><rect x="40.1803%" y="677" width="1.2398%" height="15" fill="rgb(209,134,38)" fg:x="4278" fg:w="132"/><text x="40.4303%" y="687.50"></text></g><g><title>ostinato`objc::rc::autorelease::autoreleasepool (129 samples, 1.21%)</title><rect x="40.2085%" y="661" width="1.2116%" height="15" fill="rgb(230,127,29)" fg:x="4281" fg:w="129"/><text x="40.4585%" y="671.50"></text></g><g><title>ostinato`metal::commandbuffer::CommandBufferRef::set_label (4 samples, 0.04%)</title><rect x="41.3825%" y="645" width="0.0376%" height="15" fill="rgb(242,44,41)" fg:x="4406" fg:w="4"/><text x="41.6325%" y="655.50"></text></g><g><title>ostinato`metal::nsstring_from_str (2 samples, 0.02%)</title><rect x="41.4013%" y="629" width="0.0188%" height="15" fill="rgb(222,56,43)" fg:x="4408" fg:w="2"/><text x="41.6513%" y="639.50"></text></g><g><title>CoreFoundation`__CFStringCreateImmutableFunnel3 (2 samples, 0.02%)</title><rect x="41.4013%" y="613" width="0.0188%" height="15" fill="rgb(238,39,47)" fg:x="4408" fg:w="2"/><text x="41.6513%" y="623.50"></text></g><g><title>ostinato`wgpu::api::surface_texture::SurfaceTexture::present (141 samples, 1.32%)</title><rect x="40.1240%" y="741" width="1.3243%" height="15" fill="rgb(226,79,43)" fg:x="4272" fg:w="141"/><text x="40.3740%" y="751.50"></text></g><g><title>ostinato`wgpu_core::present::_&lt;impl wgpu_core::global::Global&gt;::surface_present (141 samples, 1.32%)</title><rect x="40.1240%" y="725" width="1.3243%" height="15" fill="rgb(242,105,53)" fg:x="4272" fg:w="141"/><text x="40.3740%" y="735.50"></text></g><g><title>ostinato`wgpu_core::registry::Registry&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="41.4201%" y="709" width="0.0282%" height="15" fill="rgb(251,132,46)" fg:x="4410" fg:w="3"/><text x="41.6701%" y="719.50"></text></g><g><title>ostinato`wgpu_core::command::render::_&lt;impl wgpu_core::global::Global&gt;::render_pass_set_vertex_buffer (2 samples, 0.02%)</title><rect x="41.4577%" y="741" width="0.0188%" height="15" fill="rgb(231,77,14)" fg:x="4414" fg:w="2"/><text x="41.7077%" y="751.50"></text></g><g><title>ostinato`wgpu_core::device::global::_&lt;impl wgpu_core::global::Global&gt;::texture_create_view (2 samples, 0.02%)</title><rect x="41.4765%" y="741" width="0.0188%" height="15" fill="rgb(240,135,9)" fg:x="4416" fg:w="2"/><text x="41.7265%" y="751.50"></text></g><g><title>ostinato`wgpu_core::device::queue::_&lt;impl wgpu_core::global::Global&gt;::queue_write_buffer (4 samples, 0.04%)</title><rect x="41.5140%" y="741" width="0.0376%" height="15" fill="rgb(248,109,14)" fg:x="4420" fg:w="4"/><text x="41.7640%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (25 samples, 0.23%)</title><rect x="41.5986%" y="709" width="0.2348%" height="15" fill="rgb(227,146,52)" fg:x="4429" fg:w="25"/><text x="41.8486%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (25 samples, 0.23%)</title><rect x="41.5986%" y="693" width="0.2348%" height="15" fill="rgb(232,54,3)" fg:x="4429" fg:w="25"/><text x="41.8486%" y="703.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (25 samples, 0.23%)</title><rect x="41.5986%" y="677" width="0.2348%" height="15" fill="rgb(229,201,43)" fg:x="4429" fg:w="25"/><text x="41.8486%" y="687.50"></text></g><g><title>CoreFoundation`CFRunLoopWakeUp (28 samples, 0.26%)</title><rect x="41.5798%" y="725" width="0.2630%" height="15" fill="rgb(252,161,33)" fg:x="4427" fg:w="28"/><text x="41.8298%" y="735.50"></text></g><g><title>ostinato`&lt;ostinato::App as winit::application::ApplicationHandler&lt;ostinato::State&gt;&gt;::window_event (3,992 samples, 37.49%)</title><rect x="4.3580%" y="757" width="37.4941%" height="15" fill="rgb(226,146,40)" fg:x="464" fg:w="3992"/><text x="4.6080%" y="767.50">ostinato`&lt;ostinato::App as winit::application::ApplicationHan..</text></g><g><title>ostinato`winit::platform_impl::macos::window_delegate::WindowDelegate::request_redraw (31 samples, 0.29%)</title><rect x="41.5610%" y="741" width="0.2912%" height="15" fill="rgb(219,47,25)" fg:x="4425" fg:w="31"/><text x="41.8110%" y="751.50"></text></g><g><title>ostinato`&lt;wgpu::backend::wgpu_core::CoreQueue as wgpu::dispatch::QueueInterface&gt;::write_buffer (2 samples, 0.02%)</title><rect x="41.8709%" y="757" width="0.0188%" height="15" fill="rgb(250,135,13)" fg:x="4458" fg:w="2"/><text x="42.1209%" y="767.50"></text></g><g><title>ostinato`core::ptr::drop_in_place&lt;wgpu::api::render_pass::RenderPass&gt; (3 samples, 0.03%)</title><rect x="41.9179%" y="757" width="0.0282%" height="15" fill="rgb(219,229,18)" fg:x="4463" fg:w="3"/><text x="42.1679%" y="767.50"></text></g><g><title>ostinato`ostinato::State::graphics (2 samples, 0.02%)</title><rect x="41.9743%" y="757" width="0.0188%" height="15" fill="rgb(217,152,27)" fg:x="4469" fg:w="2"/><text x="42.2243%" y="767.50"></text></g><g><title>ostinato`std::sync::mpmc::list::Channel&lt;T&gt;::try_recv (5 samples, 0.05%)</title><rect x="42.0212%" y="757" width="0.0470%" height="15" fill="rgb(225,71,47)" fg:x="4474" fg:w="5"/><text x="42.2712%" y="767.50"></text></g><g><title>ostinato`winit::platform_impl::macos::event_handler::EventHandler::handle_event (4,040 samples, 37.94%)</title><rect x="4.1890%" y="789" width="37.9450%" height="15" fill="rgb(220,139,14)" fg:x="446" fg:w="4040"/><text x="4.4390%" y="799.50">ostinato`winit::platform_impl::macos::event_handler::EventHand..</text></g><g><title>ostinato`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (4,034 samples, 37.89%)</title><rect x="4.2453%" y="773" width="37.8886%" height="15" fill="rgb(247,54,32)" fg:x="452" fg:w="4034"/><text x="4.4953%" y="783.50">ostinato`winit::platform_impl::macos::event_loop::map_user_eve..</text></g><g><title>ostinato`wgpu::api::texture::Texture::create_view (2 samples, 0.02%)</title><rect x="42.1151%" y="757" width="0.0188%" height="15" fill="rgb(252,131,39)" fg:x="4484" fg:w="2"/><text x="42.3651%" y="767.50"></text></g><g><title>ostinato`winit::platform_impl::macos::event_loop::map_user_event::_{{closure}} (5 samples, 0.05%)</title><rect x="42.1339%" y="789" width="0.0470%" height="15" fill="rgb(210,108,39)" fg:x="4486" fg:w="5"/><text x="42.3839%" y="799.50"></text></g><g><title>AppKit`-[NSWindow _doWindowWillBecomeHidden] (2 samples, 0.02%)</title><rect x="42.1809%" y="693" width="0.0188%" height="15" fill="rgb(205,23,29)" fg:x="4491" fg:w="2"/><text x="42.4309%" y="703.50"></text></g><g><title>AppKit`-[NSView _windowWillOrderOffScreen] (2 samples, 0.02%)</title><rect x="42.1809%" y="677" width="0.0188%" height="15" fill="rgb(246,139,46)" fg:x="4491" fg:w="2"/><text x="42.4309%" y="687.50"></text></g><g><title>Foundation`-[NSXPCInterface _hasProxiesInReplyBlockArgumentsOfSelector:] (2 samples, 0.02%)</title><rect x="42.2091%" y="533" width="0.0188%" height="15" fill="rgb(250,81,26)" fg:x="4494" fg:w="2"/><text x="42.4591%" y="543.50"></text></g><g><title>Foundation`-[NSXPCInterface _locked_methodInfoForSelector:createIfNecessary:] (2 samples, 0.02%)</title><rect x="42.2091%" y="517" width="0.0188%" height="15" fill="rgb(214,104,7)" fg:x="4494" fg:w="2"/><text x="42.4591%" y="527.50"></text></g><g><title>Foundation`setProtocolMetadataWithSignature (2 samples, 0.02%)</title><rect x="42.2091%" y="501" width="0.0188%" height="15" fill="rgb(233,189,8)" fg:x="4494" fg:w="2"/><text x="42.4591%" y="511.50"></text></g><g><title>CoreFoundation`-[NSMethodSignature _signatureForBlockAtArgumentIndex:] (2 samples, 0.02%)</title><rect x="42.2091%" y="485" width="0.0188%" height="15" fill="rgb(228,141,17)" fg:x="4494" fg:w="2"/><text x="42.4591%" y="495.50"></text></g><g><title>CoreFoundation`+[NSMethodSignature signatureWithObjCTypes:] (2 samples, 0.02%)</title><rect x="42.2091%" y="469" width="0.0188%" height="15" fill="rgb(247,157,1)" fg:x="4494" fg:w="2"/><text x="42.4591%" y="479.50"></text></g><g><title>CoreFoundation`__CFSearchSignatureROM (2 samples, 0.02%)</title><rect x="42.2091%" y="453" width="0.0188%" height="15" fill="rgb(249,225,5)" fg:x="4494" fg:w="2"/><text x="42.4591%" y="463.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (4 samples, 0.04%)</title><rect x="42.1997%" y="549" width="0.0376%" height="15" fill="rgb(242,55,13)" fg:x="4493" fg:w="4"/><text x="42.4497%" y="559.50"></text></g><g><title>AppKit`-[NSWMWindowCoordinator proposeKeyWindow:previousWindow:] (5 samples, 0.05%)</title><rect x="42.1997%" y="661" width="0.0470%" height="15" fill="rgb(230,49,50)" fg:x="4493" fg:w="5"/><text x="42.4497%" y="671.50"></text></g><g><title>WindowManagement`-[WMClientWindowManager proposeKeyWindowWithInfo:] (5 samples, 0.05%)</title><rect x="42.1997%" y="645" width="0.0470%" height="15" fill="rgb(241,111,38)" fg:x="4493" fg:w="5"/><text x="42.4497%" y="655.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (5 samples, 0.05%)</title><rect x="42.1997%" y="629" width="0.0470%" height="15" fill="rgb(252,155,4)" fg:x="4493" fg:w="5"/><text x="42.4497%" y="639.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.05%)</title><rect x="42.1997%" y="613" width="0.0470%" height="15" fill="rgb(212,69,32)" fg:x="4493" fg:w="5"/><text x="42.4497%" y="623.50"></text></g><g><title>WindowManagement`__50-[WMClientWindowManager proposeKeyWindowWithInfo:]_block_invoke (5 samples, 0.05%)</title><rect x="42.1997%" y="597" width="0.0470%" height="15" fill="rgb(243,107,47)" fg:x="4493" fg:w="5"/><text x="42.4497%" y="607.50"></text></g><g><title>Foundation`_NSXPCDistantObjectSimpleMessageSend2 (5 samples, 0.05%)</title><rect x="42.1997%" y="581" width="0.0470%" height="15" fill="rgb(247,130,12)" fg:x="4493" fg:w="5"/><text x="42.4497%" y="591.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendSelector:withProxy:arg1:arg2:] (5 samples, 0.05%)</title><rect x="42.1997%" y="565" width="0.0470%" height="15" fill="rgb(233,74,16)" fg:x="4493" fg:w="5"/><text x="42.4497%" y="575.50"></text></g><g><title>AppKit`NSPerformVisuallyAtomicChange (6 samples, 0.06%)</title><rect x="42.1997%" y="693" width="0.0564%" height="15" fill="rgb(208,58,18)" fg:x="4493" fg:w="6"/><text x="42.4497%" y="703.50"></text></g><g><title>AppKit`-[NSWindow _orderOut:calculatingKeyWithOptions:documentWindow:] (6 samples, 0.06%)</title><rect x="42.1997%" y="677" width="0.0564%" height="15" fill="rgb(242,225,1)" fg:x="4493" fg:w="6"/><text x="42.4497%" y="687.50"></text></g><g><title>ostinato`winit::platform_impl::macos::event_loop::notify_windows_of_exit (9 samples, 0.08%)</title><rect x="42.1809%" y="789" width="0.0845%" height="15" fill="rgb(249,39,40)" fg:x="4491" fg:w="9"/><text x="42.4309%" y="799.50"></text></g><g><title>AppKit`-[NSWindow _close] (9 samples, 0.08%)</title><rect x="42.1809%" y="773" width="0.0845%" height="15" fill="rgb(207,72,44)" fg:x="4491" fg:w="9"/><text x="42.4309%" y="783.50"></text></g><g><title>AppKit`-[NSWindow _finishClosingWindow] (9 samples, 0.08%)</title><rect x="42.1809%" y="757" width="0.0845%" height="15" fill="rgb(215,193,12)" fg:x="4491" fg:w="9"/><text x="42.4309%" y="767.50"></text></g><g><title>AppKit`-[NSWindow _doOrderWindow:] (9 samples, 0.08%)</title><rect x="42.1809%" y="741" width="0.0845%" height="15" fill="rgb(248,41,39)" fg:x="4491" fg:w="9"/><text x="42.4309%" y="751.50"></text></g><g><title>AppKit`-[NSWindow _reallyDoOrderWindow:] (9 samples, 0.08%)</title><rect x="42.1809%" y="725" width="0.0845%" height="15" fill="rgb(253,85,4)" fg:x="4491" fg:w="9"/><text x="42.4309%" y="735.50"></text></g><g><title>AppKit`-[NSWindow _reallyDoOrderWindowOutRelativeTo:] (9 samples, 0.08%)</title><rect x="42.1809%" y="709" width="0.0845%" height="15" fill="rgb(243,70,31)" fg:x="4491" fg:w="9"/><text x="42.4309%" y="719.50"></text></g><g><title>ostinato`winit::platform_impl::macos::app_state::ApplicationDelegate::cleared (4,063 samples, 38.16%)</title><rect x="4.1232%" y="805" width="38.1610%" height="15" fill="rgb(253,195,26)" fg:x="439" fg:w="4063"/><text x="4.3732%" y="815.50">ostinato`winit::platform_impl::macos::app_state::ApplicationDe..</text></g><g><title>ostinato`winit::platform_impl::macos::event_loop::stop_app_immediately (2 samples, 0.02%)</title><rect x="42.2654%" y="789" width="0.0188%" height="15" fill="rgb(243,42,11)" fg:x="4500" fg:w="2"/><text x="42.5154%" y="799.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBACK_FUNCTION__ (4,208 samples, 39.52%)</title><rect x="2.7895%" y="837" width="39.5229%" height="15" fill="rgb(239,66,17)" fg:x="297" fg:w="4208"/><text x="3.0395%" y="847.50">CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_AN_OBSERVER_CALLBAC..</text></g><g><title>ostinato`winit::platform_impl::macos::observer::control_flow_end_handler (4,072 samples, 38.25%)</title><rect x="4.0669%" y="821" width="38.2455%" height="15" fill="rgb(217,132,21)" fg:x="433" fg:w="4072"/><text x="4.3169%" y="831.50">ostinato`winit::platform_impl::macos::observer::control_flow_e..</text></g><g><title>ostinato`winit::platform_impl::macos::event_handler::EventHandler::handle_event (2 samples, 0.02%)</title><rect x="42.2936%" y="805" width="0.0188%" height="15" fill="rgb(252,202,21)" fg:x="4503" fg:w="2"/><text x="42.5436%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopPerCalloutARPEnd (2 samples, 0.02%)</title><rect x="42.3124%" y="837" width="0.0188%" height="15" fill="rgb(233,98,36)" fg:x="4505" fg:w="2"/><text x="42.5624%" y="847.50"></text></g><g><title>ViewBridge`__deferBlockOntoMainThread_block_invoke_2 (8 samples, 0.08%)</title><rect x="42.3406%" y="837" width="0.0751%" height="15" fill="rgb(216,153,54)" fg:x="4508" fg:w="8"/><text x="42.5906%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (2 samples, 0.02%)</title><rect x="42.4251%" y="837" width="0.0188%" height="15" fill="rgb(250,99,7)" fg:x="4517" fg:w="2"/><text x="42.6751%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (3 samples, 0.03%)</title><rect x="42.4439%" y="837" width="0.0282%" height="15" fill="rgb(207,56,50)" fg:x="4519" fg:w="3"/><text x="42.6939%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="42.4721%" y="837" width="0.0188%" height="15" fill="rgb(244,61,34)" fg:x="4522" fg:w="2"/><text x="42.7221%" y="847.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoObservers (4,243 samples, 39.85%)</title><rect x="2.6580%" y="853" width="39.8516%" height="15" fill="rgb(241,50,38)" fg:x="283" fg:w="4243"/><text x="2.9080%" y="863.50">CoreFoundation`__CFRunLoopDoObservers</text></g><g><title>CoreFoundation`CFBasicHashGetBucket (2 samples, 0.02%)</title><rect x="42.5190%" y="805" width="0.0188%" height="15" fill="rgb(212,166,30)" fg:x="4527" fg:w="2"/><text x="42.7690%" y="815.50"></text></g><g><title>CoreFoundation`CFSetApplyFunction (6 samples, 0.06%)</title><rect x="42.5190%" y="837" width="0.0564%" height="15" fill="rgb(249,127,32)" fg:x="4527" fg:w="6"/><text x="42.7690%" y="847.50"></text></g><g><title>CoreFoundation`CFBasicHashApply (6 samples, 0.06%)</title><rect x="42.5190%" y="821" width="0.0564%" height="15" fill="rgb(209,103,0)" fg:x="4527" fg:w="6"/><text x="42.7690%" y="831.50"></text></g><g><title>CoreFoundation`__CFSetApplyFunction_block_invoke (4 samples, 0.04%)</title><rect x="42.5378%" y="805" width="0.0376%" height="15" fill="rgb(238,209,51)" fg:x="4529" fg:w="4"/><text x="42.7878%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopCollectSources0 (4 samples, 0.04%)</title><rect x="42.5378%" y="789" width="0.0376%" height="15" fill="rgb(237,56,23)" fg:x="4529" fg:w="4"/><text x="42.7878%" y="799.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSources0 (7 samples, 0.07%)</title><rect x="42.5190%" y="853" width="0.0657%" height="15" fill="rgb(215,153,46)" fg:x="4527" fg:w="7"/><text x="42.7690%" y="863.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimers (3 samples, 0.03%)</title><rect x="42.5848%" y="853" width="0.0282%" height="15" fill="rgb(224,49,31)" fg:x="4534" fg:w="3"/><text x="42.8348%" y="863.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoTimer (3 samples, 0.03%)</title><rect x="42.5848%" y="837" width="0.0282%" height="15" fill="rgb(250,18,42)" fg:x="4534" fg:w="3"/><text x="42.8348%" y="847.50"></text></g><g><title>CoreFoundation`CFBasicHashGetCountOfKey (8 samples, 0.08%)</title><rect x="42.6223%" y="821" width="0.0751%" height="15" fill="rgb(215,176,39)" fg:x="4538" fg:w="8"/><text x="42.8723%" y="831.50"></text></g><g><title>CoreFoundation`___CFBasicHashFindBucket_Linear (8 samples, 0.08%)</title><rect x="42.6223%" y="805" width="0.0751%" height="15" fill="rgb(223,77,29)" fg:x="4538" fg:w="8"/><text x="42.8723%" y="815.50"></text></g><g><title>CoreFoundation`__CFRunLoopModeIsEmpty (11 samples, 0.10%)</title><rect x="42.6129%" y="853" width="0.1033%" height="15" fill="rgb(234,94,52)" fg:x="4537" fg:w="11"/><text x="42.8629%" y="863.50"></text></g><g><title>CoreFoundation`CFSetContainsValue (10 samples, 0.09%)</title><rect x="42.6223%" y="837" width="0.0939%" height="15" fill="rgb(220,154,50)" fg:x="4538" fg:w="10"/><text x="42.8723%" y="847.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (2 samples, 0.02%)</title><rect x="42.6975%" y="821" width="0.0188%" height="15" fill="rgb(212,11,10)" fg:x="4546" fg:w="2"/><text x="42.9475%" y="831.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (34 samples, 0.32%)</title><rect x="42.7257%" y="853" width="0.3193%" height="15" fill="rgb(205,166,19)" fg:x="4549" fg:w="34"/><text x="42.9757%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (34 samples, 0.32%)</title><rect x="42.7257%" y="837" width="0.3193%" height="15" fill="rgb(244,198,16)" fg:x="4549" fg:w="34"/><text x="42.9757%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (33 samples, 0.31%)</title><rect x="42.7350%" y="821" width="0.3099%" height="15" fill="rgb(219,69,12)" fg:x="4550" fg:w="33"/><text x="42.9850%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (32 samples, 0.30%)</title><rect x="42.7444%" y="805" width="0.3006%" height="15" fill="rgb(245,30,7)" fg:x="4551" fg:w="32"/><text x="42.9944%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="43.0638%" y="853" width="0.0188%" height="15" fill="rgb(218,221,48)" fg:x="4585" fg:w="2"/><text x="43.3138%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_extract_member_trap (5 samples, 0.05%)</title><rect x="43.0826%" y="853" width="0.0470%" height="15" fill="rgb(216,66,15)" fg:x="4587" fg:w="5"/><text x="43.3326%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_insert_member_trap (14 samples, 0.13%)</title><rect x="43.1295%" y="853" width="0.1315%" height="15" fill="rgb(226,122,50)" fg:x="4592" fg:w="14"/><text x="43.3795%" y="863.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (4,381 samples, 41.15%)</title><rect x="2.1508%" y="869" width="41.1477%" height="15" fill="rgb(239,156,16)" fg:x="229" fg:w="4381"/><text x="2.4008%" y="879.50">CoreFoundation`__CFRunLoopRun</text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (4,422 samples, 41.53%)</title><rect x="1.7939%" y="885" width="41.5328%" height="15" fill="rgb(224,27,38)" fg:x="191" fg:w="4422"/><text x="2.0439%" y="895.50">CoreFoundation`CFRunLoopRunSpecific</text></g><g><title>HIToolbox`_FirstEventTime (2 samples, 0.02%)</title><rect x="43.3362%" y="885" width="0.0188%" height="15" fill="rgb(224,39,27)" fg:x="4614" fg:w="2"/><text x="43.5862%" y="895.50"></text></g><g><title>HIToolbox`PingEventQueueMachPort (2 samples, 0.02%)</title><rect x="43.3643%" y="837" width="0.0188%" height="15" fill="rgb(215,92,29)" fg:x="4617" fg:w="2"/><text x="43.6143%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.02%)</title><rect x="43.3643%" y="821" width="0.0188%" height="15" fill="rgb(207,159,16)" fg:x="4617" fg:w="2"/><text x="43.6143%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.02%)</title><rect x="43.3643%" y="805" width="0.0188%" height="15" fill="rgb(238,163,47)" fg:x="4617" fg:w="2"/><text x="43.6143%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="43.3643%" y="789" width="0.0188%" height="15" fill="rgb(219,91,49)" fg:x="4617" fg:w="2"/><text x="43.6143%" y="799.50"></text></g><g><title>HIToolbox`RunCurrentEventLoopInMode (4,429 samples, 41.60%)</title><rect x="1.7939%" y="901" width="41.5986%" height="15" fill="rgb(227,167,31)" fg:x="191" fg:w="4429"/><text x="2.0439%" y="911.50">HIToolbox`RunCurrentEventLoopInMode</text></g><g><title>HIToolbox`_NotifyEventLoopObservers (3 samples, 0.03%)</title><rect x="43.3643%" y="885" width="0.0282%" height="15" fill="rgb(234,80,54)" fg:x="4617" fg:w="3"/><text x="43.6143%" y="895.50"></text></g><g><title>HIToolbox`MainLoopObserver(unsigned int, OpaqueEventRef*, void*) (3 samples, 0.03%)</title><rect x="43.3643%" y="869" width="0.0282%" height="15" fill="rgb(212,114,2)" fg:x="4617" fg:w="3"/><text x="43.6143%" y="879.50"></text></g><g><title>HIToolbox`Convert1CGEvent(unsigned char) (3 samples, 0.03%)</title><rect x="43.3643%" y="853" width="0.0282%" height="15" fill="rgb(234,50,24)" fg:x="4617" fg:w="3"/><text x="43.6143%" y="863.50"></text></g><g><title>AppKit`_DPSNextEvent (4,565 samples, 42.88%)</title><rect x="0.5635%" y="949" width="42.8759%" height="15" fill="rgb(221,68,8)" fg:x="60" fg:w="4565"/><text x="0.8135%" y="959.50">AppKit`_DPSNextEvent</text></g><g><title>HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter (4,436 samples, 41.66%)</title><rect x="1.7751%" y="933" width="41.6643%" height="15" fill="rgb(254,180,31)" fg:x="189" fg:w="4436"/><text x="2.0251%" y="943.50">HIToolbox`_BlockUntilNextEventMatchingListInModeWithFilter</text></g><g><title>HIToolbox`ReceiveNextEventCommon (4,436 samples, 41.66%)</title><rect x="1.7751%" y="917" width="41.6643%" height="15" fill="rgb(247,130,50)" fg:x="189" fg:w="4436"/><text x="2.0251%" y="927.50">HIToolbox`ReceiveNextEventCommon</text></g><g><title>HIToolbox`_DropPendingBoost (5 samples, 0.05%)</title><rect x="43.3925%" y="901" width="0.0470%" height="15" fill="rgb(211,109,4)" fg:x="4620" fg:w="5"/><text x="43.6425%" y="911.50"></text></g><g><title>CoreFoundation`_CFRelease (5 samples, 0.05%)</title><rect x="43.3925%" y="885" width="0.0470%" height="15" fill="rgb(238,50,21)" fg:x="4620" fg:w="5"/><text x="43.6425%" y="895.50"></text></g><g><title>libdispatch.dylib`-[OS_voucher dealloc] (5 samples, 0.05%)</title><rect x="43.3925%" y="869" width="0.0470%" height="15" fill="rgb(225,57,45)" fg:x="4620" fg:w="5"/><text x="43.6425%" y="879.50"></text></g><g><title>libdispatch.dylib`_voucher_dispose (5 samples, 0.05%)</title><rect x="43.3925%" y="853" width="0.0470%" height="15" fill="rgb(209,196,50)" fg:x="4620" fg:w="5"/><text x="43.6425%" y="863.50"></text></g><g><title>libdispatch.dylib`_voucher_dealloc_mach_voucher (4 samples, 0.04%)</title><rect x="43.4019%" y="837" width="0.0376%" height="15" fill="rgb(242,140,13)" fg:x="4621" fg:w="4"/><text x="43.6519%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_deallocate_trap (4 samples, 0.04%)</title><rect x="43.4019%" y="821" width="0.0376%" height="15" fill="rgb(217,111,7)" fg:x="4621" fg:w="4"/><text x="43.6519%" y="831.50"></text></g><g><title>AppKit`_NSSendEventToDequeuingObservers (2 samples, 0.02%)</title><rect x="43.4489%" y="949" width="0.0188%" height="15" fill="rgb(253,193,51)" fg:x="4626" fg:w="2"/><text x="43.6989%" y="959.50"></text></g><g><title>AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:untilDate:inMode:dequeue:] (4,583 samples, 43.04%)</title><rect x="0.4414%" y="965" width="43.0450%" height="15" fill="rgb(252,70,29)" fg:x="47" fg:w="4583"/><text x="0.6914%" y="975.50">AppKit`-[NSApplication(NSEventRouting) _nextEventMatchingEventMask:unt..</text></g><g><title>AppKit`_NS_SetBasicPasteTelemetry (2 samples, 0.02%)</title><rect x="43.4676%" y="949" width="0.0188%" height="15" fill="rgb(232,127,12)" fg:x="4628" fg:w="2"/><text x="43.7176%" y="959.50"></text></g><g><title>ostinato`winit::platform_impl::macos::event_handler::EventHandler::set (4,619 samples, 43.38%)</title><rect x="0.1597%" y="997" width="43.3831%" height="15" fill="rgb(211,180,21)" fg:x="17" fg:w="4619"/><text x="0.4097%" y="1007.50">ostinato`winit::platform_impl::macos::event_handler::EventHandler::set</text></g><g><title>AppKit`-[NSApplication run] (4,619 samples, 43.38%)</title><rect x="0.1597%" y="981" width="43.3831%" height="15" fill="rgb(229,72,13)" fg:x="17" fg:w="4619"/><text x="0.4097%" y="991.50">AppKit`-[NSApplication run]</text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="43.5240%" y="965" width="0.0188%" height="15" fill="rgb(240,211,49)" fg:x="4634" fg:w="2"/><text x="43.7740%" y="975.50"></text></g><g><title>AppKit`+[NSAppearance appearanceNamed:] (4 samples, 0.04%)</title><rect x="43.5522%" y="837" width="0.0376%" height="15" fill="rgb(219,149,40)" fg:x="4637" fg:w="4"/><text x="43.8022%" y="847.50"></text></g><g><title>AppKit`+[NSAppearance _darkAquaAppearance] (4 samples, 0.04%)</title><rect x="43.5522%" y="821" width="0.0376%" height="15" fill="rgb(210,127,46)" fg:x="4637" fg:w="4"/><text x="43.8022%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="43.5710%" y="805" width="0.0188%" height="15" fill="rgb(220,106,7)" fg:x="4639" fg:w="2"/><text x="43.8210%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="43.5710%" y="789" width="0.0188%" height="15" fill="rgb(249,31,22)" fg:x="4639" fg:w="2"/><text x="43.8210%" y="799.50"></text></g><g><title>AppKit`__33+[NSAppearance _initializeCoreUI]_block_invoke (2 samples, 0.02%)</title><rect x="43.5710%" y="773" width="0.0188%" height="15" fill="rgb(253,1,49)" fg:x="4639" fg:w="2"/><text x="43.8210%" y="783.50"></text></g><g><title>Foundation`_NSFaultInObject (2 samples, 0.02%)</title><rect x="43.5710%" y="757" width="0.0188%" height="15" fill="rgb(227,144,33)" fg:x="4639" fg:w="2"/><text x="43.8210%" y="767.50"></text></g><g><title>AppKit`-[NSBuiltinAppearance initWithBundleResourceName:publicName:catalystName:] (2 samples, 0.02%)</title><rect x="43.5710%" y="741" width="0.0188%" height="15" fill="rgb(249,163,44)" fg:x="4639" fg:w="2"/><text x="43.8210%" y="751.50"></text></g><g><title>AppKit`-[NSAppearance initWithAppearanceNamed:bundle:] (2 samples, 0.02%)</title><rect x="43.5710%" y="725" width="0.0188%" height="15" fill="rgb(234,15,39)" fg:x="4639" fg:w="2"/><text x="43.8210%" y="735.50"></text></g><g><title>AppKit`-[NSApplication(NSApplicationAppearance_Internal) _registerForAppearanceNotifications] (5 samples, 0.05%)</title><rect x="43.5522%" y="933" width="0.0470%" height="15" fill="rgb(207,66,16)" fg:x="4637" fg:w="5"/><text x="43.8022%" y="943.50"></text></g><g><title>AppKit`+[NSSystemAppearanceProxy systemProxy] (5 samples, 0.05%)</title><rect x="43.5522%" y="917" width="0.0470%" height="15" fill="rgb(233,112,24)" fg:x="4637" fg:w="5"/><text x="43.8022%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (5 samples, 0.05%)</title><rect x="43.5522%" y="901" width="0.0470%" height="15" fill="rgb(230,90,22)" fg:x="4637" fg:w="5"/><text x="43.8022%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.05%)</title><rect x="43.5522%" y="885" width="0.0470%" height="15" fill="rgb(229,61,13)" fg:x="4637" fg:w="5"/><text x="43.8022%" y="895.50"></text></g><g><title>AppKit`__38+[NSSystemAppearanceProxy systemProxy]_block_invoke (5 samples, 0.05%)</title><rect x="43.5522%" y="869" width="0.0470%" height="15" fill="rgb(225,57,24)" fg:x="4637" fg:w="5"/><text x="43.8022%" y="879.50"></text></g><g><title>AppKit`-[NSSystemAppearanceProxy init] (5 samples, 0.05%)</title><rect x="43.5522%" y="853" width="0.0470%" height="15" fill="rgb(208,169,48)" fg:x="4637" fg:w="5"/><text x="43.8022%" y="863.50"></text></g><g><title>AppKit`-[NSCGSDisplay initWithDisplayID:flipOffset:] (2 samples, 0.02%)</title><rect x="43.5991%" y="757" width="0.0188%" height="15" fill="rgb(244,218,51)" fg:x="4642" fg:w="2"/><text x="43.8491%" y="767.50"></text></g><g><title>AppKit`-[NSApplication(ScreenHandling) _registerForDisplayChangedNotifications] (3 samples, 0.03%)</title><rect x="43.5991%" y="933" width="0.0282%" height="15" fill="rgb(214,148,10)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.03%)</title><rect x="43.5991%" y="917" width="0.0282%" height="15" fill="rgb(225,174,27)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.03%)</title><rect x="43.5991%" y="901" width="0.0282%" height="15" fill="rgb(230,96,26)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="911.50"></text></g><g><title>AppKit`___NSScreenConfigurationEnsureInitialUpdateOccurred_block_invoke (3 samples, 0.03%)</title><rect x="43.5991%" y="885" width="0.0282%" height="15" fill="rgb(232,10,30)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="895.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateForReason (3 samples, 0.03%)</title><rect x="43.5991%" y="869" width="0.0282%" height="15" fill="rgb(222,8,50)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="879.50"></text></g><g><title>AppKit`_NSScreenConfigurationUpdateSharedInfoForReason (3 samples, 0.03%)</title><rect x="43.5991%" y="853" width="0.0282%" height="15" fill="rgb(213,81,27)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="863.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationGetCurrent (3 samples, 0.03%)</title><rect x="43.5991%" y="837" width="0.0282%" height="15" fill="rgb(245,50,10)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.03%)</title><rect x="43.5991%" y="821" width="0.0282%" height="15" fill="rgb(216,100,18)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.03%)</title><rect x="43.5991%" y="805" width="0.0282%" height="15" fill="rgb(236,147,54)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="815.50"></text></g><g><title>AppKit`_NSCGSDisplayConfigurationUpdate (3 samples, 0.03%)</title><rect x="43.5991%" y="789" width="0.0282%" height="15" fill="rgb(205,143,26)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="799.50"></text></g><g><title>AppKit`___NSCGSCreateDisplaysFromDisplayIDsUsingPredicate_block_invoke (3 samples, 0.03%)</title><rect x="43.5991%" y="773" width="0.0282%" height="15" fill="rgb(236,26,9)" fg:x="4642" fg:w="3"/><text x="43.8491%" y="783.50"></text></g><g><title>AppKit`_NSDPAccessorSelectorFromComponents (5 samples, 0.05%)</title><rect x="43.6367%" y="869" width="0.0470%" height="15" fill="rgb(221,165,53)" fg:x="4646" fg:w="5"/><text x="43.8867%" y="879.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (5 samples, 0.05%)</title><rect x="43.6367%" y="853" width="0.0470%" height="15" fill="rgb(214,110,17)" fg:x="4646" fg:w="5"/><text x="43.8867%" y="863.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (5 samples, 0.05%)</title><rect x="43.6367%" y="837" width="0.0470%" height="15" fill="rgb(237,197,12)" fg:x="4646" fg:w="5"/><text x="43.8867%" y="847.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (5 samples, 0.05%)</title><rect x="43.6367%" y="821" width="0.0470%" height="15" fill="rgb(205,84,17)" fg:x="4646" fg:w="5"/><text x="43.8867%" y="831.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (7 samples, 0.07%)</title><rect x="43.6837%" y="837" width="0.0657%" height="15" fill="rgb(237,18,45)" fg:x="4651" fg:w="7"/><text x="43.9337%" y="847.50"></text></g><g><title>AppKit`initializePropertyInfo (15 samples, 0.14%)</title><rect x="43.6273%" y="885" width="0.1409%" height="15" fill="rgb(221,87,14)" fg:x="4645" fg:w="15"/><text x="43.8773%" y="895.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (9 samples, 0.08%)</title><rect x="43.6837%" y="869" width="0.0845%" height="15" fill="rgb(238,186,15)" fg:x="4651" fg:w="9"/><text x="43.9337%" y="879.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (9 samples, 0.08%)</title><rect x="43.6837%" y="853" width="0.0845%" height="15" fill="rgb(208,115,11)" fg:x="4651" fg:w="9"/><text x="43.9337%" y="863.50"></text></g><g><title>dyld`strcmp (2 samples, 0.02%)</title><rect x="43.7494%" y="837" width="0.0188%" height="15" fill="rgb(254,175,0)" fg:x="4658" fg:w="2"/><text x="43.9994%" y="847.50"></text></g><g><title>libobjc.A.dylib`__sel_registerName(char const*, bool, bool) (2 samples, 0.02%)</title><rect x="43.7682%" y="853" width="0.0188%" height="15" fill="rgb(227,24,42)" fg:x="4660" fg:w="2"/><text x="44.0182%" y="863.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_get_objc_selector (2 samples, 0.02%)</title><rect x="43.7682%" y="837" width="0.0188%" height="15" fill="rgb(223,211,37)" fg:x="4660" fg:w="2"/><text x="44.0182%" y="847.50"></text></g><g><title>dyld`objc::StringHashTable::tryGetIndex (2 samples, 0.02%)</title><rect x="43.7682%" y="821" width="0.0188%" height="15" fill="rgb(235,49,27)" fg:x="4660" fg:w="2"/><text x="44.0182%" y="831.50"></text></g><g><title>AppKit`initializePropertyInfo (3 samples, 0.03%)</title><rect x="43.7682%" y="869" width="0.0282%" height="15" fill="rgb(254,97,51)" fg:x="4660" fg:w="3"/><text x="44.0182%" y="879.50"></text></g><g><title>AppKit`-[NSResponder init] (19 samples, 0.18%)</title><rect x="43.6273%" y="933" width="0.1785%" height="15" fill="rgb(249,51,40)" fg:x="4645" fg:w="19"/><text x="43.8773%" y="943.50"></text></g><g><title>AppKit`_NSDPClassInfoForClass (19 samples, 0.18%)</title><rect x="43.6273%" y="917" width="0.1785%" height="15" fill="rgb(210,128,45)" fg:x="4645" fg:w="19"/><text x="43.8773%" y="927.50"></text></g><g><title>AppKit`lockedClassInfoForClass (19 samples, 0.18%)</title><rect x="43.6273%" y="901" width="0.1785%" height="15" fill="rgb(224,137,50)" fg:x="4645" fg:w="19"/><text x="43.8773%" y="911.50"></text></g><g><title>AppKit`lockedClassInfoForClass (4 samples, 0.04%)</title><rect x="43.7682%" y="885" width="0.0376%" height="15" fill="rgb(242,15,9)" fg:x="4660" fg:w="4"/><text x="44.0182%" y="895.50"></text></g><g><title>AppKit`0x00000001909c0e50 (3 samples, 0.03%)</title><rect x="43.8058%" y="933" width="0.0282%" height="15" fill="rgb(233,187,41)" fg:x="4664" fg:w="3"/><text x="44.0558%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (3 samples, 0.03%)</title><rect x="43.8058%" y="917" width="0.0282%" height="15" fill="rgb(227,2,29)" fg:x="4664" fg:w="3"/><text x="44.0558%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.03%)</title><rect x="43.8058%" y="901" width="0.0282%" height="15" fill="rgb(222,70,3)" fg:x="4664" fg:w="3"/><text x="44.0558%" y="911.50"></text></g><g><title>AppKit`0x00000001909c0ddc (3 samples, 0.03%)</title><rect x="43.8058%" y="885" width="0.0282%" height="15" fill="rgb(213,11,42)" fg:x="4664" fg:w="3"/><text x="44.0558%" y="895.50"></text></g><g><title>AppKit`0x00000001909c0ef8 (3 samples, 0.03%)</title><rect x="43.8058%" y="869" width="0.0282%" height="15" fill="rgb(225,150,9)" fg:x="4664" fg:w="3"/><text x="44.0558%" y="879.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance activeOrUserMenuBar] (3 samples, 0.03%)</title><rect x="43.8339%" y="901" width="0.0282%" height="15" fill="rgb(230,162,45)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="911.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance activeMenuBar] (3 samples, 0.03%)</title><rect x="43.8339%" y="885" width="0.0282%" height="15" fill="rgb(222,14,52)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="895.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _userSpaceMenuBar] (3 samples, 0.03%)</title><rect x="43.8339%" y="869" width="0.0282%" height="15" fill="rgb(254,198,14)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="879.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter addObserver:selector:name:object:] (3 samples, 0.03%)</title><rect x="43.8339%" y="853" width="0.0282%" height="15" fill="rgb(220,217,30)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="863.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter _addOrRemoveObserver:forName:isAdding:] (3 samples, 0.03%)</title><rect x="43.8339%" y="837" width="0.0282%" height="15" fill="rgb(215,146,41)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="847.50"></text></g><g><title>AppKit`-[NSWorkspaceNotificationCenter _createSubsystemIfNecessary:] (3 samples, 0.03%)</title><rect x="43.8339%" y="821" width="0.0282%" height="15" fill="rgb(217,27,36)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="831.50"></text></g><g><title>AppKit`createActiveDisplaySubsystem (3 samples, 0.03%)</title><rect x="43.8339%" y="805" width="0.0282%" height="15" fill="rgb(219,218,39)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="815.50"></text></g><g><title>SkyLight`SLSMainConnectionID (3 samples, 0.03%)</title><rect x="43.8339%" y="789" width="0.0282%" height="15" fill="rgb(219,4,42)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="799.50"></text></g><g><title>SkyLight`SLSMainConnection (3 samples, 0.03%)</title><rect x="43.8339%" y="773" width="0.0282%" height="15" fill="rgb(249,119,36)" fg:x="4667" fg:w="3"/><text x="44.0839%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (2 samples, 0.02%)</title><rect x="43.8433%" y="757" width="0.0188%" height="15" fill="rgb(209,23,33)" fg:x="4668" fg:w="2"/><text x="44.0933%" y="767.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2 samples, 0.02%)</title><rect x="43.8433%" y="741" width="0.0188%" height="15" fill="rgb(211,10,0)" fg:x="4668" fg:w="2"/><text x="44.0933%" y="751.50"></text></g><g><title>SkyLight`__SLSInitialize_block_invoke (2 samples, 0.02%)</title><rect x="43.8433%" y="725" width="0.0188%" height="15" fill="rgb(208,99,37)" fg:x="4668" fg:w="2"/><text x="44.0933%" y="735.50"></text></g><g><title>Foundation`+[NSXPCInterface interfaceWithProtocol:] (4 samples, 0.04%)</title><rect x="43.8715%" y="645" width="0.0376%" height="15" fill="rgb(213,132,31)" fg:x="4671" fg:w="4"/><text x="44.1215%" y="655.50"></text></g><g><title>Foundation`-[NSXPCInterface setProtocol:] (4 samples, 0.04%)</title><rect x="43.8715%" y="629" width="0.0376%" height="15" fill="rgb(243,129,40)" fg:x="4671" fg:w="4"/><text x="44.1215%" y="639.50"></text></g><g><title>Foundation`setProtocolMetadata (4 samples, 0.04%)</title><rect x="43.8715%" y="613" width="0.0376%" height="15" fill="rgb(210,66,33)" fg:x="4671" fg:w="4"/><text x="44.1215%" y="623.50"></text></g><g><title>Foundation`setProtocolMetdataWithMethods (3 samples, 0.03%)</title><rect x="43.8809%" y="597" width="0.0282%" height="15" fill="rgb(209,189,4)" fg:x="4672" fg:w="3"/><text x="44.1309%" y="607.50"></text></g><g><title>LaunchServices`_LSRegisterSelf (5 samples, 0.05%)</title><rect x="43.8715%" y="805" width="0.0470%" height="15" fill="rgb(214,107,37)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="815.50"></text></g><g><title>LaunchServices`+[_LSDService XPCProxyWithErrorHandler:] (5 samples, 0.05%)</title><rect x="43.8715%" y="789" width="0.0470%" height="15" fill="rgb(245,88,54)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="799.50"></text></g><g><title>LaunchServices`_LSDServiceGetXPCProxyForServiceClass (5 samples, 0.05%)</title><rect x="43.8715%" y="773" width="0.0470%" height="15" fill="rgb(205,146,20)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="783.50"></text></g><g><title>LaunchServices`_LSDServiceGetXPCConnection (5 samples, 0.05%)</title><rect x="43.8715%" y="757" width="0.0470%" height="15" fill="rgb(220,161,25)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="767.50"></text></g><g><title>LaunchServices`LaunchServices::_LSLazyLoadObjectForKeyWithLock(NSMutableDictionary*, objc_object*, LaunchServices::unfair_lock_mutex&amp;, objc_object*  (5 samples, 0.05%)</title><rect x="43.8715%" y="741" width="0.0470%" height="15" fill="rgb(215,152,15)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="751.50"></text></g><g><title>LaunchServices`___LSDServiceGetXPCConnection_block_invoke_2 (5 samples, 0.05%)</title><rect x="43.8715%" y="725" width="0.0470%" height="15" fill="rgb(233,192,44)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="735.50"></text></g><g><title>LaunchServices`+[_LSDModifyService XPCInterface] (5 samples, 0.05%)</title><rect x="43.8715%" y="709" width="0.0470%" height="15" fill="rgb(240,170,46)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="719.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (5 samples, 0.05%)</title><rect x="43.8715%" y="693" width="0.0470%" height="15" fill="rgb(207,104,33)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="703.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (5 samples, 0.05%)</title><rect x="43.8715%" y="677" width="0.0470%" height="15" fill="rgb(219,21,39)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="687.50"></text></g><g><title>LaunchServices`__33+[_LSDModifyService XPCInterface]_block_invoke (5 samples, 0.05%)</title><rect x="43.8715%" y="661" width="0.0470%" height="15" fill="rgb(214,133,29)" fg:x="4671" fg:w="5"/><text x="44.1215%" y="671.50"></text></g><g><title>AppKit`+[NSMenuBarPresentationInstance _isMenuBarVisible] (11 samples, 0.10%)</title><rect x="43.8339%" y="917" width="0.1033%" height="15" fill="rgb(226,93,6)" fg:x="4667" fg:w="11"/><text x="44.0839%" y="927.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _isVisible] (8 samples, 0.08%)</title><rect x="43.8621%" y="901" width="0.0751%" height="15" fill="rgb(252,222,34)" fg:x="4670" fg:w="8"/><text x="44.1121%" y="911.50"></text></g><g><title>AppKit`_NSGetAggregateUIMode (8 samples, 0.08%)</title><rect x="43.8621%" y="885" width="0.0751%" height="15" fill="rgb(252,92,48)" fg:x="4670" fg:w="8"/><text x="44.1121%" y="895.50"></text></g><g><title>AppKit`-[NSMenuBarPresentationInstance _getAggregateUIMode:withOptions:] (8 samples, 0.08%)</title><rect x="43.8621%" y="869" width="0.0751%" height="15" fill="rgb(245,223,24)" fg:x="4670" fg:w="8"/><text x="44.1121%" y="879.50"></text></g><g><title>HIServices`GetCurrentProcess (8 samples, 0.08%)</title><rect x="43.8621%" y="853" width="0.0751%" height="15" fill="rgb(205,176,3)" fg:x="4670" fg:w="8"/><text x="44.1121%" y="863.50"></text></g><g><title>HIServices`_RegisterApplication (8 samples, 0.08%)</title><rect x="43.8621%" y="837" width="0.0751%" height="15" fill="rgb(235,151,15)" fg:x="4670" fg:w="8"/><text x="44.1121%" y="847.50"></text></g><g><title>LaunchServices`_LSApplicationCheckIn (8 samples, 0.08%)</title><rect x="43.8621%" y="821" width="0.0751%" height="15" fill="rgb(237,209,11)" fg:x="4670" fg:w="8"/><text x="44.1121%" y="831.50"></text></g><g><title>AppKit`_NSInitializeAppContext (13 samples, 0.12%)</title><rect x="43.8339%" y="933" width="0.1221%" height="15" fill="rgb(243,227,24)" fg:x="4667" fg:w="13"/><text x="44.0839%" y="943.50"></text></g><g><title>HIToolbox`GetApplicationEventTarget (2 samples, 0.02%)</title><rect x="43.9373%" y="917" width="0.0188%" height="15" fill="rgb(239,193,16)" fg:x="4678" fg:w="2"/><text x="44.1873%" y="927.50"></text></g><g><title>HIToolbox`HIApplication::GetApplication (2 samples, 0.02%)</title><rect x="43.9373%" y="901" width="0.0188%" height="15" fill="rgb(231,27,9)" fg:x="4678" fg:w="2"/><text x="44.1873%" y="911.50"></text></g><g><title>AppKit`+[NSApplication sharedApplication] (45 samples, 0.42%)</title><rect x="43.5428%" y="965" width="0.4227%" height="15" fill="rgb(219,169,10)" fg:x="4636" fg:w="45"/><text x="43.7928%" y="975.50"></text></g><g><title>AppKit`-[NSApplication init] (45 samples, 0.42%)</title><rect x="43.5428%" y="949" width="0.4227%" height="15" fill="rgb(244,229,43)" fg:x="4636" fg:w="45"/><text x="43.7928%" y="959.50"></text></g><g><title>ostinato`objc2_app_kit::generated::__NSApplication::NSApplication::sharedApplication (47 samples, 0.44%)</title><rect x="43.5428%" y="981" width="0.4414%" height="15" fill="rgb(254,38,20)" fg:x="4636" fg:w="47"/><text x="43.7928%" y="991.50"></text></g><g><title>libobjc.A.dylib`_objc_msgSend_uncached (2 samples, 0.02%)</title><rect x="43.9654%" y="965" width="0.0188%" height="15" fill="rgb(250,47,30)" fg:x="4681" fg:w="2"/><text x="44.2154%" y="975.50"></text></g><g><title>libobjc.A.dylib`lookUpImpOrForward (2 samples, 0.02%)</title><rect x="43.9654%" y="949" width="0.0188%" height="15" fill="rgb(224,124,36)" fg:x="4681" fg:w="2"/><text x="44.2154%" y="959.50"></text></g><g><title>libobjc.A.dylib`initializeAndMaybeRelock(objc_class*, objc_object*, locker_mixin&lt;lockdebug::lock_mixin (2 samples, 0.02%)</title><rect x="43.9654%" y="933" width="0.0188%" height="15" fill="rgb(246,68,51)" fg:x="4681" fg:w="2"/><text x="44.2154%" y="943.50"></text></g><g><title>libobjc.A.dylib`initializeNonMetaClass (2 samples, 0.02%)</title><rect x="43.9654%" y="917" width="0.0188%" height="15" fill="rgb(253,43,49)" fg:x="4681" fg:w="2"/><text x="44.2154%" y="927.50"></text></g><g><title>libobjc.A.dylib`CALLING_SOME_+initialize_METHOD (2 samples, 0.02%)</title><rect x="43.9654%" y="901" width="0.0188%" height="15" fill="rgb(219,54,36)" fg:x="4681" fg:w="2"/><text x="44.2154%" y="911.50"></text></g><g><title>AppKit`+[NSApplication initialize] (2 samples, 0.02%)</title><rect x="43.9654%" y="885" width="0.0188%" height="15" fill="rgb(227,133,34)" fg:x="4681" fg:w="2"/><text x="44.2154%" y="895.50"></text></g><g><title>AppKit`+[NSApplication _initializeRegisteredDefaults] (2 samples, 0.02%)</title><rect x="43.9654%" y="869" width="0.0188%" height="15" fill="rgb(247,227,15)" fg:x="4681" fg:w="2"/><text x="44.2154%" y="879.50"></text></g><g><title>dyld`start (4,684 samples, 43.99%)</title><rect x="0.0000%" y="1109" width="43.9936%" height="15" fill="rgb(229,96,14)" fg:x="0" fg:w="4684"/><text x="0.2500%" y="1119.50">dyld`start</text></g><g><title>ostinato`main (4,682 samples, 43.97%)</title><rect x="0.0188%" y="1093" width="43.9748%" height="15" fill="rgb(220,79,17)" fg:x="2" fg:w="4682"/><text x="0.2688%" y="1103.50">ostinato`main</text></g><g><title>ostinato`std::rt::lang_start_internal (4,682 samples, 43.97%)</title><rect x="0.0188%" y="1077" width="43.9748%" height="15" fill="rgb(205,131,53)" fg:x="2" fg:w="4682"/><text x="0.2688%" y="1087.50">ostinato`std::rt::lang_start_internal</text></g><g><title>ostinato`std::rt::lang_start::_{{closure}} (4,682 samples, 43.97%)</title><rect x="0.0188%" y="1061" width="43.9748%" height="15" fill="rgb(209,50,29)" fg:x="2" fg:w="4682"/><text x="0.2688%" y="1071.50">ostinato`std::rt::lang_start::_{{closure}}</text></g><g><title>ostinato`std::sys::backtrace::__rust_begin_short_backtrace (4,682 samples, 43.97%)</title><rect x="0.0188%" y="1045" width="43.9748%" height="15" fill="rgb(245,86,46)" fg:x="2" fg:w="4682"/><text x="0.2688%" y="1055.50">ostinato`std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>ostinato`ostinato::main (4,682 samples, 43.97%)</title><rect x="0.0188%" y="1029" width="43.9748%" height="15" fill="rgb(235,66,46)" fg:x="2" fg:w="4682"/><text x="0.2688%" y="1039.50">ostinato`ostinato::main</text></g><g><title>ostinato`ostinato::run (4,682 samples, 43.97%)</title><rect x="0.0188%" y="1013" width="43.9748%" height="15" fill="rgb(232,148,31)" fg:x="2" fg:w="4682"/><text x="0.2688%" y="1023.50">ostinato`ostinato::run</text></g><g><title>ostinato`winit::platform_impl::macos::event_loop::EventLoop&lt;T&gt;::new (48 samples, 0.45%)</title><rect x="43.5428%" y="997" width="0.4508%" height="15" fill="rgb(217,149,8)" fg:x="4636" fg:w="48"/><text x="43.7928%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (16 samples, 0.15%)</title><rect x="43.9936%" y="1109" width="0.1503%" height="15" fill="rgb(209,183,11)" fg:x="4684" fg:w="16"/><text x="44.2436%" y="1119.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (3 samples, 0.03%)</title><rect x="44.1439%" y="1109" width="0.0282%" height="15" fill="rgb(208,55,20)" fg:x="4700" fg:w="3"/><text x="44.3939%" y="1119.50"></text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (6 samples, 0.06%)</title><rect x="45.2428%" y="1093" width="0.0564%" height="15" fill="rgb(218,39,14)" fg:x="4817" fg:w="6"/><text x="45.4928%" y="1103.50"></text></g><g><title>libsystem_kernel.dylib`__workq_kernreturn (1,372 samples, 12.89%)</title><rect x="45.2991%" y="1093" width="12.8863%" height="15" fill="rgb(216,169,33)" fg:x="4823" fg:w="1372"/><text x="45.5491%" y="1103.50">libsystem_kernel.dy..</text></g><g><title>libsystem_pthread.dylib`DYLD-STUB$$__workq_kernreturn (2 samples, 0.02%)</title><rect x="58.1854%" y="1093" width="0.0188%" height="15" fill="rgb(233,80,24)" fg:x="6195" fg:w="2"/><text x="58.4354%" y="1103.50"></text></g><g><title>libdispatch.dylib`_dispatch_worker_thread2 (3 samples, 0.03%)</title><rect x="58.2512%" y="1077" width="0.0282%" height="15" fill="rgb(213,179,31)" fg:x="6202" fg:w="3"/><text x="58.5012%" y="1087.50"></text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain (3 samples, 0.03%)</title><rect x="58.2512%" y="1061" width="0.0282%" height="15" fill="rgb(209,19,5)" fg:x="6202" fg:w="3"/><text x="58.5012%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.03%)</title><rect x="58.2512%" y="1045" width="0.0282%" height="15" fill="rgb(219,18,35)" fg:x="6202" fg:w="3"/><text x="58.5012%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (3 samples, 0.03%)</title><rect x="58.2512%" y="1029" width="0.0282%" height="15" fill="rgb(209,169,16)" fg:x="6202" fg:w="3"/><text x="58.5012%" y="1039.50"></text></g><g><title>UIIntelligenceSupport`0x000000025a2c5188 (3 samples, 0.03%)</title><rect x="58.2512%" y="1013" width="0.0282%" height="15" fill="rgb(245,90,51)" fg:x="6202" fg:w="3"/><text x="58.5012%" y="1023.50"></text></g><g><title>UIIntelligenceSupport`0x000000025a2b8614 (3 samples, 0.03%)</title><rect x="58.2512%" y="997" width="0.0282%" height="15" fill="rgb(220,99,45)" fg:x="6202" fg:w="3"/><text x="58.5012%" y="1007.50"></text></g><g><title>UIIntelligenceSupport`0x000000025a2bb9bc (3 samples, 0.03%)</title><rect x="58.2512%" y="981" width="0.0282%" height="15" fill="rgb(249,89,25)" fg:x="6202" fg:w="3"/><text x="58.5012%" y="991.50"></text></g><g><title>UIIntelligenceSupport`0x000000025a2b91c4 (3 samples, 0.03%)</title><rect x="58.2512%" y="965" width="0.0282%" height="15" fill="rgb(239,193,0)" fg:x="6202" fg:w="3"/><text x="58.5012%" y="975.50"></text></g><g><title>libswiftXPC.dylib`dispatch thunk of XPCSession.send&lt;A&gt;(_:) (2 samples, 0.02%)</title><rect x="58.2605%" y="949" width="0.0188%" height="15" fill="rgb(231,126,1)" fg:x="6203" fg:w="2"/><text x="58.5105%" y="959.50"></text></g><g><title>libswiftXPC.dylib`XPCSession.send&lt;A&gt;(_:) (2 samples, 0.02%)</title><rect x="58.2605%" y="933" width="0.0188%" height="15" fill="rgb(243,166,3)" fg:x="6203" fg:w="2"/><text x="58.5105%" y="943.50"></text></g><g><title>libswiftXPC.dylib`static XPCReceivedMessage.encodeMessage&lt;A&gt;(_:isSync:) (2 samples, 0.02%)</title><rect x="58.2605%" y="917" width="0.0188%" height="15" fill="rgb(223,22,34)" fg:x="6203" fg:w="2"/><text x="58.5105%" y="927.50"></text></g><g><title>libswiftXPC.dylib`XPCEncoder.encode&lt;A&gt;(_:) (2 samples, 0.02%)</title><rect x="58.2605%" y="901" width="0.0188%" height="15" fill="rgb(251,52,51)" fg:x="6203" fg:w="2"/><text x="58.5105%" y="911.50"></text></g><g><title>libswiftXPC.dylib`static XPCEncoder.encode&lt;A&gt;(_:withCodingMetadata:) (2 samples, 0.02%)</title><rect x="58.2605%" y="885" width="0.0188%" height="15" fill="rgb(221,165,28)" fg:x="6203" fg:w="2"/><text x="58.5105%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_merge (5 samples, 0.05%)</title><rect x="58.5517%" y="1045" width="0.0470%" height="15" fill="rgb(218,121,47)" fg:x="6234" fg:w="5"/><text x="58.8017%" y="1055.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (4 samples, 0.04%)</title><rect x="58.6644%" y="997" width="0.0376%" height="15" fill="rgb(209,120,9)" fg:x="6246" fg:w="4"/><text x="58.9144%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (3 samples, 0.03%)</title><rect x="58.6738%" y="981" width="0.0282%" height="15" fill="rgb(236,68,12)" fg:x="6247" fg:w="3"/><text x="58.9238%" y="991.50"></text></g><g><title>libdispatch.dylib`_os_object_alloc_realized (8 samples, 0.08%)</title><rect x="58.6550%" y="1013" width="0.0751%" height="15" fill="rgb(225,194,26)" fg:x="6245" fg:w="8"/><text x="58.9050%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`malloc_type_calloc (3 samples, 0.03%)</title><rect x="58.7020%" y="997" width="0.0282%" height="15" fill="rgb(231,84,39)" fg:x="6250" fg:w="3"/><text x="58.9520%" y="1007.50"></text></g><g><title>libdispatch.dylib`dispatch_mach_msg_create (11 samples, 0.10%)</title><rect x="58.6456%" y="1029" width="0.1033%" height="15" fill="rgb(210,11,45)" fg:x="6244" fg:w="11"/><text x="58.8956%" y="1039.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (2 samples, 0.02%)</title><rect x="58.7302%" y="1013" width="0.0188%" height="15" fill="rgb(224,54,52)" fg:x="6253" fg:w="2"/><text x="58.9802%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_merge_msg (16 samples, 0.15%)</title><rect x="58.6081%" y="1045" width="0.1503%" height="15" fill="rgb(238,102,14)" fg:x="6240" fg:w="16"/><text x="58.8581%" y="1055.50"></text></g><g><title>libdispatch.dylib`_voucher_create_with_mach_msgv (2 samples, 0.02%)</title><rect x="58.7583%" y="1045" width="0.0188%" height="15" fill="rgb(243,160,52)" fg:x="6256" fg:w="2"/><text x="59.0083%" y="1055.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_merge (30 samples, 0.28%)</title><rect x="58.5047%" y="1061" width="0.2818%" height="15" fill="rgb(216,114,19)" fg:x="6229" fg:w="30"/><text x="58.7547%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_drain (5 samples, 0.05%)</title><rect x="58.7865%" y="1061" width="0.0470%" height="15" fill="rgb(244,166,37)" fg:x="6259" fg:w="5"/><text x="59.0365%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_kevent_workloop_poke_drain (2 samples, 0.02%)</title><rect x="58.8523%" y="1061" width="0.0188%" height="15" fill="rgb(246,29,44)" fg:x="6266" fg:w="2"/><text x="59.1023%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (3 samples, 0.03%)</title><rect x="58.8710%" y="1061" width="0.0282%" height="15" fill="rgb(215,56,53)" fg:x="6268" fg:w="3"/><text x="59.1210%" y="1071.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_leave_deferred (5 samples, 0.05%)</title><rect x="58.9556%" y="1045" width="0.0470%" height="15" fill="rgb(217,60,2)" fg:x="6277" fg:w="5"/><text x="59.2056%" y="1055.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (2 samples, 0.02%)</title><rect x="59.3970%" y="1013" width="0.0188%" height="15" fill="rgb(207,26,24)" fg:x="6324" fg:w="2"/><text x="59.6470%" y="1023.50"></text></g><g><title>FramePacing`__55 (7 samples, 0.07%)</title><rect x="59.4252%" y="997" width="0.0657%" height="15" fill="rgb(252,210,15)" fg:x="6327" fg:w="7"/><text x="59.6752%" y="1007.50"></text></g><g><title>CoreFoundation`-[__NSArrayM count] (2 samples, 0.02%)</title><rect x="59.5097%" y="981" width="0.0188%" height="15" fill="rgb(253,209,26)" fg:x="6336" fg:w="2"/><text x="59.7597%" y="991.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (2 samples, 0.02%)</title><rect x="59.6318%" y="965" width="0.0188%" height="15" fill="rgb(238,170,14)" fg:x="6349" fg:w="2"/><text x="59.8818%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderSet initWithObjects:count:] (2 samples, 0.02%)</title><rect x="59.6788%" y="917" width="0.0188%" height="15" fill="rgb(216,178,15)" fg:x="6354" fg:w="2"/><text x="59.9288%" y="927.50"></text></g><g><title>CoreFoundation`-[NSSet initWithArray:range:copyItems:] (4 samples, 0.04%)</title><rect x="59.6694%" y="933" width="0.0376%" height="15" fill="rgb(250,197,2)" fg:x="6353" fg:w="4"/><text x="59.9194%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderSet initWithObjects:count:] (2 samples, 0.02%)</title><rect x="59.7070%" y="933" width="0.0188%" height="15" fill="rgb(212,70,42)" fg:x="6357" fg:w="2"/><text x="59.9570%" y="943.50"></text></g><g><title>CoreFoundation`+[NSSet setWithArray:range:copyItems:] (10 samples, 0.09%)</title><rect x="59.6600%" y="949" width="0.0939%" height="15" fill="rgb(227,213,9)" fg:x="6352" fg:w="10"/><text x="59.9100%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="59.7351%" y="933" width="0.0188%" height="15" fill="rgb(245,99,25)" fg:x="6360" fg:w="2"/><text x="59.9851%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (3 samples, 0.03%)</title><rect x="59.7633%" y="949" width="0.0282%" height="15" fill="rgb(250,82,29)" fg:x="6363" fg:w="3"/><text x="60.0133%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="59.8009%" y="949" width="0.0188%" height="15" fill="rgb(241,226,54)" fg:x="6367" fg:w="2"/><text x="60.0509%" y="959.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInRange:inArray:range:] (19 samples, 0.18%)</title><rect x="59.6506%" y="965" width="0.1785%" height="15" fill="rgb(221,99,41)" fg:x="6351" fg:w="19"/><text x="59.9006%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSArrayM countByEnumeratingWithState:objects:count:] (2 samples, 0.02%)</title><rect x="59.8291%" y="965" width="0.0188%" height="15" fill="rgb(213,90,21)" fg:x="6370" fg:w="2"/><text x="60.0791%" y="975.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (83 samples, 0.78%)</title><rect x="59.8854%" y="901" width="0.7796%" height="15" fill="rgb(205,208,24)" fg:x="6376" fg:w="83"/><text x="60.1354%" y="911.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (85 samples, 0.80%)</title><rect x="59.8760%" y="917" width="0.7983%" height="15" fill="rgb(246,31,12)" fg:x="6375" fg:w="85"/><text x="60.1260%" y="927.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (91 samples, 0.85%)</title><rect x="59.8572%" y="933" width="0.8547%" height="15" fill="rgb(213,154,6)" fg:x="6373" fg:w="91"/><text x="60.1072%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_storeWeak (2 samples, 0.02%)</title><rect x="60.6932%" y="917" width="0.0188%" height="15" fill="rgb(222,163,29)" fg:x="6462" fg:w="2"/><text x="60.9432%" y="927.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.04%)</title><rect x="60.7119%" y="933" width="0.0376%" height="15" fill="rgb(227,201,8)" fg:x="6464" fg:w="4"/><text x="60.9619%" y="943.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (97 samples, 0.91%)</title><rect x="59.8478%" y="949" width="0.9111%" height="15" fill="rgb(233,9,32)" fg:x="6372" fg:w="97"/><text x="60.0978%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSArrayM dealloc] (99 samples, 0.93%)</title><rect x="59.8478%" y="965" width="0.9298%" height="15" fill="rgb(217,54,24)" fg:x="6372" fg:w="99"/><text x="60.0978%" y="975.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (2 samples, 0.02%)</title><rect x="60.7589%" y="949" width="0.0188%" height="15" fill="rgb(235,192,0)" fg:x="6469" fg:w="2"/><text x="61.0089%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (5 samples, 0.05%)</title><rect x="60.7777%" y="965" width="0.0470%" height="15" fill="rgb(235,45,9)" fg:x="6471" fg:w="5"/><text x="61.0277%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.05%)</title><rect x="60.7777%" y="949" width="0.0470%" height="15" fill="rgb(246,42,40)" fg:x="6471" fg:w="5"/><text x="61.0277%" y="959.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (2 samples, 0.02%)</title><rect x="60.8340%" y="917" width="0.0188%" height="15" fill="rgb(248,111,24)" fg:x="6477" fg:w="2"/><text x="61.0840%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSSingleObjectSetI dealloc] (3 samples, 0.03%)</title><rect x="60.8340%" y="933" width="0.0282%" height="15" fill="rgb(249,65,22)" fg:x="6477" fg:w="3"/><text x="61.0840%" y="943.50"></text></g><g><title>CoreFoundation`_CFAutoreleasePoolPop (4 samples, 0.04%)</title><rect x="60.8340%" y="965" width="0.0376%" height="15" fill="rgb(238,111,51)" fg:x="6477" fg:w="4"/><text x="61.0840%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (4 samples, 0.04%)</title><rect x="60.8340%" y="949" width="0.0376%" height="15" fill="rgb(250,118,22)" fg:x="6477" fg:w="4"/><text x="61.0840%" y="959.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (5 samples, 0.05%)</title><rect x="60.8716%" y="965" width="0.0470%" height="15" fill="rgb(234,84,26)" fg:x="6481" fg:w="5"/><text x="61.1216%" y="975.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (5 samples, 0.05%)</title><rect x="60.8716%" y="949" width="0.0470%" height="15" fill="rgb(243,172,12)" fg:x="6481" fg:w="5"/><text x="61.1216%" y="959.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (5 samples, 0.05%)</title><rect x="60.8716%" y="933" width="0.0470%" height="15" fill="rgb(236,150,49)" fg:x="6481" fg:w="5"/><text x="61.1216%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (5 samples, 0.05%)</title><rect x="60.8716%" y="917" width="0.0470%" height="15" fill="rgb(225,197,26)" fg:x="6481" fg:w="5"/><text x="61.1216%" y="927.50"></text></g><g><title>CoreFoundation`objc_msgSend$setWithArray:range:copyItems: (3 samples, 0.03%)</title><rect x="60.9280%" y="965" width="0.0282%" height="15" fill="rgb(214,17,42)" fg:x="6487" fg:w="3"/><text x="61.1780%" y="975.50"></text></g><g><title>FramePacing` (2 samples, 0.02%)</title><rect x="60.9655%" y="965" width="0.0188%" height="15" fill="rgb(224,165,40)" fg:x="6491" fg:w="2"/><text x="61.2155%" y="975.50"></text></g><g><title>FramePacing`FPDrawableLifetimeMarkFinished (3 samples, 0.03%)</title><rect x="60.9843%" y="965" width="0.0282%" height="15" fill="rgb(246,100,4)" fg:x="6493" fg:w="3"/><text x="61.2343%" y="975.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (2 samples, 0.02%)</title><rect x="61.0501%" y="901" width="0.0188%" height="15" fill="rgb(222,103,0)" fg:x="6500" fg:w="2"/><text x="61.3001%" y="911.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (7 samples, 0.07%)</title><rect x="61.0688%" y="901" width="0.0657%" height="15" fill="rgb(227,189,26)" fg:x="6502" fg:w="7"/><text x="61.3188%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (4 samples, 0.04%)</title><rect x="61.0970%" y="885" width="0.0376%" height="15" fill="rgb(214,202,17)" fg:x="6505" fg:w="4"/><text x="61.3470%" y="895.50"></text></g><g><title>Foundation`+[NSNumber numberWithDouble:] (13 samples, 0.12%)</title><rect x="61.0219%" y="949" width="0.1221%" height="15" fill="rgb(229,111,3)" fg:x="6497" fg:w="13"/><text x="61.2719%" y="959.50"></text></g><g><title>Foundation`-[NSPlaceholderNumber initWithDouble:] (10 samples, 0.09%)</title><rect x="61.0501%" y="933" width="0.0939%" height="15" fill="rgb(229,172,15)" fg:x="6500" fg:w="10"/><text x="61.3001%" y="943.50"></text></g><g><title>CoreFoundation`CFNumberCreate (10 samples, 0.09%)</title><rect x="61.0501%" y="917" width="0.0939%" height="15" fill="rgb(230,224,35)" fg:x="6500" fg:w="10"/><text x="61.3001%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (22 samples, 0.21%)</title><rect x="61.1628%" y="917" width="0.2066%" height="15" fill="rgb(251,141,6)" fg:x="6512" fg:w="22"/><text x="61.4128%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (21 samples, 0.20%)</title><rect x="61.1722%" y="901" width="0.1972%" height="15" fill="rgb(225,208,6)" fg:x="6513" fg:w="21"/><text x="61.4222%" y="911.50"></text></g><g><title>FramePacing`DYLD-STUB$$_Block_object_assign (2 samples, 0.02%)</title><rect x="61.3694%" y="869" width="0.0188%" height="15" fill="rgb(246,181,16)" fg:x="6534" fg:w="2"/><text x="61.6194%" y="879.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (2 samples, 0.02%)</title><rect x="61.3882%" y="869" width="0.0188%" height="15" fill="rgb(227,129,36)" fg:x="6536" fg:w="2"/><text x="61.6382%" y="879.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (5 samples, 0.05%)</title><rect x="61.4070%" y="869" width="0.0470%" height="15" fill="rgb(248,117,24)" fg:x="6538" fg:w="5"/><text x="61.6570%" y="879.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (5 samples, 0.05%)</title><rect x="61.4070%" y="853" width="0.0470%" height="15" fill="rgb(214,185,35)" fg:x="6538" fg:w="5"/><text x="61.6570%" y="863.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (5 samples, 0.05%)</title><rect x="61.4070%" y="837" width="0.0470%" height="15" fill="rgb(236,150,34)" fg:x="6538" fg:w="5"/><text x="61.6570%" y="847.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.04%)</title><rect x="61.4164%" y="821" width="0.0376%" height="15" fill="rgb(243,228,27)" fg:x="6539" fg:w="4"/><text x="61.6664%" y="831.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (10 samples, 0.09%)</title><rect x="61.3694%" y="885" width="0.0939%" height="15" fill="rgb(245,77,44)" fg:x="6534" fg:w="10"/><text x="61.6194%" y="895.50"></text></g><g><title>libdispatch.dylib`dispatch_async (11 samples, 0.10%)</title><rect x="61.3694%" y="917" width="0.1033%" height="15" fill="rgb(235,214,42)" fg:x="6534" fg:w="11"/><text x="61.6194%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (11 samples, 0.10%)</title><rect x="61.3694%" y="901" width="0.1033%" height="15" fill="rgb(221,74,3)" fg:x="6534" fg:w="11"/><text x="61.6194%" y="911.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (41 samples, 0.39%)</title><rect x="61.1628%" y="933" width="0.3851%" height="15" fill="rgb(206,121,29)" fg:x="6512" fg:w="41"/><text x="61.4128%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (8 samples, 0.08%)</title><rect x="61.4727%" y="917" width="0.0751%" height="15" fill="rgb(249,131,53)" fg:x="6545" fg:w="8"/><text x="61.7227%" y="927.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="61.5760%" y="933" width="0.0282%" height="15" fill="rgb(236,170,29)" fg:x="6556" fg:w="3"/><text x="61.8260%" y="943.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:] (49 samples, 0.46%)</title><rect x="61.1628%" y="949" width="0.4602%" height="15" fill="rgb(247,96,15)" fg:x="6512" fg:w="49"/><text x="61.4128%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.02%)</title><rect x="61.6042%" y="933" width="0.0188%" height="15" fill="rgb(211,210,7)" fg:x="6559" fg:w="2"/><text x="61.8542%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (7 samples, 0.07%)</title><rect x="61.6230%" y="949" width="0.0657%" height="15" fill="rgb(240,88,50)" fg:x="6561" fg:w="7"/><text x="61.8730%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (7 samples, 0.07%)</title><rect x="61.6230%" y="933" width="0.0657%" height="15" fill="rgb(209,229,26)" fg:x="6561" fg:w="7"/><text x="61.8730%" y="943.50"></text></g><g><title>libobjc.A.dylib`cache_getImp (2 samples, 0.02%)</title><rect x="61.6700%" y="917" width="0.0188%" height="15" fill="rgb(210,68,23)" fg:x="6566" fg:w="2"/><text x="61.9200%" y="927.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="61.6887%" y="949" width="0.0282%" height="15" fill="rgb(229,180,13)" fg:x="6568" fg:w="3"/><text x="61.9387%" y="959.50"></text></g><g><title>QuartzCore`mark_drawable_finish(CAMetalDrawable*, _CAMetalLayerPrivate*, bool, double) (75 samples, 0.70%)</title><rect x="61.0219%" y="965" width="0.7044%" height="15" fill="rgb(236,53,44)" fg:x="6497" fg:w="75"/><text x="61.2719%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (4 samples, 0.04%)</title><rect x="61.7451%" y="965" width="0.0376%" height="15" fill="rgb(244,214,29)" fg:x="6574" fg:w="4"/><text x="61.9951%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (16 samples, 0.15%)</title><rect x="61.7827%" y="965" width="0.1503%" height="15" fill="rgb(220,75,29)" fg:x="6578" fg:w="16"/><text x="62.0327%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (2 samples, 0.02%)</title><rect x="61.9329%" y="965" width="0.0188%" height="15" fill="rgb(214,183,37)" fg:x="6594" fg:w="2"/><text x="62.1829%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_good_size (2 samples, 0.02%)</title><rect x="61.9517%" y="965" width="0.0188%" height="15" fill="rgb(239,117,29)" fg:x="6596" fg:w="2"/><text x="62.2017%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`malloc_good_size (2 samples, 0.02%)</title><rect x="61.9705%" y="965" width="0.0188%" height="15" fill="rgb(237,171,35)" fg:x="6598" fg:w="2"/><text x="62.2205%" y="975.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (10 samples, 0.09%)</title><rect x="61.9893%" y="965" width="0.0939%" height="15" fill="rgb(229,178,53)" fg:x="6600" fg:w="10"/><text x="62.2393%" y="975.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (10 samples, 0.09%)</title><rect x="61.9893%" y="949" width="0.0939%" height="15" fill="rgb(210,102,19)" fg:x="6600" fg:w="10"/><text x="62.2393%" y="959.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (9 samples, 0.08%)</title><rect x="61.9987%" y="933" width="0.0845%" height="15" fill="rgb(235,127,22)" fg:x="6601" fg:w="9"/><text x="62.2487%" y="943.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (8 samples, 0.08%)</title><rect x="62.0081%" y="917" width="0.0751%" height="15" fill="rgb(244,31,31)" fg:x="6602" fg:w="8"/><text x="62.2581%" y="927.50"></text></g><g><title>libdispatch.dylib`firehose_buffer_tracepoint_reserve_slow (2 samples, 0.02%)</title><rect x="62.0644%" y="901" width="0.0188%" height="15" fill="rgb(231,43,21)" fg:x="6608" fg:w="2"/><text x="62.3144%" y="911.50"></text></g><g><title>libdispatch.dylib`firehose_drain_notifications_once (2 samples, 0.02%)</title><rect x="62.0644%" y="885" width="0.0188%" height="15" fill="rgb(217,131,35)" fg:x="6608" fg:w="2"/><text x="62.3144%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.02%)</title><rect x="62.0644%" y="869" width="0.0188%" height="15" fill="rgb(221,149,4)" fg:x="6608" fg:w="2"/><text x="62.3144%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.02%)</title><rect x="62.0644%" y="853" width="0.0188%" height="15" fill="rgb(232,170,28)" fg:x="6608" fg:w="2"/><text x="62.3144%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="62.0644%" y="837" width="0.0188%" height="15" fill="rgb(238,56,10)" fg:x="6608" fg:w="2"/><text x="62.3144%" y="847.50"></text></g><g><title>QuartzCore`layer_presented(_CAImageQueue*, unsigned int, double, double, double, void*) (269 samples, 2.53%)</title><rect x="59.5755%" y="981" width="2.5265%" height="15" fill="rgb(235,196,14)" fg:x="6343" fg:w="269"/><text x="59.8255%" y="991.50">Qu..</text></g><g><title>libsystem_trace.dylib`os_signpost_enabled (2 samples, 0.02%)</title><rect x="62.0832%" y="965" width="0.0188%" height="15" fill="rgb(216,45,48)" fg:x="6610" fg:w="2"/><text x="62.3332%" y="975.50"></text></g><g><title>QuartzCore`objc_msgSend$removeObjectsInArray: (2 samples, 0.02%)</title><rect x="62.1020%" y="981" width="0.0188%" height="15" fill="rgb(238,213,17)" fg:x="6612" fg:w="2"/><text x="62.3520%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (14 samples, 0.13%)</title><rect x="62.1396%" y="981" width="0.1315%" height="15" fill="rgb(212,13,2)" fg:x="6616" fg:w="14"/><text x="62.3896%" y="991.50"></text></g><g><title>QuartzCore`invoke_presented_callback(void*) (298 samples, 2.80%)</title><rect x="59.4909%" y="997" width="2.7989%" height="15" fill="rgb(240,114,20)" fg:x="6334" fg:w="298"/><text x="59.7409%" y="1007.50">Qu..</text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (2 samples, 0.02%)</title><rect x="62.2711%" y="981" width="0.0188%" height="15" fill="rgb(228,41,40)" fg:x="6630" fg:w="2"/><text x="62.5211%" y="991.50"></text></g><g><title>Foundation`-[NSXPCEncoder _encodeInvocationObjectArgumentsOnly:count:typeString:selector:isReply:into:] (2 samples, 0.02%)</title><rect x="62.2992%" y="853" width="0.0188%" height="15" fill="rgb(244,132,35)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="863.50"></text></g><g><title>Foundation`_NSXPCSerializationAddInvocationWithOnlyObjectArgumentsArray (2 samples, 0.02%)</title><rect x="62.2992%" y="837" width="0.0188%" height="15" fill="rgb(253,189,4)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="847.50"></text></g><g><title>Foundation`-[NSXPCEncoder _encodeObject:] (2 samples, 0.02%)</title><rect x="62.2992%" y="821" width="0.0188%" height="15" fill="rgb(224,37,19)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="831.50"></text></g><g><title>Foundation`-[NSXPCEncoder _encodeObject:] (2 samples, 0.02%)</title><rect x="62.2992%" y="805" width="0.0188%" height="15" fill="rgb(235,223,18)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="815.50"></text></g><g><title>Foundation`-[NSArray(NSArray) encodeWithCoder:] (2 samples, 0.02%)</title><rect x="62.2992%" y="789" width="0.0188%" height="15" fill="rgb(235,163,25)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="799.50"></text></g><g><title>Foundation`-[NSXPCEncoder _encodeArrayOfObjects:forKey:] (2 samples, 0.02%)</title><rect x="62.2992%" y="773" width="0.0188%" height="15" fill="rgb(217,145,28)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="783.50"></text></g><g><title>Foundation`-[NSXPCEncoder _encodeObject:] (2 samples, 0.02%)</title><rect x="62.2992%" y="757" width="0.0188%" height="15" fill="rgb(223,223,32)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="767.50"></text></g><g><title>WindowManagement`-[WMXPCWindowTransactionAction encodeWithCoder:] (2 samples, 0.02%)</title><rect x="62.2992%" y="741" width="0.0188%" height="15" fill="rgb(227,189,39)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="751.50"></text></g><g><title>Foundation`-[NSXPCEncoder _encodeObject:] (2 samples, 0.02%)</title><rect x="62.2992%" y="725" width="0.0188%" height="15" fill="rgb(248,10,22)" fg:x="6633" fg:w="2"/><text x="62.5492%" y="735.50"></text></g><g><title>AppKit`-[NSWMWindowCoordinator _sendCompletedTransactions] (3 samples, 0.03%)</title><rect x="62.2992%" y="981" width="0.0282%" height="15" fill="rgb(248,46,39)" fg:x="6633" fg:w="3"/><text x="62.5492%" y="991.50"></text></g><g><title>WindowManagement`-[WMClientWindowManager sendWindowTransaction:] (3 samples, 0.03%)</title><rect x="62.2992%" y="965" width="0.0282%" height="15" fill="rgb(248,113,48)" fg:x="6633" fg:w="3"/><text x="62.5492%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_barrier_sync_invoke_and_complete (3 samples, 0.03%)</title><rect x="62.2992%" y="949" width="0.0282%" height="15" fill="rgb(245,16,25)" fg:x="6633" fg:w="3"/><text x="62.5492%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (3 samples, 0.03%)</title><rect x="62.2992%" y="933" width="0.0282%" height="15" fill="rgb(249,152,16)" fg:x="6633" fg:w="3"/><text x="62.5492%" y="943.50"></text></g><g><title>WindowManagement`-[WMClientWindowManager _performXPCTransaction:] (3 samples, 0.03%)</title><rect x="62.2992%" y="917" width="0.0282%" height="15" fill="rgb(250,16,1)" fg:x="6633" fg:w="3"/><text x="62.5492%" y="927.50"></text></g><g><title>Foundation`_NSXPCDistantObjectSimpleMessageSend1 (3 samples, 0.03%)</title><rect x="62.2992%" y="901" width="0.0282%" height="15" fill="rgb(249,138,3)" fg:x="6633" fg:w="3"/><text x="62.5492%" y="911.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendSelector:withProxy:arg1:] (3 samples, 0.03%)</title><rect x="62.2992%" y="885" width="0.0282%" height="15" fill="rgb(227,71,41)" fg:x="6633" fg:w="3"/><text x="62.5492%" y="895.50"></text></g><g><title>Foundation`-[NSXPCConnection _sendInvocation:orArguments:count:methodSignature:selector:withProxy:] (3 samples, 0.03%)</title><rect x="62.2992%" y="869" width="0.0282%" height="15" fill="rgb(209,184,23)" fg:x="6633" fg:w="3"/><text x="62.5492%" y="879.50"></text></g><g><title>AppKit`__35-[NSDockConnection startConnection]_block_invoke.13 (7 samples, 0.07%)</title><rect x="62.3274%" y="981" width="0.0657%" height="15" fill="rgb(223,215,31)" fg:x="6636" fg:w="7"/><text x="62.5774%" y="991.50"></text></g><g><title>AppKit`-[NSDockConnection _makeConnectionIfNeededWithRetryInterval:onDemand:] (7 samples, 0.07%)</title><rect x="62.3274%" y="965" width="0.0657%" height="15" fill="rgb(210,146,28)" fg:x="6636" fg:w="7"/><text x="62.5774%" y="975.50"></text></g><g><title>SkyLight`SLSessionCopyCurrentDictionary (7 samples, 0.07%)</title><rect x="62.3274%" y="949" width="0.0657%" height="15" fill="rgb(209,183,41)" fg:x="6636" fg:w="7"/><text x="62.5774%" y="959.50"></text></g><g><title>SkyLight`SLSCopyCurrentSessionPropertiesInternalBridge (7 samples, 0.07%)</title><rect x="62.3274%" y="933" width="0.0657%" height="15" fill="rgb(209,224,45)" fg:x="6636" fg:w="7"/><text x="62.5774%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_once_callout (6 samples, 0.06%)</title><rect x="62.3368%" y="917" width="0.0564%" height="15" fill="rgb(224,209,51)" fg:x="6637" fg:w="6"/><text x="62.5868%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (6 samples, 0.06%)</title><rect x="62.3368%" y="901" width="0.0564%" height="15" fill="rgb(223,17,39)" fg:x="6637" fg:w="6"/><text x="62.5868%" y="911.50"></text></g><g><title>SkyLight`__loginframework_vtable_block_invoke (6 samples, 0.06%)</title><rect x="62.3368%" y="885" width="0.0564%" height="15" fill="rgb(234,204,37)" fg:x="6637" fg:w="6"/><text x="62.5868%" y="895.50"></text></g><g><title>dyld`dyld4::APIs::dlsym (6 samples, 0.06%)</title><rect x="62.3368%" y="869" width="0.0564%" height="15" fill="rgb(236,120,5)" fg:x="6637" fg:w="6"/><text x="62.5868%" y="879.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.06%)</title><rect x="62.3368%" y="853" width="0.0564%" height="15" fill="rgb(248,97,27)" fg:x="6637" fg:w="6"/><text x="62.5868%" y="863.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.06%)</title><rect x="62.3368%" y="837" width="0.0564%" height="15" fill="rgb(240,66,17)" fg:x="6637" fg:w="6"/><text x="62.5868%" y="847.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (6 samples, 0.06%)</title><rect x="62.3368%" y="821" width="0.0564%" height="15" fill="rgb(210,79,3)" fg:x="6637" fg:w="6"/><text x="62.5868%" y="831.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (5 samples, 0.05%)</title><rect x="62.3462%" y="805" width="0.0470%" height="15" fill="rgb(214,176,27)" fg:x="6638" fg:w="5"/><text x="62.5962%" y="815.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (5 samples, 0.05%)</title><rect x="62.3462%" y="789" width="0.0470%" height="15" fill="rgb(235,185,3)" fg:x="6638" fg:w="5"/><text x="62.5962%" y="799.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (4 samples, 0.04%)</title><rect x="62.3556%" y="773" width="0.0376%" height="15" fill="rgb(227,24,12)" fg:x="6639" fg:w="4"/><text x="62.6056%" y="783.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (3 samples, 0.03%)</title><rect x="62.3650%" y="757" width="0.0282%" height="15" fill="rgb(252,169,48)" fg:x="6640" fg:w="3"/><text x="62.6150%" y="767.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (3 samples, 0.03%)</title><rect x="62.3650%" y="741" width="0.0282%" height="15" fill="rgb(212,65,1)" fg:x="6640" fg:w="3"/><text x="62.6150%" y="751.50"></text></g><g><title>dyld`dyld4::Loader::hasExportedSymbol(Diagnostics&amp;, dyld4::RuntimeState&amp;, char const*, dyld4::Loader::ExportedSymbolMode, dyld4::Loader::ResolverMode, dyld4::Loader::ResolvedSymbol*, dyld3::Array (2 samples, 0.02%)</title><rect x="62.3744%" y="725" width="0.0188%" height="15" fill="rgb(242,39,24)" fg:x="6641" fg:w="2"/><text x="62.6244%" y="735.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber doubleValue] (2 samples, 0.02%)</title><rect x="62.4683%" y="965" width="0.0188%" height="15" fill="rgb(249,32,23)" fg:x="6651" fg:w="2"/><text x="62.7183%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM removeObjectForKey:] (2 samples, 0.02%)</title><rect x="62.4871%" y="965" width="0.0188%" height="15" fill="rgb(251,195,23)" fg:x="6653" fg:w="2"/><text x="62.7371%" y="975.50"></text></g><g><title>Foundation` (3 samples, 0.03%)</title><rect x="62.5247%" y="965" width="0.0282%" height="15" fill="rgb(236,174,8)" fg:x="6657" fg:w="3"/><text x="62.7747%" y="975.50"></text></g><g><title>CoreFoundation`_CFNonObjCHash (2 samples, 0.02%)</title><rect x="62.6280%" y="933" width="0.0188%" height="15" fill="rgb(220,197,8)" fg:x="6668" fg:w="2"/><text x="62.8780%" y="943.50"></text></g><g><title>CoreFoundation`__CFNumberHash (10 samples, 0.09%)</title><rect x="62.6561%" y="933" width="0.0939%" height="15" fill="rgb(240,108,37)" fg:x="6671" fg:w="10"/><text x="62.9061%" y="943.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (8 samples, 0.08%)</title><rect x="62.6749%" y="917" width="0.0751%" height="15" fill="rgb(232,176,24)" fg:x="6673" fg:w="8"/><text x="62.9249%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (21 samples, 0.20%)</title><rect x="62.5904%" y="949" width="0.1972%" height="15" fill="rgb(243,35,29)" fg:x="6664" fg:w="21"/><text x="62.8404%" y="959.50"></text></g><g><title>libsystem_m.dylib`fmod (4 samples, 0.04%)</title><rect x="62.7501%" y="933" width="0.0376%" height="15" fill="rgb(210,37,18)" fg:x="6681" fg:w="4"/><text x="63.0001%" y="943.50"></text></g><g><title>Foundation`+[NSNumber numberWithUnsignedLongLong:] (5 samples, 0.05%)</title><rect x="62.7876%" y="949" width="0.0470%" height="15" fill="rgb(224,184,40)" fg:x="6685" fg:w="5"/><text x="63.0376%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="62.8346%" y="949" width="0.0282%" height="15" fill="rgb(236,39,29)" fg:x="6690" fg:w="3"/><text x="63.0846%" y="959.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _layerStateForAddress:] (39 samples, 0.37%)</title><rect x="62.5622%" y="965" width="0.3663%" height="15" fill="rgb(232,48,39)" fg:x="6661" fg:w="39"/><text x="62.8122%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (7 samples, 0.07%)</title><rect x="62.8628%" y="949" width="0.0657%" height="15" fill="rgb(236,34,42)" fg:x="6693" fg:w="7"/><text x="63.1128%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (3 samples, 0.03%)</title><rect x="62.9473%" y="949" width="0.0282%" height="15" fill="rgb(243,106,37)" fg:x="6702" fg:w="3"/><text x="63.1973%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM setObject:forKeyedSubscript:] (5 samples, 0.05%)</title><rect x="62.9755%" y="949" width="0.0470%" height="15" fill="rgb(218,96,6)" fg:x="6705" fg:w="5"/><text x="63.2255%" y="959.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (3 samples, 0.03%)</title><rect x="63.0224%" y="949" width="0.0282%" height="15" fill="rgb(235,130,12)" fg:x="6710" fg:w="3"/><text x="63.2724%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (3 samples, 0.03%)</title><rect x="63.0224%" y="933" width="0.0282%" height="15" fill="rgb(231,95,0)" fg:x="6710" fg:w="3"/><text x="63.2724%" y="943.50"></text></g><g><title>FramePacing`__100+[FPCAMetalLayerState drawableLifetimeStart:drawableID:surfaceID:acquisitionWaitStart:acquiredTime:]_block_invoke (14 samples, 0.13%)</title><rect x="62.9285%" y="965" width="0.1315%" height="15" fill="rgb(228,12,23)" fg:x="6700" fg:w="14"/><text x="63.1785%" y="975.50"></text></g><g><title>CoreFoundation`_CFCreateArrayStorage (2 samples, 0.02%)</title><rect x="63.2009%" y="933" width="0.0188%" height="15" fill="rgb(216,12,1)" fg:x="6729" fg:w="2"/><text x="63.4509%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="63.2009%" y="917" width="0.0188%" height="15" fill="rgb(219,59,3)" fg:x="6729" fg:w="2"/><text x="63.4509%" y="927.50"></text></g><g><title>CoreFoundation`__NSArrayI_transferNew (3 samples, 0.03%)</title><rect x="63.2291%" y="933" width="0.0282%" height="15" fill="rgb(215,208,46)" fg:x="6732" fg:w="3"/><text x="63.4791%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_autorelease (2 samples, 0.02%)</title><rect x="63.2573%" y="933" width="0.0188%" height="15" fill="rgb(254,224,29)" fg:x="6735" fg:w="2"/><text x="63.5073%" y="943.50"></text></g><g><title>CoreFoundation`-[NSDictionary allValues] (13 samples, 0.12%)</title><rect x="63.1727%" y="949" width="0.1221%" height="15" fill="rgb(232,14,29)" fg:x="6726" fg:w="13"/><text x="63.4227%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (3 samples, 0.03%)</title><rect x="63.3418%" y="933" width="0.0282%" height="15" fill="rgb(208,45,52)" fg:x="6744" fg:w="3"/><text x="63.5918%" y="943.50"></text></g><g><title>CoreFoundation`__CFSimpleMergeSort (2 samples, 0.02%)</title><rect x="63.3794%" y="901" width="0.0188%" height="15" fill="rgb(234,191,28)" fg:x="6748" fg:w="2"/><text x="63.6294%" y="911.50"></text></g><g><title>CoreFoundation`CFSortIndexes (5 samples, 0.05%)</title><rect x="63.3700%" y="933" width="0.0470%" height="15" fill="rgb(244,67,43)" fg:x="6747" fg:w="5"/><text x="63.6200%" y="943.50"></text></g><g><title>CoreFoundation`__CFSimpleMergeSort (4 samples, 0.04%)</title><rect x="63.3794%" y="917" width="0.0376%" height="15" fill="rgb(236,189,24)" fg:x="6748" fg:w="4"/><text x="63.6294%" y="927.50"></text></g><g><title>FramePacing`___accumulatedGPUTime_block_invoke (2 samples, 0.02%)</title><rect x="63.3981%" y="901" width="0.0188%" height="15" fill="rgb(239,214,33)" fg:x="6750" fg:w="2"/><text x="63.6481%" y="911.50"></text></g><g><title>CoreFoundation`-[NSMutableArray sortRange:options:usingComparator:] (15 samples, 0.14%)</title><rect x="63.2948%" y="949" width="0.1409%" height="15" fill="rgb(226,176,41)" fg:x="6739" fg:w="15"/><text x="63.5448%" y="959.50"></text></g><g><title>CoreFoundation`__CFSimpleMergeSort (2 samples, 0.02%)</title><rect x="63.4169%" y="933" width="0.0188%" height="15" fill="rgb(248,47,8)" fg:x="6752" fg:w="2"/><text x="63.6669%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSArrayM _mutate] (3 samples, 0.03%)</title><rect x="63.4545%" y="949" width="0.0282%" height="15" fill="rgb(218,81,44)" fg:x="6756" fg:w="3"/><text x="63.7045%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (4 samples, 0.04%)</title><rect x="63.5108%" y="933" width="0.0376%" height="15" fill="rgb(213,98,6)" fg:x="6762" fg:w="4"/><text x="63.7608%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (6 samples, 0.06%)</title><rect x="63.5015%" y="949" width="0.0564%" height="15" fill="rgb(222,85,22)" fg:x="6761" fg:w="6"/><text x="63.7515%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber unsignedLongLongValue] (5 samples, 0.05%)</title><rect x="63.5672%" y="949" width="0.0470%" height="15" fill="rgb(239,46,39)" fg:x="6768" fg:w="5"/><text x="63.8172%" y="959.50"></text></g><g><title>CoreFoundation`CFNumberGetValue (5 samples, 0.05%)</title><rect x="63.5672%" y="933" width="0.0470%" height="15" fill="rgb(237,12,29)" fg:x="6768" fg:w="5"/><text x="63.8172%" y="943.50"></text></g><g><title>CoreFoundation`__CFNumberGetValueCompat (4 samples, 0.04%)</title><rect x="63.5766%" y="917" width="0.0376%" height="15" fill="rgb(214,77,8)" fg:x="6769" fg:w="4"/><text x="63.8266%" y="927.50"></text></g><g><title>libobjc.A.dylib`class_createInstance (3 samples, 0.03%)</title><rect x="63.6517%" y="917" width="0.0282%" height="15" fill="rgb(217,168,37)" fg:x="6777" fg:w="3"/><text x="63.9017%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (3 samples, 0.03%)</title><rect x="63.6517%" y="901" width="0.0282%" height="15" fill="rgb(221,217,23)" fg:x="6777" fg:w="3"/><text x="63.9017%" y="911.50"></text></g><g><title>CoreFoundation`__NSArrayM_new (4 samples, 0.04%)</title><rect x="63.6517%" y="949" width="0.0376%" height="15" fill="rgb(243,229,36)" fg:x="6777" fg:w="4"/><text x="63.9017%" y="959.50"></text></g><g><title>CoreFoundation`__CFAllocateObject (4 samples, 0.04%)</title><rect x="63.6517%" y="933" width="0.0376%" height="15" fill="rgb(251,163,40)" fg:x="6777" fg:w="4"/><text x="63.9017%" y="943.50"></text></g><g><title>CoreFoundation`mdict_removeObjectForKey (3 samples, 0.03%)</title><rect x="63.6987%" y="949" width="0.0282%" height="15" fill="rgb(237,222,12)" fg:x="6782" fg:w="3"/><text x="63.9487%" y="959.50"></text></g><g><title>CoreFoundation`objc_msgSend$getObjects:andKeys:count: (2 samples, 0.02%)</title><rect x="63.7269%" y="949" width="0.0188%" height="15" fill="rgb(248,132,6)" fg:x="6785" fg:w="2"/><text x="63.9769%" y="959.50"></text></g><g><title>CoreFoundation`_CFGetTSDCreateIfNeeded (4 samples, 0.04%)</title><rect x="63.7926%" y="885" width="0.0376%" height="15" fill="rgb(227,167,50)" fg:x="6792" fg:w="4"/><text x="64.0426%" y="895.50"></text></g><g><title>Foundation`+[NSNumber numberWithDouble:] (11 samples, 0.10%)</title><rect x="63.7550%" y="933" width="0.1033%" height="15" fill="rgb(242,84,37)" fg:x="6788" fg:w="11"/><text x="64.0050%" y="943.50"></text></g><g><title>Foundation`-[NSPlaceholderNumber initWithDouble:] (10 samples, 0.09%)</title><rect x="63.7644%" y="917" width="0.0939%" height="15" fill="rgb(212,4,50)" fg:x="6789" fg:w="10"/><text x="64.0144%" y="927.50"></text></g><g><title>CoreFoundation`CFNumberCreate (10 samples, 0.09%)</title><rect x="63.7644%" y="901" width="0.0939%" height="15" fill="rgb(230,228,32)" fg:x="6789" fg:w="10"/><text x="64.0144%" y="911.50"></text></g><g><title>CoreFoundation`_CFRuntimeCreateInstance (3 samples, 0.03%)</title><rect x="63.8302%" y="885" width="0.0282%" height="15" fill="rgb(248,217,23)" fg:x="6796" fg:w="3"/><text x="64.0802%" y="895.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAutorelease (2 samples, 0.02%)</title><rect x="63.8584%" y="933" width="0.0188%" height="15" fill="rgb(238,197,32)" fg:x="6799" fg:w="2"/><text x="64.1084%" y="943.50"></text></g><g><title>FramePacing`-[FPCAMetalLayerState previousPresentedLifetimeEnd] (16 samples, 0.15%)</title><rect x="63.7457%" y="949" width="0.1503%" height="15" fill="rgb(236,106,1)" fg:x="6787" fg:w="16"/><text x="63.9957%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_storeStrong (2 samples, 0.02%)</title><rect x="63.9053%" y="901" width="0.0188%" height="15" fill="rgb(219,228,13)" fg:x="6804" fg:w="2"/><text x="64.1553%" y="911.50"></text></g><g><title>FramePacing`-[FPInFlightCommandBuffer dealloc] (5 samples, 0.05%)</title><rect x="63.9241%" y="853" width="0.0470%" height="15" fill="rgb(238,30,35)" fg:x="6806" fg:w="5"/><text x="64.1741%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (4 samples, 0.04%)</title><rect x="63.9335%" y="837" width="0.0376%" height="15" fill="rgb(236,70,23)" fg:x="6807" fg:w="4"/><text x="64.1835%" y="847.50"></text></g><g><title>CoreFoundation`__RELEASE_OBJECTS_IN_THE_ARRAY__ (6 samples, 0.06%)</title><rect x="63.9241%" y="869" width="0.0564%" height="15" fill="rgb(249,104,48)" fg:x="6806" fg:w="6"/><text x="64.1741%" y="879.50"></text></g><g><title>FramePacing`-[FPInFlightCommandBuffer dealloc] (2 samples, 0.02%)</title><rect x="63.9805%" y="869" width="0.0188%" height="15" fill="rgb(254,117,50)" fg:x="6812" fg:w="2"/><text x="64.2305%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="63.9992%" y="869" width="0.0282%" height="15" fill="rgb(223,152,4)" fg:x="6814" fg:w="3"/><text x="64.2492%" y="879.50"></text></g><g><title>CoreFoundation`-[__NSFrozenArrayM dealloc] (12 samples, 0.11%)</title><rect x="63.9241%" y="885" width="0.1127%" height="15" fill="rgb(245,6,2)" fg:x="6806" fg:w="12"/><text x="64.1741%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (16 samples, 0.15%)</title><rect x="63.9053%" y="917" width="0.1503%" height="15" fill="rgb(249,150,24)" fg:x="6804" fg:w="16"/><text x="64.1553%" y="927.50"></text></g><g><title>libobjc.A.dylib`object_cxxDestructFromClass(objc_object*, objc_class*) (14 samples, 0.13%)</title><rect x="63.9241%" y="901" width="0.1315%" height="15" fill="rgb(228,185,42)" fg:x="6806" fg:w="14"/><text x="64.1741%" y="911.50"></text></g><g><title>FramePacing`-[FPInFlightDrawableLifetime dealloc] (17 samples, 0.16%)</title><rect x="63.9053%" y="949" width="0.1597%" height="15" fill="rgb(226,39,33)" fg:x="6804" fg:w="17"/><text x="64.1553%" y="959.50"></text></g><g><title>libobjc.A.dylib`_objc_rootDealloc (17 samples, 0.16%)</title><rect x="63.9053%" y="933" width="0.1597%" height="15" fill="rgb(221,166,19)" fg:x="6804" fg:w="17"/><text x="64.1553%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (13 samples, 0.12%)</title><rect x="64.0838%" y="949" width="0.1221%" height="15" fill="rgb(209,109,2)" fg:x="6823" fg:w="13"/><text x="64.3338%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_retain (3 samples, 0.03%)</title><rect x="64.2247%" y="949" width="0.0282%" height="15" fill="rgb(252,216,26)" fg:x="6838" fg:w="3"/><text x="64.4747%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`malloc_good_size (3 samples, 0.03%)</title><rect x="64.2528%" y="949" width="0.0282%" height="15" fill="rgb(227,173,36)" fg:x="6841" fg:w="3"/><text x="64.5028%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="64.2810%" y="949" width="0.0188%" height="15" fill="rgb(209,90,7)" fg:x="6844" fg:w="2"/><text x="64.5310%" y="959.50"></text></g><g><title>FramePacing`__142+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:]_block_invoke (135 samples, 1.27%)</title><rect x="63.0600%" y="965" width="1.2680%" height="15" fill="rgb(250,194,11)" fg:x="6714" fg:w="135"/><text x="63.3100%" y="975.50"></text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (3 samples, 0.03%)</title><rect x="64.2998%" y="949" width="0.0282%" height="15" fill="rgb(220,72,50)" fg:x="6846" fg:w="3"/><text x="64.5498%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber compare:] (2 samples, 0.02%)</title><rect x="64.3749%" y="917" width="0.0188%" height="15" fill="rgb(222,106,48)" fg:x="6854" fg:w="2"/><text x="64.6249%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber isEqualToNumber:] (3 samples, 0.03%)</title><rect x="64.3749%" y="933" width="0.0282%" height="15" fill="rgb(216,220,45)" fg:x="6854" fg:w="3"/><text x="64.6249%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (5 samples, 0.05%)</title><rect x="64.3749%" y="949" width="0.0470%" height="15" fill="rgb(234,112,18)" fg:x="6854" fg:w="5"/><text x="64.6249%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM setObject:forKeyedSubscript:] (2 samples, 0.02%)</title><rect x="64.4219%" y="949" width="0.0188%" height="15" fill="rgb(206,179,9)" fg:x="6859" fg:w="2"/><text x="64.6719%" y="959.50"></text></g><g><title>CoreFoundation`_cow_create (3 samples, 0.03%)</title><rect x="64.4876%" y="933" width="0.0282%" height="15" fill="rgb(215,115,40)" fg:x="6866" fg:w="3"/><text x="64.7376%" y="943.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (3 samples, 0.03%)</title><rect x="64.4876%" y="917" width="0.0282%" height="15" fill="rgb(222,69,34)" fg:x="6866" fg:w="3"/><text x="64.7376%" y="927.50"></text></g><g><title>CoreFoundation`cow_copy_instance (3 samples, 0.03%)</title><rect x="64.5158%" y="933" width="0.0282%" height="15" fill="rgb(209,161,10)" fg:x="6869" fg:w="3"/><text x="64.7658%" y="943.50"></text></g><g><title>CoreFoundation`__NSArrayM_copy (11 samples, 0.10%)</title><rect x="64.4595%" y="949" width="0.1033%" height="15" fill="rgb(217,6,38)" fg:x="6863" fg:w="11"/><text x="64.7095%" y="959.50"></text></g><g><title>CoreFoundation`mdict_removeObjectForKey (2 samples, 0.02%)</title><rect x="64.5628%" y="949" width="0.0188%" height="15" fill="rgb(229,229,48)" fg:x="6874" fg:w="2"/><text x="64.8128%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.02%)</title><rect x="64.5910%" y="949" width="0.0188%" height="15" fill="rgb(225,21,28)" fg:x="6877" fg:w="2"/><text x="64.8410%" y="959.50"></text></g><g><title>FramePacing`__65+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:]_block_invoke (33 samples, 0.31%)</title><rect x="64.3280%" y="965" width="0.3099%" height="15" fill="rgb(206,33,13)" fg:x="6849" fg:w="33"/><text x="64.5780%" y="975.50"></text></g><g><title>FramePacing`objc_msgSend$sortUsingComparator: (2 samples, 0.02%)</title><rect x="64.6473%" y="965" width="0.0188%" height="15" fill="rgb(242,178,17)" fg:x="6883" fg:w="2"/><text x="64.8973%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_alloc_init (2 samples, 0.02%)</title><rect x="64.6849%" y="965" width="0.0188%" height="15" fill="rgb(220,162,5)" fg:x="6887" fg:w="2"/><text x="64.9349%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleaseReturnValue (2 samples, 0.02%)</title><rect x="64.7037%" y="965" width="0.0188%" height="15" fill="rgb(210,33,43)" fg:x="6889" fg:w="2"/><text x="64.9537%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (34 samples, 0.32%)</title><rect x="64.7225%" y="965" width="0.3193%" height="15" fill="rgb(216,116,54)" fg:x="6891" fg:w="34"/><text x="64.9725%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (7 samples, 0.07%)</title><rect x="65.0418%" y="965" width="0.0657%" height="15" fill="rgb(249,92,24)" fg:x="6925" fg:w="7"/><text x="65.2918%" y="975.50"></text></g><g><title>FramePacing`__47+[FPCAMetalLayerState _updateLayerState:block:]_block_invoke (296 samples, 2.78%)</title><rect x="62.4307%" y="981" width="2.7801%" height="15" fill="rgb(231,189,14)" fg:x="6647" fg:w="296"/><text x="62.6807%" y="991.50">Fr..</text></g><g><title>libobjc.A.dylib`objc_retain (11 samples, 0.10%)</title><rect x="65.1075%" y="965" width="0.1033%" height="15" fill="rgb(230,8,41)" fg:x="6932" fg:w="11"/><text x="65.3575%" y="975.50"></text></g><g><title>CoreFoundation`__CFNumberHash (13 samples, 0.12%)</title><rect x="65.3611%" y="933" width="0.1221%" height="15" fill="rgb(249,7,27)" fg:x="6959" fg:w="13"/><text x="65.6111%" y="943.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (10 samples, 0.09%)</title><rect x="65.3893%" y="917" width="0.0939%" height="15" fill="rgb(232,86,5)" fg:x="6962" fg:w="10"/><text x="65.6393%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (27 samples, 0.25%)</title><rect x="65.2578%" y="949" width="0.2536%" height="15" fill="rgb(224,175,18)" fg:x="6948" fg:w="27"/><text x="65.5078%" y="959.50"></text></g><g><title>libsystem_m.dylib`fmod (3 samples, 0.03%)</title><rect x="65.4832%" y="933" width="0.0282%" height="15" fill="rgb(220,129,12)" fg:x="6972" fg:w="3"/><text x="65.7332%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="65.5396%" y="949" width="0.0188%" height="15" fill="rgb(210,19,36)" fg:x="6978" fg:w="2"/><text x="65.7896%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (5 samples, 0.05%)</title><rect x="65.5584%" y="949" width="0.0470%" height="15" fill="rgb(219,96,14)" fg:x="6980" fg:w="5"/><text x="65.8084%" y="959.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _commandBufferForAddress:] (38 samples, 0.36%)</title><rect x="65.2578%" y="965" width="0.3569%" height="15" fill="rgb(249,106,1)" fg:x="6948" fg:w="38"/><text x="65.5078%" y="975.50"></text></g><g><title>FramePacing`DYLD-STUB$$objc_opt_self (2 samples, 0.02%)</title><rect x="65.6147%" y="965" width="0.0188%" height="15" fill="rgb(249,155,20)" fg:x="6986" fg:w="2"/><text x="65.8647%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (8 samples, 0.08%)</title><rect x="65.6523%" y="949" width="0.0751%" height="15" fill="rgb(244,168,9)" fg:x="6990" fg:w="8"/><text x="65.9023%" y="959.50"></text></g><g><title>CoreFoundation`__CFNumberHash (4 samples, 0.04%)</title><rect x="65.6899%" y="933" width="0.0376%" height="15" fill="rgb(216,23,50)" fg:x="6994" fg:w="4"/><text x="65.9399%" y="943.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (3 samples, 0.03%)</title><rect x="65.6993%" y="917" width="0.0282%" height="15" fill="rgb(224,219,20)" fg:x="6995" fg:w="3"/><text x="65.9493%" y="927.50"></text></g><g><title>CoreFoundation`__CFNumberHash (2 samples, 0.02%)</title><rect x="65.7744%" y="933" width="0.0188%" height="15" fill="rgb(222,156,15)" fg:x="7003" fg:w="2"/><text x="66.0244%" y="943.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (2 samples, 0.02%)</title><rect x="65.7744%" y="917" width="0.0188%" height="15" fill="rgb(231,97,17)" fg:x="7003" fg:w="2"/><text x="66.0244%" y="927.50"></text></g><g><title>CoreFoundation`mdict_removeObjectForKey (8 samples, 0.08%)</title><rect x="65.7274%" y="949" width="0.0751%" height="15" fill="rgb(218,70,48)" fg:x="6998" fg:w="8"/><text x="65.9774%" y="959.50"></text></g><g><title>FramePacing`__70+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:]_block_invoke (20 samples, 0.19%)</title><rect x="65.6429%" y="965" width="0.1878%" height="15" fill="rgb(212,196,52)" fg:x="6989" fg:w="20"/><text x="65.8929%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (9 samples, 0.08%)</title><rect x="65.8308%" y="949" width="0.0845%" height="15" fill="rgb(243,203,18)" fg:x="7009" fg:w="9"/><text x="66.0808%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.06%)</title><rect x="65.8589%" y="933" width="0.0564%" height="15" fill="rgb(252,125,41)" fg:x="7012" fg:w="6"/><text x="66.1089%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (6 samples, 0.06%)</title><rect x="65.9247%" y="949" width="0.0564%" height="15" fill="rgb(223,180,33)" fg:x="7019" fg:w="6"/><text x="66.1747%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`malloc_good_size (2 samples, 0.02%)</title><rect x="65.9904%" y="949" width="0.0188%" height="15" fill="rgb(254,159,46)" fg:x="7026" fg:w="2"/><text x="66.2404%" y="959.50"></text></g><g><title>FramePacing`__76+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:]_block_invoke (20 samples, 0.19%)</title><rect x="65.8308%" y="965" width="0.1878%" height="15" fill="rgb(254,38,10)" fg:x="7009" fg:w="20"/><text x="66.0808%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleaseReturnValue (7 samples, 0.07%)</title><rect x="66.0186%" y="965" width="0.0657%" height="15" fill="rgb(208,217,32)" fg:x="7029" fg:w="7"/><text x="66.2686%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (18 samples, 0.17%)</title><rect x="66.0843%" y="965" width="0.1691%" height="15" fill="rgb(221,120,13)" fg:x="7036" fg:w="18"/><text x="66.3343%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (7 samples, 0.07%)</title><rect x="66.2534%" y="965" width="0.0657%" height="15" fill="rgb(246,54,52)" fg:x="7054" fg:w="7"/><text x="66.5034%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.04%)</title><rect x="66.3192%" y="965" width="0.0376%" height="15" fill="rgb(242,34,25)" fg:x="7061" fg:w="4"/><text x="66.5692%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_retain (10 samples, 0.09%)</title><rect x="66.3567%" y="965" width="0.0939%" height="15" fill="rgb(247,209,9)" fg:x="7065" fg:w="10"/><text x="66.6067%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (4 samples, 0.04%)</title><rect x="66.4506%" y="965" width="0.0376%" height="15" fill="rgb(228,71,26)" fg:x="7075" fg:w="4"/><text x="66.7006%" y="975.50"></text></g><g><title>FramePacing`__55+[FPCAMetalLayerState _updateCommandBufferState:block:]_block_invoke (137 samples, 1.29%)</title><rect x="65.2202%" y="981" width="1.2867%" height="15" fill="rgb(222,145,49)" fg:x="6944" fg:w="137"/><text x="65.4702%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleasedReturnValue (2 samples, 0.02%)</title><rect x="66.4882%" y="965" width="0.0188%" height="15" fill="rgb(218,121,17)" fg:x="7079" fg:w="2"/><text x="66.7382%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber compare:] (2 samples, 0.02%)</title><rect x="66.5540%" y="933" width="0.0188%" height="15" fill="rgb(244,50,7)" fg:x="7086" fg:w="2"/><text x="66.8040%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber isEqualToNumber:] (3 samples, 0.03%)</title><rect x="66.5540%" y="949" width="0.0282%" height="15" fill="rgb(246,229,37)" fg:x="7086" fg:w="3"/><text x="66.8040%" y="959.50"></text></g><g><title>CoreFoundation`__CFNumberHash (3 samples, 0.03%)</title><rect x="66.5821%" y="949" width="0.0282%" height="15" fill="rgb(225,18,5)" fg:x="7089" fg:w="3"/><text x="66.8321%" y="959.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (3 samples, 0.03%)</title><rect x="66.5821%" y="933" width="0.0282%" height="15" fill="rgb(213,204,8)" fg:x="7089" fg:w="3"/><text x="66.8321%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM setObject:forKeyedSubscript:] (11 samples, 0.10%)</title><rect x="66.5164%" y="965" width="0.1033%" height="15" fill="rgb(238,103,6)" fg:x="7082" fg:w="11"/><text x="66.7664%" y="975.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber compare:] (3 samples, 0.03%)</title><rect x="66.6761%" y="917" width="0.0282%" height="15" fill="rgb(222,25,35)" fg:x="7099" fg:w="3"/><text x="66.9261%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber objCType] (2 samples, 0.02%)</title><rect x="66.6855%" y="901" width="0.0188%" height="15" fill="rgb(213,203,35)" fg:x="7100" fg:w="2"/><text x="66.9355%" y="911.50"></text></g><g><title>CoreFoundation`_CFNumberGetType2 (2 samples, 0.02%)</title><rect x="66.6855%" y="885" width="0.0188%" height="15" fill="rgb(221,79,53)" fg:x="7100" fg:w="2"/><text x="66.9355%" y="895.50"></text></g><g><title>CoreFoundation`-[__NSCFNumber isEqualToNumber:] (4 samples, 0.04%)</title><rect x="66.6761%" y="933" width="0.0376%" height="15" fill="rgb(243,200,35)" fg:x="7099" fg:w="4"/><text x="66.9261%" y="943.50"></text></g><g><title>CoreFoundation`_CFNonObjCHash (2 samples, 0.02%)</title><rect x="66.7136%" y="933" width="0.0188%" height="15" fill="rgb(248,60,25)" fg:x="7103" fg:w="2"/><text x="66.9636%" y="943.50"></text></g><g><title>CoreFoundation`__CFNumberHash (5 samples, 0.05%)</title><rect x="66.7418%" y="933" width="0.0470%" height="15" fill="rgb(227,53,46)" fg:x="7106" fg:w="5"/><text x="66.9918%" y="943.50"></text></g><g><title>CoreFoundation`__CFNumberGetValue (4 samples, 0.04%)</title><rect x="66.7512%" y="917" width="0.0376%" height="15" fill="rgb(216,120,32)" fg:x="7107" fg:w="4"/><text x="67.0012%" y="927.50"></text></g><g><title>CoreFoundation`-[__NSDictionaryM objectForKeyedSubscript:] (18 samples, 0.17%)</title><rect x="66.6291%" y="949" width="0.1691%" height="15" fill="rgb(220,134,1)" fg:x="7094" fg:w="18"/><text x="66.8791%" y="959.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _commandBufferForAddress:] (22 samples, 0.21%)</title><rect x="66.6291%" y="965" width="0.2066%" height="15" fill="rgb(237,168,5)" fg:x="7094" fg:w="22"/><text x="66.8791%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (2 samples, 0.02%)</title><rect x="66.8169%" y="949" width="0.0188%" height="15" fill="rgb(231,100,33)" fg:x="7114" fg:w="2"/><text x="67.0669%" y="959.50"></text></g><g><title>FramePacing`_FPGlobalInFlightCommandBufferDictionary (2 samples, 0.02%)</title><rect x="66.8451%" y="965" width="0.0188%" height="15" fill="rgb(236,177,47)" fg:x="7117" fg:w="2"/><text x="67.0951%" y="975.50"></text></g><g><title>libobjc.A.dylib`_objc_rootAllocWithZone (3 samples, 0.03%)</title><rect x="66.8639%" y="965" width="0.0282%" height="15" fill="rgb(235,7,49)" fg:x="7119" fg:w="3"/><text x="67.1139%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_calloc_type (3 samples, 0.03%)</title><rect x="66.8639%" y="949" width="0.0282%" height="15" fill="rgb(232,119,22)" fg:x="7119" fg:w="3"/><text x="67.1139%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="66.9015%" y="965" width="0.0470%" height="15" fill="rgb(254,73,53)" fg:x="7123" fg:w="5"/><text x="67.1515%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (2 samples, 0.02%)</title><rect x="66.9484%" y="965" width="0.0188%" height="15" fill="rgb(251,35,20)" fg:x="7128" fg:w="2"/><text x="67.1984%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_retain (2 samples, 0.02%)</title><rect x="66.9766%" y="965" width="0.0188%" height="15" fill="rgb(241,119,20)" fg:x="7131" fg:w="2"/><text x="67.2266%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (4 samples, 0.04%)</title><rect x="66.9954%" y="965" width="0.0376%" height="15" fill="rgb(207,102,14)" fg:x="7133" fg:w="4"/><text x="67.2454%" y="975.50"></text></g><g><title>FramePacing`__56+[FPCAMetalLayerState commandBufferCreate:creationTime:]_block_invoke (58 samples, 0.54%)</title><rect x="66.5070%" y="981" width="0.5448%" height="15" fill="rgb(248,201,50)" fg:x="7081" fg:w="58"/><text x="66.7570%" y="991.50"></text></g><g><title>FramePacing`__70 (2 samples, 0.02%)</title><rect x="67.0518%" y="981" width="0.0188%" height="15" fill="rgb(222,185,44)" fg:x="7139" fg:w="2"/><text x="67.3018%" y="991.50"></text></g><g><title>FramePacing`__76 (5 samples, 0.05%)</title><rect x="67.0705%" y="981" width="0.0470%" height="15" fill="rgb(218,107,18)" fg:x="7141" fg:w="5"/><text x="67.3205%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_alloc (2 samples, 0.02%)</title><rect x="67.1175%" y="981" width="0.0188%" height="15" fill="rgb(237,177,39)" fg:x="7146" fg:w="2"/><text x="67.3675%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="67.1457%" y="981" width="0.0376%" height="15" fill="rgb(246,69,6)" fg:x="7149" fg:w="4"/><text x="67.3957%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (4 samples, 0.04%)</title><rect x="67.1832%" y="981" width="0.0376%" height="15" fill="rgb(234,208,37)" fg:x="7153" fg:w="4"/><text x="67.4332%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_release (2 samples, 0.02%)</title><rect x="67.2208%" y="981" width="0.0188%" height="15" fill="rgb(225,4,6)" fg:x="7157" fg:w="2"/><text x="67.4708%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_retain (2 samples, 0.02%)</title><rect x="67.2396%" y="981" width="0.0188%" height="15" fill="rgb(233,45,0)" fg:x="7159" fg:w="2"/><text x="67.4896%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_call_block_and_release (531 samples, 4.99%)</title><rect x="62.2992%" y="997" width="4.9873%" height="15" fill="rgb(226,136,5)" fg:x="6633" fg:w="531"/><text x="62.5492%" y="1007.50">libdis..</text></g><g><title>libxpc.dylib`___xpc_session_call_cancel_handler_block_invoke (2 samples, 0.02%)</title><rect x="67.2678%" y="981" width="0.0188%" height="15" fill="rgb(211,91,47)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="991.50"></text></g><g><title>libswiftXPC.dylib`thunk for @escaping @callee_guaranteed (@guaranteed OS_xpc_object)  (2 samples, 0.02%)</title><rect x="67.2678%" y="965" width="0.0188%" height="15" fill="rgb(242,88,51)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="975.50"></text></g><g><title> () (2 samples, 0.02%)</title><rect x="67.2678%" y="949" width="0.0188%" height="15" fill="rgb(230,91,28)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="959.50"></text></g><g><title>libswiftXPC.dylib`closure #1 in XPCSession.setCancellationHandler(_:) (2 samples, 0.02%)</title><rect x="67.2678%" y="933" width="0.0188%" height="15" fill="rgb(254,186,29)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="943.50"></text></g><g><title>libswiftXPC.dylib`ClientSpecifiedHandler.callEventHandler(_:) (2 samples, 0.02%)</title><rect x="67.2678%" y="917" width="0.0188%" height="15" fill="rgb(238,6,4)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="927.50"></text></g><g><title>libswiftXPC.dylib`partial apply for thunk for @escaping @callee_guaranteed (@in_guaranteed Result&lt;XPCDictionary, XPCRichError&gt;)  (2 samples, 0.02%)</title><rect x="67.2678%" y="901" width="0.0188%" height="15" fill="rgb(221,151,16)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="911.50"></text></g><g><title> () (2 samples, 0.02%)</title><rect x="67.2678%" y="885" width="0.0188%" height="15" fill="rgb(251,143,52)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="895.50"></text></g><g><title>UIIntelligenceSupport`0x000000025a2ba0b8 (2 samples, 0.02%)</title><rect x="67.2678%" y="869" width="0.0188%" height="15" fill="rgb(206,90,15)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="879.50"></text></g><g><title>libswiftCore.dylib`String.init&lt;A&gt;(describing:) (2 samples, 0.02%)</title><rect x="67.2678%" y="853" width="0.0188%" height="15" fill="rgb(218,35,8)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="863.50"></text></g><g><title>libswiftCore.dylib`swift_dynamicCast (2 samples, 0.02%)</title><rect x="67.2678%" y="837" width="0.0188%" height="15" fill="rgb(239,215,6)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="847.50"></text></g><g><title>libswiftCore.dylib`tryCast(swift::OpaqueValue*, swift::TargetMetadata&lt;swift::InProcess&gt; const*, swift::OpaqueValue*, swift::TargetMetadata&lt;swift::InProcess&gt; const*, swift::TargetMetadata&lt;swift::InProcess&gt; const*&amp;, swift::TargetMetadata (2 samples, 0.02%)</title><rect x="67.2678%" y="821" width="0.0188%" height="15" fill="rgb(245,116,39)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="831.50"></text></g><g><title>libswiftCore.dylib`tryCastToConstrainedOpaqueExistential(swift::OpaqueValue*, swift::TargetMetadata&lt;swift::InProcess&gt; const*, swift::OpaqueValue*, swift::TargetMetadata&lt;swift::InProcess&gt; const*, swift::TargetMetadata&lt;swift::InProcess&gt; const*&amp;, swift::TargetMetadata (2 samples, 0.02%)</title><rect x="67.2678%" y="805" width="0.0188%" height="15" fill="rgb(242,65,28)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="815.50"></text></g><g><title>libswiftCore.dylib`swift::_conformsToProtocol(swift::OpaqueValue const*, swift::TargetMetadata&lt;swift::InProcess&gt; const*, swift::TargetProtocolDescriptorRef&lt;swift::InProcess&gt;, swift::TargetWitnessTable (2 samples, 0.02%)</title><rect x="67.2678%" y="789" width="0.0188%" height="15" fill="rgb(252,132,53)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="799.50"></text></g><g><title>libswiftCore.dylib`swift_conformsToProtocolCommon (2 samples, 0.02%)</title><rect x="67.2678%" y="773" width="0.0188%" height="15" fill="rgb(224,159,50)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="783.50"></text></g><g><title>libswiftCore.dylib`swift_conformsToProtocolMaybeInstantiateSuperclasses(swift::TargetMetadata&lt;swift::InProcess&gt; const*, swift::TargetProtocolDescriptor (2 samples, 0.02%)</title><rect x="67.2678%" y="757" width="0.0188%" height="15" fill="rgb(224,93,4)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="767.50"></text></g><g><title>dyld`dyld4::APIs::_dyld_find_protocol_conformance (2 samples, 0.02%)</title><rect x="67.2678%" y="741" width="0.0188%" height="15" fill="rgb(208,81,34)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="751.50"></text></g><g><title>dyld`unsigned int SwiftHashTable::getPotentialTarget&lt;SwiftMetadataProtocolConformanceLocationKey, SwiftMetadataProtocolConformanceLocationKey&gt; (2 samples, 0.02%)</title><rect x="67.2678%" y="725" width="0.0188%" height="15" fill="rgb(233,92,54)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="735.50"></text></g><g><title>dyld`unsigned int SwiftHashTable::getIndex&lt;SwiftMetadataProtocolConformanceLocationKey, SwiftMetadataProtocolConformanceLocationKey&gt; (2 samples, 0.02%)</title><rect x="67.2678%" y="709" width="0.0188%" height="15" fill="rgb(237,21,14)" fg:x="7162" fg:w="2"/><text x="67.5178%" y="719.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (24 samples, 0.23%)</title><rect x="67.3993%" y="949" width="0.2254%" height="15" fill="rgb(249,128,51)" fg:x="7176" fg:w="24"/><text x="67.6493%" y="959.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (23 samples, 0.22%)</title><rect x="67.4087%" y="933" width="0.2160%" height="15" fill="rgb(223,129,24)" fg:x="7177" fg:w="23"/><text x="67.6587%" y="943.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (32 samples, 0.30%)</title><rect x="67.3429%" y="965" width="0.3006%" height="15" fill="rgb(231,168,25)" fg:x="7170" fg:w="32"/><text x="67.5929%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (16 samples, 0.15%)</title><rect x="67.6435%" y="965" width="0.1503%" height="15" fill="rgb(224,39,20)" fg:x="7202" fg:w="16"/><text x="67.8935%" y="975.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;, DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;::find(DisguisedPtr (4 samples, 0.04%)</title><rect x="67.7562%" y="949" width="0.0376%" height="15" fill="rgb(225,152,53)" fg:x="7214" fg:w="4"/><text x="68.0062%" y="959.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (50 samples, 0.47%)</title><rect x="67.3335%" y="981" width="0.4696%" height="15" fill="rgb(252,17,24)" fg:x="7169" fg:w="50"/><text x="67.5835%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.08%)</title><rect x="67.8031%" y="981" width="0.0751%" height="15" fill="rgb(250,114,30)" fg:x="7219" fg:w="8"/><text x="68.0531%" y="991.50"></text></g><g><title>libobjc.A.dylib`objc_release (4 samples, 0.04%)</title><rect x="67.8783%" y="981" width="0.0376%" height="15" fill="rgb(229,5,4)" fg:x="7227" fg:w="4"/><text x="68.1283%" y="991.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (2 samples, 0.02%)</title><rect x="68.0098%" y="917" width="0.0188%" height="15" fill="rgb(225,176,49)" fg:x="7241" fg:w="2"/><text x="68.2598%" y="927.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (11 samples, 0.10%)</title><rect x="68.0286%" y="917" width="0.1033%" height="15" fill="rgb(224,221,49)" fg:x="7243" fg:w="11"/><text x="68.2786%" y="927.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (8 samples, 0.08%)</title><rect x="68.0567%" y="901" width="0.0751%" height="15" fill="rgb(253,169,27)" fg:x="7246" fg:w="8"/><text x="68.3067%" y="911.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (19 samples, 0.18%)</title><rect x="67.9722%" y="933" width="0.1785%" height="15" fill="rgb(211,206,16)" fg:x="7237" fg:w="19"/><text x="68.2222%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (7 samples, 0.07%)</title><rect x="68.1507%" y="933" width="0.0657%" height="15" fill="rgb(244,87,35)" fg:x="7256" fg:w="7"/><text x="68.4007%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (31 samples, 0.29%)</title><rect x="67.9440%" y="949" width="0.2912%" height="15" fill="rgb(246,28,10)" fg:x="7234" fg:w="31"/><text x="68.1940%" y="959.50"></text></g><g><title>FramePacing`__destroy_helper_block_e8_32s40s (3 samples, 0.03%)</title><rect x="68.2352%" y="933" width="0.0282%" height="15" fill="rgb(229,12,44)" fg:x="7265" fg:w="3"/><text x="68.4852%" y="943.50"></text></g><g><title>CoreFoundation`_CFRelease (3 samples, 0.03%)</title><rect x="68.2352%" y="917" width="0.0282%" height="15" fill="rgb(210,145,37)" fg:x="7265" fg:w="3"/><text x="68.4852%" y="927.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="68.2446%" y="901" width="0.0188%" height="15" fill="rgb(227,112,52)" fg:x="7266" fg:w="2"/><text x="68.4946%" y="911.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (5 samples, 0.05%)</title><rect x="68.2352%" y="949" width="0.0470%" height="15" fill="rgb(238,155,34)" fg:x="7265" fg:w="5"/><text x="68.4852%" y="959.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.07%)</title><rect x="68.2821%" y="949" width="0.0657%" height="15" fill="rgb(239,226,36)" fg:x="7270" fg:w="7"/><text x="68.5321%" y="959.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (45 samples, 0.42%)</title><rect x="67.9346%" y="965" width="0.4227%" height="15" fill="rgb(230,16,23)" fg:x="7233" fg:w="45"/><text x="68.1846%" y="975.50"></text></g><g><title>libsystem_malloc.dylib`_free (3 samples, 0.03%)</title><rect x="68.3573%" y="965" width="0.0282%" height="15" fill="rgb(236,171,36)" fg:x="7278" fg:w="3"/><text x="68.6073%" y="975.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (49 samples, 0.46%)</title><rect x="67.9346%" y="981" width="0.4602%" height="15" fill="rgb(221,22,14)" fg:x="7233" fg:w="49"/><text x="68.1846%" y="991.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (123 samples, 1.16%)</title><rect x="67.2960%" y="997" width="1.1553%" height="15" fill="rgb(242,43,11)" fg:x="7165" fg:w="123"/><text x="67.5460%" y="1007.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.06%)</title><rect x="68.3949%" y="981" width="0.0564%" height="15" fill="rgb(232,69,23)" fg:x="7282" fg:w="6"/><text x="68.6449%" y="991.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (962 samples, 9.04%)</title><rect x="59.4252%" y="1013" width="9.0354%" height="15" fill="rgb(216,180,54)" fg:x="6327" fg:w="962"/><text x="59.6752%" y="1023.50">libdispatch.d..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_free_to_cache_limit (9 samples, 0.08%)</title><rect x="68.4606%" y="1013" width="0.0845%" height="15" fill="rgb(216,5,24)" fg:x="7289" fg:w="9"/><text x="68.7106%" y="1023.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.08%)</title><rect x="68.4700%" y="997" width="0.0751%" height="15" fill="rgb(225,89,9)" fg:x="7290" fg:w="8"/><text x="68.7200%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_continuation_free_to_heap (2 samples, 0.02%)</title><rect x="68.5451%" y="1013" width="0.0188%" height="15" fill="rgb(243,75,33)" fg:x="7298" fg:w="2"/><text x="68.7951%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (2 samples, 0.02%)</title><rect x="68.5639%" y="1013" width="0.0188%" height="15" fill="rgb(247,141,45)" fg:x="7300" fg:w="2"/><text x="68.8139%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_kq_unote_update (3 samples, 0.03%)</title><rect x="68.6766%" y="965" width="0.0282%" height="15" fill="rgb(232,177,36)" fg:x="7312" fg:w="3"/><text x="68.9266%" y="975.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (3 samples, 0.03%)</title><rect x="68.7330%" y="933" width="0.0282%" height="15" fill="rgb(219,125,36)" fg:x="7318" fg:w="3"/><text x="68.9830%" y="943.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (2 samples, 0.02%)</title><rect x="68.7612%" y="917" width="0.0188%" height="15" fill="rgb(227,94,9)" fg:x="7321" fg:w="2"/><text x="69.0112%" y="927.50"></text></g><g><title>IOGPU`DYLD-STUB$$_Block_release (2 samples, 0.02%)</title><rect x="68.7799%" y="901" width="0.0188%" height="15" fill="rgb(240,34,52)" fg:x="7323" fg:w="2"/><text x="69.0299%" y="911.50"></text></g><g><title>IOGPU`IOGPUDeviceCheckAndLogSoftFaultCount (3 samples, 0.03%)</title><rect x="68.8269%" y="885" width="0.0282%" height="15" fill="rgb(216,45,12)" fg:x="7328" fg:w="3"/><text x="69.0769%" y="895.50"></text></g><g><title>IOKit`__IODataQueueDequeue (9 samples, 0.08%)</title><rect x="68.8739%" y="885" width="0.0845%" height="15" fill="rgb(246,21,19)" fg:x="7333" fg:w="9"/><text x="69.1239%" y="895.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (53 samples, 0.50%)</title><rect x="68.9960%" y="837" width="0.4978%" height="15" fill="rgb(213,98,42)" fg:x="7346" fg:w="53"/><text x="69.2460%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (52 samples, 0.49%)</title><rect x="69.0054%" y="821" width="0.4884%" height="15" fill="rgb(250,136,47)" fg:x="7347" fg:w="52"/><text x="69.2554%" y="831.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (14 samples, 0.13%)</title><rect x="69.5407%" y="757" width="0.1315%" height="15" fill="rgb(251,124,27)" fg:x="7404" fg:w="14"/><text x="69.7907%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (12 samples, 0.11%)</title><rect x="69.5595%" y="741" width="0.1127%" height="15" fill="rgb(229,180,14)" fg:x="7406" fg:w="12"/><text x="69.8095%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (5 samples, 0.05%)</title><rect x="69.6252%" y="725" width="0.0470%" height="15" fill="rgb(245,216,25)" fg:x="7413" fg:w="5"/><text x="69.8752%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_find_block_and_allocate (5 samples, 0.05%)</title><rect x="69.6252%" y="709" width="0.0470%" height="15" fill="rgb(251,43,5)" fg:x="7413" fg:w="5"/><text x="69.8752%" y="719.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (15 samples, 0.14%)</title><rect x="69.5407%" y="789" width="0.1409%" height="15" fill="rgb(250,128,24)" fg:x="7404" fg:w="15"/><text x="69.7907%" y="799.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (15 samples, 0.14%)</title><rect x="69.5407%" y="773" width="0.1409%" height="15" fill="rgb(217,117,27)" fg:x="7404" fg:w="15"/><text x="69.7907%" y="783.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (22 samples, 0.21%)</title><rect x="69.5407%" y="805" width="0.2066%" height="15" fill="rgb(245,147,4)" fg:x="7404" fg:w="22"/><text x="69.7907%" y="815.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (7 samples, 0.07%)</title><rect x="69.6816%" y="789" width="0.0657%" height="15" fill="rgb(242,201,35)" fg:x="7419" fg:w="7"/><text x="69.9316%" y="799.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (23 samples, 0.22%)</title><rect x="69.5407%" y="821" width="0.2160%" height="15" fill="rgb(218,181,1)" fg:x="7404" fg:w="23"/><text x="69.7907%" y="831.50"></text></g><g><title>libdispatch.dylib`dispatch_async (28 samples, 0.26%)</title><rect x="69.5031%" y="837" width="0.2630%" height="15" fill="rgb(222,6,29)" fg:x="7400" fg:w="28"/><text x="69.7531%" y="847.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (85 samples, 0.80%)</title><rect x="68.9866%" y="853" width="0.7983%" height="15" fill="rgb(208,186,3)" fg:x="7345" fg:w="85"/><text x="69.2366%" y="863.50"></text></g><g><title>libobjc.A.dylib`objc_retainAutoreleaseReturnValue (2 samples, 0.02%)</title><rect x="69.7661%" y="837" width="0.0188%" height="15" fill="rgb(216,36,26)" fg:x="7428" fg:w="2"/><text x="70.0161%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_push (2 samples, 0.02%)</title><rect x="69.7849%" y="853" width="0.0188%" height="15" fill="rgb(248,201,23)" fg:x="7430" fg:w="2"/><text x="70.0349%" y="863.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferScheduled:kernelStartTime:kernelEndTime:] (93 samples, 0.87%)</title><rect x="68.9772%" y="869" width="0.8735%" height="15" fill="rgb(251,170,31)" fg:x="7344" fg:w="93"/><text x="69.2272%" y="879.50"></text></g><g><title>IOAccelerator`IOAccelInitCommPage (3 samples, 0.03%)</title><rect x="69.8507%" y="869" width="0.0282%" height="15" fill="rgb(207,110,25)" fg:x="7437" fg:w="3"/><text x="70.1007%" y="879.50"></text></g><g><title>CoreFoundation`__CFStringHash (6 samples, 0.06%)</title><rect x="69.9164%" y="821" width="0.0564%" height="15" fill="rgb(250,54,15)" fg:x="7444" fg:w="6"/><text x="70.1664%" y="831.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable presentWithOptions:] (9 samples, 0.08%)</title><rect x="69.8976%" y="837" width="0.0845%" height="15" fill="rgb(227,68,33)" fg:x="7442" fg:w="9"/><text x="70.1476%" y="847.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable priv] (2 samples, 0.02%)</title><rect x="70.0573%" y="821" width="0.0188%" height="15" fill="rgb(238,34,41)" fg:x="7459" fg:w="2"/><text x="70.3073%" y="831.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (7 samples, 0.07%)</title><rect x="70.1230%" y="773" width="0.0657%" height="15" fill="rgb(220,11,15)" fg:x="7466" fg:w="7"/><text x="70.3730%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (7 samples, 0.07%)</title><rect x="70.1230%" y="757" width="0.0657%" height="15" fill="rgb(246,111,35)" fg:x="7466" fg:w="7"/><text x="70.3730%" y="767.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (2 samples, 0.02%)</title><rect x="70.2170%" y="725" width="0.0188%" height="15" fill="rgb(209,88,53)" fg:x="7476" fg:w="2"/><text x="70.4670%" y="735.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (2 samples, 0.02%)</title><rect x="70.2170%" y="709" width="0.0188%" height="15" fill="rgb(231,185,47)" fg:x="7476" fg:w="2"/><text x="70.4670%" y="719.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (15 samples, 0.14%)</title><rect x="70.1136%" y="789" width="0.1409%" height="15" fill="rgb(233,154,1)" fg:x="7465" fg:w="15"/><text x="70.3636%" y="799.50"></text></g><g><title>libdispatch.dylib`dispatch_async (7 samples, 0.07%)</title><rect x="70.1888%" y="773" width="0.0657%" height="15" fill="rgb(225,15,46)" fg:x="7473" fg:w="7"/><text x="70.4388%" y="783.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (4 samples, 0.04%)</title><rect x="70.2170%" y="757" width="0.0376%" height="15" fill="rgb(211,135,41)" fg:x="7476" fg:w="4"/><text x="70.4670%" y="767.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (4 samples, 0.04%)</title><rect x="70.2170%" y="741" width="0.0376%" height="15" fill="rgb(208,54,0)" fg:x="7476" fg:w="4"/><text x="70.4670%" y="751.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (2 samples, 0.02%)</title><rect x="70.2357%" y="725" width="0.0188%" height="15" fill="rgb(244,136,14)" fg:x="7478" fg:w="2"/><text x="70.4857%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="70.2357%" y="709" width="0.0188%" height="15" fill="rgb(241,56,14)" fg:x="7478" fg:w="2"/><text x="70.4857%" y="719.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState metalLayer:drawableID:clientPresentedTime:] (19 samples, 0.18%)</title><rect x="70.1136%" y="805" width="0.1785%" height="15" fill="rgb(205,80,24)" fg:x="7465" fg:w="19"/><text x="70.3636%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="70.2733%" y="789" width="0.0188%" height="15" fill="rgb(220,57,4)" fg:x="7482" fg:w="2"/><text x="70.5233%" y="799.50"></text></g><g><title>IOKit`io_connect_method (87 samples, 0.82%)</title><rect x="70.3109%" y="773" width="0.8171%" height="15" fill="rgb(226,193,50)" fg:x="7486" fg:w="87"/><text x="70.5609%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (87 samples, 0.82%)</title><rect x="70.3109%" y="757" width="0.8171%" height="15" fill="rgb(231,168,22)" fg:x="7486" fg:w="87"/><text x="70.5609%" y="767.50"></text></g><g><title>IOSurface`IOSurfaceClientSignalEvent (92 samples, 0.86%)</title><rect x="70.3015%" y="805" width="0.8641%" height="15" fill="rgb(254,215,14)" fg:x="7485" fg:w="92"/><text x="70.5515%" y="815.50"></text></g><g><title>IOKit`IOConnectCallMethod (91 samples, 0.85%)</title><rect x="70.3109%" y="789" width="0.8547%" height="15" fill="rgb(211,115,16)" fg:x="7486" fg:w="91"/><text x="70.5609%" y="799.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="71.1468%" y="773" width="0.0188%" height="15" fill="rgb(236,210,16)" fg:x="7575" fg:w="2"/><text x="71.3968%" y="783.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (2 samples, 0.02%)</title><rect x="71.1750%" y="773" width="0.0188%" height="15" fill="rgb(221,94,12)" fg:x="7578" fg:w="2"/><text x="71.4250%" y="783.50"></text></g><g><title>CoreFoundation`CFArrayAppendValue (5 samples, 0.05%)</title><rect x="71.1750%" y="789" width="0.0470%" height="15" fill="rgb(235,218,49)" fg:x="7578" fg:w="5"/><text x="71.4250%" y="799.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (3 samples, 0.03%)</title><rect x="71.1938%" y="773" width="0.0282%" height="15" fill="rgb(217,114,14)" fg:x="7580" fg:w="3"/><text x="71.4438%" y="783.50"></text></g><g><title>IOKit`IOConnectCallMethod (75 samples, 0.70%)</title><rect x="71.2313%" y="789" width="0.7044%" height="15" fill="rgb(216,145,22)" fg:x="7584" fg:w="75"/><text x="71.4813%" y="799.50"></text></g><g><title>IOKit`io_connect_method (75 samples, 0.70%)</title><rect x="71.2313%" y="773" width="0.7044%" height="15" fill="rgb(217,112,39)" fg:x="7584" fg:w="75"/><text x="71.4813%" y="783.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (75 samples, 0.70%)</title><rect x="71.2313%" y="757" width="0.7044%" height="15" fill="rgb(225,85,32)" fg:x="7584" fg:w="75"/><text x="71.4813%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`malloc_type_malloc (3 samples, 0.03%)</title><rect x="71.9358%" y="789" width="0.0282%" height="15" fill="rgb(245,209,47)" fg:x="7659" fg:w="3"/><text x="72.1858%" y="799.50"></text></g><g><title>IOSurface`IOSurfaceSharedEventNotifyEventListener (87 samples, 0.82%)</title><rect x="71.1656%" y="805" width="0.8171%" height="15" fill="rgb(218,220,15)" fg:x="7577" fg:w="87"/><text x="71.4156%" y="815.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="71.9639%" y="789" width="0.0188%" height="15" fill="rgb(222,202,31)" fg:x="7662" fg:w="2"/><text x="72.2139%" y="799.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (3 samples, 0.03%)</title><rect x="71.9921%" y="805" width="0.0282%" height="15" fill="rgb(243,203,4)" fg:x="7665" fg:w="3"/><text x="72.2421%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="72.0203%" y="805" width="0.0282%" height="15" fill="rgb(237,92,17)" fg:x="7668" fg:w="3"/><text x="72.2703%" y="815.50"></text></g><g><title>QuartzCore`layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, double, unsigned int) (210 samples, 1.97%)</title><rect x="70.0855%" y="821" width="1.9724%" height="15" fill="rgb(231,119,7)" fg:x="7462" fg:w="210"/><text x="70.3355%" y="831.50">Q..</text></g><g><title>QuartzCore`objc_msgSend$priv (2 samples, 0.02%)</title><rect x="72.0579%" y="821" width="0.0188%" height="15" fill="rgb(237,82,41)" fg:x="7672" fg:w="2"/><text x="72.3079%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="72.0954%" y="821" width="0.0470%" height="15" fill="rgb(226,81,48)" fg:x="7676" fg:w="5"/><text x="72.3454%" y="831.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (3 samples, 0.03%)</title><rect x="72.2081%" y="773" width="0.0282%" height="15" fill="rgb(234,70,51)" fg:x="7688" fg:w="3"/><text x="72.4581%" y="783.50"></text></g><g><title>libdispatch.dylib`firehose_buffer_ring_enqueue (2 samples, 0.02%)</title><rect x="72.2175%" y="757" width="0.0188%" height="15" fill="rgb(251,86,4)" fg:x="7689" fg:w="2"/><text x="72.4675%" y="767.50"></text></g><g><title>libdispatch.dylib`firehose_send_push_async (2 samples, 0.02%)</title><rect x="72.2175%" y="741" width="0.0188%" height="15" fill="rgb(244,144,28)" fg:x="7689" fg:w="2"/><text x="72.4675%" y="751.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (2 samples, 0.02%)</title><rect x="72.2175%" y="725" width="0.0188%" height="15" fill="rgb(232,161,39)" fg:x="7689" fg:w="2"/><text x="72.4675%" y="735.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.02%)</title><rect x="72.2175%" y="709" width="0.0188%" height="15" fill="rgb(247,34,51)" fg:x="7689" fg:w="2"/><text x="72.4675%" y="719.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (2 samples, 0.02%)</title><rect x="72.2175%" y="693" width="0.0188%" height="15" fill="rgb(225,132,2)" fg:x="7689" fg:w="2"/><text x="72.4675%" y="703.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (10 samples, 0.09%)</title><rect x="72.1706%" y="789" width="0.0939%" height="15" fill="rgb(209,159,44)" fg:x="7684" fg:w="10"/><text x="72.4206%" y="799.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (13 samples, 0.12%)</title><rect x="72.1518%" y="821" width="0.1221%" height="15" fill="rgb(251,214,1)" fg:x="7682" fg:w="13"/><text x="72.4018%" y="831.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (12 samples, 0.11%)</title><rect x="72.1612%" y="805" width="0.1127%" height="15" fill="rgb(247,84,47)" fg:x="7683" fg:w="12"/><text x="72.4112%" y="815.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable present] (247 samples, 2.32%)</title><rect x="69.9822%" y="837" width="2.3199%" height="15" fill="rgb(240,111,43)" fg:x="7451" fg:w="247"/><text x="70.2322%" y="847.50">Q..</text></g><g><title>libsystem_trace.dylib`os_signpost_enabled (3 samples, 0.03%)</title><rect x="72.2739%" y="821" width="0.0282%" height="15" fill="rgb(215,214,35)" fg:x="7695" fg:w="3"/><text x="72.5239%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="72.3114%" y="837" width="0.0282%" height="15" fill="rgb(248,207,23)" fg:x="7699" fg:w="3"/><text x="72.5614%" y="847.50"></text></g><g><title>Metal`__45-[_MTLCommandBuffer presentDrawable:options:]_block_invoke (264 samples, 2.48%)</title><rect x="69.8788%" y="853" width="2.4796%" height="15" fill="rgb(214,186,4)" fg:x="7440" fg:w="264"/><text x="70.1288%" y="863.50">Me..</text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (2 samples, 0.02%)</title><rect x="72.3396%" y="837" width="0.0188%" height="15" fill="rgb(220,133,22)" fg:x="7702" fg:w="2"/><text x="72.5896%" y="847.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (2 samples, 0.02%)</title><rect x="72.3678%" y="837" width="0.0188%" height="15" fill="rgb(239,134,19)" fg:x="7705" fg:w="2"/><text x="72.6178%" y="847.50"></text></g><g><title>Foundation`-[NSConstantIntegerNumber release] (2 samples, 0.02%)</title><rect x="72.4054%" y="805" width="0.0188%" height="15" fill="rgb(250,140,9)" fg:x="7709" fg:w="2"/><text x="72.6554%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="72.4242%" y="805" width="0.0470%" height="15" fill="rgb(225,59,14)" fg:x="7711" fg:w="5"/><text x="72.6742%" y="815.50"></text></g><g><title>Metal`__destroy_helper_block_e8_32o40o48o (12 samples, 0.11%)</title><rect x="72.3866%" y="821" width="0.1127%" height="15" fill="rgb(214,152,51)" fg:x="7707" fg:w="12"/><text x="72.6366%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (3 samples, 0.03%)</title><rect x="72.4711%" y="805" width="0.0282%" height="15" fill="rgb(251,227,43)" fg:x="7716" fg:w="3"/><text x="72.7211%" y="815.50"></text></g><g><title>Metal`MTLDispatchListApply (281 samples, 2.64%)</title><rect x="69.8788%" y="869" width="2.6392%" height="15" fill="rgb(241,96,17)" fg:x="7440" fg:w="281"/><text x="70.1288%" y="879.50">Me..</text></g><g><title>libsystem_blocks.dylib`_Block_release (16 samples, 0.15%)</title><rect x="72.3678%" y="853" width="0.1503%" height="15" fill="rgb(234,198,43)" fg:x="7705" fg:w="16"/><text x="72.6178%" y="863.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (14 samples, 0.13%)</title><rect x="72.3866%" y="837" width="0.1315%" height="15" fill="rgb(220,108,29)" fg:x="7707" fg:w="14"/><text x="72.6366%" y="847.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="72.4993%" y="821" width="0.0188%" height="15" fill="rgb(226,163,33)" fg:x="7719" fg:w="2"/><text x="72.7493%" y="831.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_lock_init_slow (3 samples, 0.03%)</title><rect x="72.5369%" y="869" width="0.0282%" height="15" fill="rgb(205,194,45)" fg:x="7723" fg:w="3"/><text x="72.7869%" y="879.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_check_init_slow (3 samples, 0.03%)</title><rect x="72.5369%" y="853" width="0.0282%" height="15" fill="rgb(206,143,44)" fg:x="7723" fg:w="3"/><text x="72.7869%" y="863.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (385 samples, 3.62%)</title><rect x="68.9584%" y="885" width="3.6160%" height="15" fill="rgb(236,136,36)" fg:x="7342" fg:w="385"/><text x="69.2084%" y="895.50">Meta..</text></g><g><title>CoreFoundation`-[__NSArrayM objectAtIndex:] (3 samples, 0.03%)</title><rect x="72.6308%" y="853" width="0.0282%" height="15" fill="rgb(249,172,42)" fg:x="7733" fg:w="3"/><text x="72.8808%" y="863.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (6 samples, 0.06%)</title><rect x="72.6590%" y="853" width="0.0564%" height="15" fill="rgb(216,139,23)" fg:x="7736" fg:w="6"/><text x="72.9090%" y="863.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObject:] (14 samples, 0.13%)</title><rect x="72.5932%" y="869" width="0.1315%" height="15" fill="rgb(207,166,20)" fg:x="7729" fg:w="14"/><text x="72.8432%" y="879.50"></text></g><g><title>IOGPU`IOGPUMetalDeviceShmemRelease (5 samples, 0.05%)</title><rect x="72.8092%" y="805" width="0.0470%" height="15" fill="rgb(210,209,22)" fg:x="7752" fg:w="5"/><text x="73.0592%" y="815.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReleaseDeviceShmems (6 samples, 0.06%)</title><rect x="72.8092%" y="821" width="0.0564%" height="15" fill="rgb(232,118,20)" fg:x="7752" fg:w="6"/><text x="73.0592%" y="831.50"></text></g><g><title>IOGPU`IOGPUMetalPooledResourceRelease (26 samples, 0.24%)</title><rect x="73.0910%" y="805" width="0.2442%" height="15" fill="rgb(238,113,42)" fg:x="7782" fg:w="26"/><text x="73.3410%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`mach_absolute_time (4 samples, 0.04%)</title><rect x="73.3540%" y="805" width="0.0376%" height="15" fill="rgb(231,42,5)" fg:x="7810" fg:w="4"/><text x="73.6040%" y="815.50"></text></g><g><title>IOGPU`_iogpuMetalCommandBufferStorageReleaseCurrentResources (56 samples, 0.53%)</title><rect x="72.8750%" y="821" width="0.5260%" height="15" fill="rgb(243,166,24)" fg:x="7759" fg:w="56"/><text x="73.1250%" y="831.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (5 samples, 0.05%)</title><rect x="73.4104%" y="821" width="0.0470%" height="15" fill="rgb(237,226,12)" fg:x="7816" fg:w="5"/><text x="73.6604%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.03%)</title><rect x="73.4291%" y="805" width="0.0282%" height="15" fill="rgb(229,133,24)" fg:x="7818" fg:w="3"/><text x="73.6791%" y="815.50"></text></g><g><title>Metal`MTLResourceListChunkFreeEntries(MTLResourceListChunk*) (3 samples, 0.03%)</title><rect x="73.4573%" y="821" width="0.0282%" height="15" fill="rgb(238,33,43)" fg:x="7821" fg:w="3"/><text x="73.7073%" y="831.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageReset (130 samples, 1.22%)</title><rect x="72.7905%" y="837" width="1.2210%" height="15" fill="rgb(227,59,38)" fg:x="7750" fg:w="130"/><text x="73.0405%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (54 samples, 0.51%)</title><rect x="73.5043%" y="821" width="0.5072%" height="15" fill="rgb(230,97,0)" fg:x="7826" fg:w="54"/><text x="73.7543%" y="831.50"></text></g><g><title>IOGPU`IOGPUMetalDeviceShmemUpdateTrimLevel (5 samples, 0.05%)</title><rect x="74.0115%" y="837" width="0.0470%" height="15" fill="rgb(250,173,50)" fg:x="7880" fg:w="5"/><text x="74.2615%" y="847.50"></text></g><g><title>Metal`-[MTLResourceList releaseAllObjectsAndReset] (2 samples, 0.02%)</title><rect x="74.0678%" y="837" width="0.0188%" height="15" fill="rgb(240,15,50)" fg:x="7886" fg:w="2"/><text x="74.3178%" y="847.50"></text></g><g><title>IOGPU`IOGPUMetalCommandBufferStorageDealloc (147 samples, 1.38%)</title><rect x="72.7811%" y="853" width="1.3807%" height="15" fill="rgb(221,93,22)" fg:x="7749" fg:w="147"/><text x="73.0311%" y="863.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (8 samples, 0.08%)</title><rect x="74.0866%" y="837" width="0.0751%" height="15" fill="rgb(245,180,53)" fg:x="7888" fg:w="8"/><text x="74.3366%" y="847.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (59 samples, 0.55%)</title><rect x="74.2463%" y="805" width="0.5541%" height="15" fill="rgb(231,88,51)" fg:x="7905" fg:w="59"/><text x="74.4963%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (59 samples, 0.55%)</title><rect x="74.2463%" y="789" width="0.5541%" height="15" fill="rgb(240,58,21)" fg:x="7905" fg:w="59"/><text x="74.4963%" y="799.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (2 samples, 0.02%)</title><rect x="74.8474%" y="757" width="0.0188%" height="15" fill="rgb(237,21,10)" fg:x="7969" fg:w="2"/><text x="75.0974%" y="767.50"></text></g><g><title>libsystem_blocks.dylib`_Block_object_assign (6 samples, 0.06%)</title><rect x="74.8662%" y="741" width="0.0564%" height="15" fill="rgb(218,43,11)" fg:x="7971" fg:w="6"/><text x="75.1162%" y="751.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (5 samples, 0.05%)</title><rect x="74.8756%" y="725" width="0.0470%" height="15" fill="rgb(218,221,29)" fg:x="7972" fg:w="5"/><text x="75.1256%" y="735.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.05%)</title><rect x="74.8756%" y="709" width="0.0470%" height="15" fill="rgb(214,118,42)" fg:x="7972" fg:w="5"/><text x="75.1256%" y="719.50"></text></g><g><title>libsystem_blocks.dylib`_call_copy_helpers_excp (7 samples, 0.07%)</title><rect x="74.8662%" y="757" width="0.0657%" height="15" fill="rgb(251,200,26)" fg:x="7971" fg:w="7"/><text x="75.1162%" y="767.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (25 samples, 0.23%)</title><rect x="74.8192%" y="773" width="0.2348%" height="15" fill="rgb(237,101,39)" fg:x="7966" fg:w="25"/><text x="75.0692%" y="783.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (13 samples, 0.12%)</title><rect x="74.9319%" y="757" width="0.1221%" height="15" fill="rgb(251,117,11)" fg:x="7978" fg:w="13"/><text x="75.1819%" y="767.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_allocate_outlined (2 samples, 0.02%)</title><rect x="75.0352%" y="741" width="0.0188%" height="15" fill="rgb(216,223,23)" fg:x="7989" fg:w="2"/><text x="75.2852%" y="751.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (28 samples, 0.26%)</title><rect x="74.8192%" y="789" width="0.2630%" height="15" fill="rgb(251,54,12)" fg:x="7966" fg:w="28"/><text x="75.0692%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`malloc_type_malloc (3 samples, 0.03%)</title><rect x="75.0540%" y="773" width="0.0282%" height="15" fill="rgb(254,176,54)" fg:x="7991" fg:w="3"/><text x="75.3040%" y="783.50"></text></g><g><title>libdispatch.dylib`dispatch_async (31 samples, 0.29%)</title><rect x="74.8098%" y="805" width="0.2912%" height="15" fill="rgb(210,32,8)" fg:x="7965" fg:w="31"/><text x="75.0598%" y="815.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (2 samples, 0.02%)</title><rect x="75.0822%" y="789" width="0.0188%" height="15" fill="rgb(235,52,38)" fg:x="7994" fg:w="2"/><text x="75.3322%" y="799.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateCommandBufferState:block:] (92 samples, 0.86%)</title><rect x="74.2463%" y="821" width="0.8641%" height="15" fill="rgb(231,4,44)" fg:x="7905" fg:w="92"/><text x="74.4963%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (3 samples, 0.03%)</title><rect x="75.1385%" y="821" width="0.0282%" height="15" fill="rgb(249,2,32)" fg:x="8000" fg:w="3"/><text x="75.3885%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_release (3 samples, 0.03%)</title><rect x="75.1667%" y="821" width="0.0282%" height="15" fill="rgb(224,65,26)" fg:x="8003" fg:w="3"/><text x="75.4167%" y="831.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState commandBufferCompleted:gpuStartTime:gpuEndTime:] (105 samples, 0.99%)</title><rect x="74.2275%" y="837" width="0.9862%" height="15" fill="rgb(250,73,40)" fg:x="7903" fg:w="105"/><text x="74.4775%" y="847.50"></text></g><g><title>Metal`MTLDispatchListApply (2 samples, 0.02%)</title><rect x="75.2137%" y="837" width="0.0188%" height="15" fill="rgb(253,177,16)" fg:x="8008" fg:w="2"/><text x="75.4637%" y="847.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (2 samples, 0.02%)</title><rect x="75.2137%" y="821" width="0.0188%" height="15" fill="rgb(217,32,34)" fg:x="8008" fg:w="2"/><text x="75.4637%" y="831.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (2 samples, 0.02%)</title><rect x="75.2137%" y="805" width="0.0188%" height="15" fill="rgb(212,7,10)" fg:x="8008" fg:w="2"/><text x="75.4637%" y="815.50"></text></g><g><title>libobjc.A.dylib`objc_opt_self (2 samples, 0.02%)</title><rect x="75.2325%" y="837" width="0.0188%" height="15" fill="rgb(245,89,8)" fg:x="8010" fg:w="2"/><text x="75.4825%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (6 samples, 0.06%)</title><rect x="75.2606%" y="837" width="0.0564%" height="15" fill="rgb(237,16,53)" fg:x="8013" fg:w="6"/><text x="75.5106%" y="847.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_cond_check_init_slow (6 samples, 0.06%)</title><rect x="75.2606%" y="821" width="0.0564%" height="15" fill="rgb(250,204,30)" fg:x="8013" fg:w="6"/><text x="75.5106%" y="831.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didCompleteWithStartTime:endTime:error:] (124 samples, 1.16%)</title><rect x="74.1617%" y="853" width="1.1646%" height="15" fill="rgb(208,77,27)" fg:x="7896" fg:w="124"/><text x="74.4117%" y="863.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="75.3452%" y="853" width="0.0376%" height="15" fill="rgb(250,204,28)" fg:x="8022" fg:w="4"/><text x="75.5952%" y="863.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer didCompleteWithStartTime:endTime:error:] (282 samples, 2.65%)</title><rect x="72.7529%" y="869" width="2.6486%" height="15" fill="rgb(244,63,21)" fg:x="7746" fg:w="282"/><text x="73.0029%" y="879.50">IO..</text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (2 samples, 0.02%)</title><rect x="75.3827%" y="853" width="0.0188%" height="15" fill="rgb(236,85,44)" fg:x="8026" fg:w="2"/><text x="75.6327%" y="863.50"></text></g><g><title>Metal`MTLFailureTypeGetErrorModeType (3 samples, 0.03%)</title><rect x="75.4203%" y="869" width="0.0282%" height="15" fill="rgb(215,98,4)" fg:x="8030" fg:w="3"/><text x="75.6703%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="75.4485%" y="869" width="0.0564%" height="15" fill="rgb(235,38,11)" fg:x="8033" fg:w="6"/><text x="75.6985%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (2 samples, 0.02%)</title><rect x="75.5048%" y="869" width="0.0188%" height="15" fill="rgb(254,186,25)" fg:x="8039" fg:w="2"/><text x="75.7548%" y="879.50"></text></g><g><title>Metal`-[_MTLCommandQueue commandBufferDidComplete:startTime:completionTime:error:] (318 samples, 2.99%)</title><rect x="72.5744%" y="885" width="2.9868%" height="15" fill="rgb(225,55,31)" fg:x="7727" fg:w="318"/><text x="72.8244%" y="895.50">Met..</text></g><g><title>libdispatch.dylib`_dispatch_group_wake (2 samples, 0.02%)</title><rect x="75.5800%" y="885" width="0.0188%" height="15" fill="rgb(211,15,21)" fg:x="8047" fg:w="2"/><text x="75.8300%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (10 samples, 0.09%)</title><rect x="75.5988%" y="885" width="0.0939%" height="15" fill="rgb(215,187,41)" fg:x="8049" fg:w="10"/><text x="75.8488%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (7 samples, 0.07%)</title><rect x="75.7678%" y="837" width="0.0657%" height="15" fill="rgb(248,69,32)" fg:x="8067" fg:w="7"/><text x="76.0178%" y="847.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (7 samples, 0.07%)</title><rect x="75.7678%" y="821" width="0.0657%" height="15" fill="rgb(252,102,52)" fg:x="8067" fg:w="7"/><text x="76.0178%" y="831.50"></text></g><g><title>libobjc.A.dylib`_object_remove_associations (15 samples, 0.14%)</title><rect x="75.7490%" y="853" width="0.1409%" height="15" fill="rgb(253,140,32)" fg:x="8065" fg:w="15"/><text x="75.9990%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (6 samples, 0.06%)</title><rect x="75.8336%" y="837" width="0.0564%" height="15" fill="rgb(216,56,42)" fg:x="8074" fg:w="6"/><text x="76.0836%" y="847.50"></text></g><g><title>libobjc.A.dylib`objc_object::sidetable_clearDeallocating (11 samples, 0.10%)</title><rect x="75.8899%" y="853" width="0.1033%" height="15" fill="rgb(216,184,14)" fg:x="8080" fg:w="11"/><text x="76.1399%" y="863.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;, DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;::find(DisguisedPtr (4 samples, 0.04%)</title><rect x="75.9557%" y="837" width="0.0376%" height="15" fill="rgb(237,187,27)" fg:x="8087" fg:w="4"/><text x="76.2057%" y="847.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;, DisguisedPtr&lt;objc_object const&gt;, unsigned long, (anonymous namespace)::RefcountMapValuePurgeable, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object const&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object const&gt;, unsigned long&gt;&gt;::LookupBucketFor&lt;DisguisedPtr&lt;objc_object const&gt;&gt;(DisguisedPtr&lt;objc_object const&gt; const&amp;, objc::detail::DenseMapPair&lt;DisguisedPtr (3 samples, 0.03%)</title><rect x="75.9651%" y="821" width="0.0282%" height="15" fill="rgb(219,65,3)" fg:x="8088" fg:w="3"/><text x="76.2151%" y="831.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (29 samples, 0.27%)</title><rect x="75.7396%" y="869" width="0.2724%" height="15" fill="rgb(245,83,25)" fg:x="8064" fg:w="29"/><text x="75.9896%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`_free (2 samples, 0.02%)</title><rect x="75.9932%" y="853" width="0.0188%" height="15" fill="rgb(214,205,45)" fg:x="8091" fg:w="2"/><text x="76.2432%" y="863.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.02%)</title><rect x="76.0496%" y="789" width="0.0188%" height="15" fill="rgb(241,20,18)" fg:x="8097" fg:w="2"/><text x="76.2996%" y="799.50"></text></g><g><title>CoreFoundation`__CFStringDeallocate (2 samples, 0.02%)</title><rect x="76.0684%" y="789" width="0.0188%" height="15" fill="rgb(232,163,23)" fg:x="8099" fg:w="2"/><text x="76.3184%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`free_tiny (3 samples, 0.03%)</title><rect x="76.0966%" y="789" width="0.0282%" height="15" fill="rgb(214,5,46)" fg:x="8102" fg:w="3"/><text x="76.3466%" y="799.50"></text></g><g><title>libsystem_malloc.dylib`tiny_free_no_lock (2 samples, 0.02%)</title><rect x="76.1059%" y="773" width="0.0188%" height="15" fill="rgb(229,78,17)" fg:x="8103" fg:w="2"/><text x="76.3559%" y="783.50"></text></g><g><title>Metal`-[_MTLObjectWithLabel dealloc] (9 samples, 0.08%)</title><rect x="76.0496%" y="805" width="0.0845%" height="15" fill="rgb(248,89,10)" fg:x="8097" fg:w="9"/><text x="76.2996%" y="815.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (12 samples, 0.11%)</title><rect x="76.0402%" y="821" width="0.1127%" height="15" fill="rgb(248,54,15)" fg:x="8096" fg:w="12"/><text x="76.2902%" y="831.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer dealloc] (13 samples, 0.12%)</title><rect x="76.0402%" y="837" width="0.1221%" height="15" fill="rgb(223,116,6)" fg:x="8096" fg:w="13"/><text x="76.2902%" y="847.50"></text></g><g><title>Metal`-[_MTLCommandBuffer dealloc] (2 samples, 0.02%)</title><rect x="76.1623%" y="837" width="0.0188%" height="15" fill="rgb(205,125,38)" fg:x="8109" fg:w="2"/><text x="76.4123%" y="847.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer dealloc] (20 samples, 0.19%)</title><rect x="76.0214%" y="853" width="0.1878%" height="15" fill="rgb(251,78,38)" fg:x="8094" fg:w="20"/><text x="76.2714%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="76.1905%" y="837" width="0.0188%" height="15" fill="rgb(253,78,28)" fg:x="8112" fg:w="2"/><text x="76.4405%" y="847.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (26 samples, 0.24%)</title><rect x="76.0214%" y="869" width="0.2442%" height="15" fill="rgb(209,120,3)" fg:x="8094" fg:w="26"/><text x="76.2714%" y="879.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (62 samples, 0.58%)</title><rect x="75.7021%" y="885" width="0.5823%" height="15" fill="rgb(238,229,9)" fg:x="8060" fg:w="62"/><text x="75.9521%" y="895.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="76.2656%" y="869" width="0.0188%" height="15" fill="rgb(253,159,18)" fg:x="8120" fg:w="2"/><text x="76.5156%" y="879.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="76.3032%" y="885" width="0.0188%" height="15" fill="rgb(244,42,34)" fg:x="8124" fg:w="2"/><text x="76.5532%" y="895.50"></text></g><g><title>IOGPU`IOGPUNotificationQueueDispatchAvailableCompletionNotifications (803 samples, 7.54%)</title><rect x="68.7987%" y="901" width="7.5420%" height="15" fill="rgb(224,8,7)" fg:x="7325" fg:w="803"/><text x="69.0487%" y="911.50">IOGPU`IOGP..</text></g><g><title>libsystem_pthread.dylib`pthread_cond_broadcast (2 samples, 0.02%)</title><rect x="76.3220%" y="885" width="0.0188%" height="15" fill="rgb(210,201,45)" fg:x="8126" fg:w="2"/><text x="76.5720%" y="895.50"></text></g><g><title>IOGPU`__62-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:]_block_invoke.52 (2 samples, 0.02%)</title><rect x="76.3408%" y="901" width="0.0188%" height="15" fill="rgb(252,185,21)" fg:x="8128" fg:w="2"/><text x="76.5908%" y="911.50"></text></g><g><title>Metal`-[_MTLCommandBuffer didScheduleWithStartTime:endTime:error:] (2 samples, 0.02%)</title><rect x="76.3783%" y="901" width="0.0188%" height="15" fill="rgb(223,131,1)" fg:x="8132" fg:w="2"/><text x="76.6283%" y="911.50"></text></g><g><title>libdispatch.dylib`dispatch_group_leave (3 samples, 0.03%)</title><rect x="76.3971%" y="901" width="0.0282%" height="15" fill="rgb(245,141,16)" fg:x="8134" fg:w="3"/><text x="76.6471%" y="911.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_signal (5 samples, 0.05%)</title><rect x="76.4253%" y="901" width="0.0470%" height="15" fill="rgb(229,55,45)" fg:x="8137" fg:w="5"/><text x="76.6753%" y="911.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.07%)</title><rect x="76.4722%" y="901" width="0.0657%" height="15" fill="rgb(208,92,15)" fg:x="8142" fg:w="7"/><text x="76.7222%" y="911.50"></text></g><g><title>IOGPU`__IOGPUNotificationQueueSetDispatchQueue_block_invoke (827 samples, 7.77%)</title><rect x="68.7799%" y="917" width="7.7674%" height="15" fill="rgb(234,185,47)" fg:x="7323" fg:w="827"/><text x="69.0299%" y="927.50">IOGPU`__IOG..</text></g><g><title>libdispatch.dylib`_dispatch_client_callout4 (830 samples, 7.80%)</title><rect x="68.7612%" y="933" width="7.7956%" height="15" fill="rgb(253,104,50)" fg:x="7321" fg:w="830"/><text x="69.0112%" y="943.50">libdispatch..</text></g><g><title>libobjc.A.dylib`_object_remove_associations (3 samples, 0.03%)</title><rect x="76.5568%" y="901" width="0.0282%" height="15" fill="rgb(205,70,7)" fg:x="8151" fg:w="3"/><text x="76.8068%" y="911.50"></text></g><g><title>libobjc.A.dylib`objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (3 samples, 0.03%)</title><rect x="76.5568%" y="885" width="0.0282%" height="15" fill="rgb(240,178,43)" fg:x="8151" fg:w="3"/><text x="76.8068%" y="895.50"></text></g><g><title>libobjc.A.dylib`bool objc::DenseMapBase&lt;objc::DenseMap&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;, objc::DenseMapValueInfo&lt;objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;, objc::DenseMapInfo&lt;DisguisedPtr&lt;objc_object&gt;&gt;, objc::detail::DenseMapPair&lt;DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair&lt;void const*, objc::ObjcAssociation&gt;&gt;&gt;&gt;, DisguisedPtr&lt;objc_object&gt;, objc::DenseMap&lt;void const*, objc::ObjcAssociation, objc::DenseMapValueInfo&lt;objc::ObjcAssociation&gt;, objc::DenseMapInfo&lt;void const*&gt;, objc::detail::DenseMapPair (2 samples, 0.02%)</title><rect x="76.5662%" y="869" width="0.0188%" height="15" fill="rgb(214,112,2)" fg:x="8152" fg:w="2"/><text x="76.8162%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_destructInstance (4 samples, 0.04%)</title><rect x="76.5568%" y="917" width="0.0376%" height="15" fill="rgb(206,46,17)" fg:x="8151" fg:w="4"/><text x="76.8068%" y="927.50"></text></g><g><title>libdispatch.dylib`_dispatch_dispose (5 samples, 0.05%)</title><rect x="76.5568%" y="933" width="0.0470%" height="15" fill="rgb(225,220,16)" fg:x="8151" fg:w="5"/><text x="76.8068%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (843 samples, 7.92%)</title><rect x="68.7236%" y="949" width="7.9177%" height="15" fill="rgb(238,65,40)" fg:x="7317" fg:w="843"/><text x="68.9736%" y="959.50">libdispatch..</text></g><g><title>libdispatch.dylib`_os_object_release_internal (3 samples, 0.03%)</title><rect x="76.6131%" y="933" width="0.0282%" height="15" fill="rgb(230,151,21)" fg:x="8157" fg:w="3"/><text x="76.8631%" y="943.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (847 samples, 7.96%)</title><rect x="68.7048%" y="965" width="7.9553%" height="15" fill="rgb(218,58,49)" fg:x="7315" fg:w="847"/><text x="68.9548%" y="975.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_mach_invoke (856 samples, 8.04%)</title><rect x="68.6391%" y="981" width="8.0398%" height="15" fill="rgb(219,179,14)" fg:x="7308" fg:w="856"/><text x="68.8891%" y="991.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_mach_msg_invoke (2 samples, 0.02%)</title><rect x="76.6601%" y="965" width="0.0188%" height="15" fill="rgb(223,72,1)" fg:x="8162" fg:w="2"/><text x="76.9101%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (858 samples, 8.06%)</title><rect x="68.6297%" y="997" width="8.0586%" height="15" fill="rgb(238,126,10)" fg:x="7307" fg:w="858"/><text x="68.8797%" y="1007.50">libdispatch..</text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (864 samples, 8.11%)</title><rect x="68.5827%" y="1013" width="8.1150%" height="15" fill="rgb(224,206,38)" fg:x="7302" fg:w="864"/><text x="68.8327%" y="1023.50">libdispatch..</text></g><g><title>IOKit`DYLD-STUB$$dispatch_mig_server (2 samples, 0.02%)</title><rect x="76.8855%" y="965" width="0.0188%" height="15" fill="rgb(212,201,54)" fg:x="8186" fg:w="2"/><text x="77.1355%" y="975.50"></text></g><g><title>IOKit`__IONotificationPortSetDispatchQueue_block_invoke (2 samples, 0.02%)</title><rect x="76.9043%" y="965" width="0.0188%" height="15" fill="rgb(218,154,48)" fg:x="8188" fg:w="2"/><text x="77.1543%" y="975.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (4 samples, 0.04%)</title><rect x="76.9419%" y="965" width="0.0376%" height="15" fill="rgb(232,93,24)" fg:x="8192" fg:w="4"/><text x="77.1919%" y="975.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (2 samples, 0.02%)</title><rect x="76.9888%" y="949" width="0.0188%" height="15" fill="rgb(245,30,21)" fg:x="8197" fg:w="2"/><text x="77.2388%" y="959.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObjects:count:atIndex:] (7 samples, 0.07%)</title><rect x="77.1485%" y="901" width="0.0657%" height="15" fill="rgb(242,148,29)" fg:x="8214" fg:w="7"/><text x="77.3985%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="77.2236%" y="901" width="0.0188%" height="15" fill="rgb(244,153,54)" fg:x="8222" fg:w="2"/><text x="77.4736%" y="911.50"></text></g><g><title>CoreFoundation`-[__NSArrayM replaceObjectsInRange:withObjects:count:] (18 samples, 0.17%)</title><rect x="77.1297%" y="917" width="0.1691%" height="15" fill="rgb(252,87,22)" fg:x="8212" fg:w="18"/><text x="77.3797%" y="927.50"></text></g><g><title>CoreFoundation`_NSIsNSArray (3 samples, 0.03%)</title><rect x="77.2988%" y="917" width="0.0282%" height="15" fill="rgb(210,51,29)" fg:x="8230" fg:w="3"/><text x="77.5488%" y="927.50"></text></g><g><title>libobjc.A.dylib`object_getMethodImplementation (3 samples, 0.03%)</title><rect x="77.2988%" y="901" width="0.0282%" height="15" fill="rgb(242,136,47)" fg:x="8230" fg:w="3"/><text x="77.5488%" y="911.50"></text></g><g><title>CoreFoundation`-[NSMutableArray replaceObjectsInRange:withObjectsFromArray:range:] (28 samples, 0.26%)</title><rect x="77.0827%" y="933" width="0.2630%" height="15" fill="rgb(238,68,4)" fg:x="8207" fg:w="28"/><text x="77.3327%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSArrayM count] (2 samples, 0.02%)</title><rect x="77.3457%" y="933" width="0.0188%" height="15" fill="rgb(242,161,30)" fg:x="8235" fg:w="2"/><text x="77.5957%" y="943.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectsInRange:] (2 samples, 0.02%)</title><rect x="77.3739%" y="933" width="0.0188%" height="15" fill="rgb(218,58,44)" fg:x="8238" fg:w="2"/><text x="77.6239%" y="943.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (11 samples, 0.10%)</title><rect x="77.4584%" y="869" width="0.1033%" height="15" fill="rgb(252,125,32)" fg:x="8247" fg:w="11"/><text x="77.7084%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (6 samples, 0.06%)</title><rect x="77.5054%" y="853" width="0.0564%" height="15" fill="rgb(219,178,0)" fg:x="8252" fg:w="6"/><text x="77.7554%" y="863.50"></text></g><g><title>libsystem_malloc.dylib`malloc_type_malloc (4 samples, 0.04%)</title><rect x="77.5618%" y="869" width="0.0376%" height="15" fill="rgb(213,152,7)" fg:x="8258" fg:w="4"/><text x="77.8118%" y="879.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandBuffer fillCommandBufferArgs:commandQueue:] (17 samples, 0.16%)</title><rect x="77.4490%" y="885" width="0.1597%" height="15" fill="rgb(249,109,34)" fg:x="8246" fg:w="17"/><text x="77.6990%" y="895.50"></text></g><g><title>AGXMetal13_3`-[AGXG13GFamilyCommandBuffer fillCommandBufferArgs:commandQueue:] (18 samples, 0.17%)</title><rect x="77.4490%" y="901" width="0.1691%" height="15" fill="rgb(232,96,21)" fg:x="8246" fg:w="18"/><text x="77.6990%" y="911.50"></text></g><g><title>IOKit`io_connect_method (1,586 samples, 14.90%)</title><rect x="77.6745%" y="869" width="14.8962%" height="15" fill="rgb(228,27,39)" fg:x="8270" fg:w="1586"/><text x="77.9245%" y="879.50">IOKit`io_connect_method</text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (1,584 samples, 14.88%)</title><rect x="77.6932%" y="853" width="14.8774%" height="15" fill="rgb(211,182,52)" fg:x="8272" fg:w="1584"/><text x="77.9432%" y="863.50">libsystem_kernel.dylib`..</text></g><g><title>IOKit`IOConnectCallMethod (1,587 samples, 14.91%)</title><rect x="77.6745%" y="885" width="14.9056%" height="15" fill="rgb(234,178,38)" fg:x="8270" fg:w="1587"/><text x="77.9245%" y="895.50">IOKit`IOConnectCallMeth..</text></g><g><title>IOGPU`IOGPUCommandQueueSubmitCommandBuffers (1,595 samples, 14.98%)</title><rect x="77.6369%" y="901" width="14.9807%" height="15" fill="rgb(221,111,3)" fg:x="8266" fg:w="1595"/><text x="77.8869%" y="911.50">IOGPU`IOGPUCommandQueue..</text></g><g><title>libdispatch.dylib`dispatch_semaphore_wait (4 samples, 0.04%)</title><rect x="92.5801%" y="885" width="0.0376%" height="15" fill="rgb(228,175,21)" fg:x="9857" fg:w="4"/><text x="92.8301%" y="895.50"></text></g><g><title>IOKit`iokit_user_client_trap (16 samples, 0.15%)</title><rect x="92.6176%" y="901" width="0.1503%" height="15" fill="rgb(228,174,43)" fg:x="9861" fg:w="16"/><text x="92.8676%" y="911.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="92.7679%" y="901" width="0.0188%" height="15" fill="rgb(211,191,0)" fg:x="9877" fg:w="2"/><text x="93.0179%" y="911.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue _submitCommandBuffers:count:] (1,637 samples, 15.38%)</title><rect x="77.4303%" y="917" width="15.3752%" height="15" fill="rgb(253,117,3)" fg:x="8244" fg:w="1637"/><text x="77.6803%" y="927.50">IOGPU`-[IOGPUMetalComman..</text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (2 samples, 0.02%)</title><rect x="92.7867%" y="901" width="0.0188%" height="15" fill="rgb(241,127,19)" fg:x="9879" fg:w="2"/><text x="93.0367%" y="911.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (6 samples, 0.06%)</title><rect x="92.8055%" y="917" width="0.0564%" height="15" fill="rgb(218,103,12)" fg:x="9881" fg:w="6"/><text x="93.0555%" y="927.50"></text></g><g><title>IOGPU`-[IOGPUMetalCommandQueue submitCommandBuffers:count:] (1,646 samples, 15.46%)</title><rect x="77.4115%" y="933" width="15.4598%" height="15" fill="rgb(236,214,43)" fg:x="8242" fg:w="1646"/><text x="77.6615%" y="943.50">IOGPU`-[IOGPUMetalComman..</text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="92.8712%" y="933" width="0.0470%" height="15" fill="rgb(244,144,19)" fg:x="9888" fg:w="5"/><text x="93.1212%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_lock_slow (5 samples, 0.05%)</title><rect x="92.9182%" y="933" width="0.0470%" height="15" fill="rgb(246,188,10)" fg:x="9893" fg:w="5"/><text x="93.1682%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexwait (5 samples, 0.05%)</title><rect x="92.9182%" y="917" width="0.0470%" height="15" fill="rgb(212,193,33)" fg:x="9893" fg:w="5"/><text x="93.1682%" y="927.50"></text></g><g><title>Metal`-[_MTLCommandQueue _submitAvailableCommandBuffers] (1,726 samples, 16.21%)</title><rect x="77.0264%" y="949" width="16.2111%" height="15" fill="rgb(241,51,29)" fg:x="8201" fg:w="1726"/><text x="77.2764%" y="959.50">Metal`-[_MTLCommandQueue ..</text></g><g><title>libsystem_pthread.dylib`_pthread_mutex_firstfit_unlock_slow (29 samples, 0.27%)</title><rect x="92.9652%" y="933" width="0.2724%" height="15" fill="rgb(211,58,19)" fg:x="9898" fg:w="29"/><text x="93.2152%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`__psynch_mutexdrop (29 samples, 0.27%)</title><rect x="92.9652%" y="917" width="0.2724%" height="15" fill="rgb(229,111,26)" fg:x="9898" fg:w="29"/><text x="93.2152%" y="927.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (3 samples, 0.03%)</title><rect x="93.2563%" y="949" width="0.0282%" height="15" fill="rgb(213,115,40)" fg:x="9929" fg:w="3"/><text x="93.5063%" y="959.50"></text></g><g><title>QuartzCore`CAImageQueueCollectable (3 samples, 0.03%)</title><rect x="93.3502%" y="917" width="0.0282%" height="15" fill="rgb(209,56,44)" fg:x="9939" fg:w="3"/><text x="93.6002%" y="927.50"></text></g><g><title>CoreFoundation`-[NSArray countByEnumeratingWithState:objects:count:] (2 samples, 0.02%)</title><rect x="93.4254%" y="885" width="0.0188%" height="15" fill="rgb(230,108,32)" fg:x="9947" fg:w="2"/><text x="93.6754%" y="895.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderArray initWithObjects:count:] (2 samples, 0.02%)</title><rect x="93.4536%" y="853" width="0.0188%" height="15" fill="rgb(216,165,31)" fg:x="9950" fg:w="2"/><text x="93.7036%" y="863.50"></text></g><g><title>CoreFoundation`-[NSArray initWithArray:range:copyItems:] (6 samples, 0.06%)</title><rect x="93.4536%" y="869" width="0.0564%" height="15" fill="rgb(218,122,21)" fg:x="9950" fg:w="6"/><text x="93.7036%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_retain (2 samples, 0.02%)</title><rect x="93.4911%" y="853" width="0.0188%" height="15" fill="rgb(223,224,47)" fg:x="9954" fg:w="2"/><text x="93.7411%" y="863.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (7 samples, 0.07%)</title><rect x="93.5193%" y="805" width="0.0657%" height="15" fill="rgb(238,102,44)" fg:x="9957" fg:w="7"/><text x="93.7693%" y="815.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (7 samples, 0.07%)</title><rect x="93.5193%" y="789" width="0.0657%" height="15" fill="rgb(236,46,40)" fg:x="9957" fg:w="7"/><text x="93.7693%" y="799.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState _updateLayerState:block:] (9 samples, 0.08%)</title><rect x="93.5193%" y="821" width="0.0845%" height="15" fill="rgb(247,202,50)" fg:x="9957" fg:w="9"/><text x="93.7693%" y="831.50"></text></g><g><title>libdispatch.dylib`dispatch_async (2 samples, 0.02%)</title><rect x="93.5850%" y="805" width="0.0188%" height="15" fill="rgb(209,99,20)" fg:x="9964" fg:w="2"/><text x="93.8350%" y="815.50"></text></g><g><title>libdispatch.dylib`_dispatch_Block_copy (2 samples, 0.02%)</title><rect x="93.5850%" y="789" width="0.0188%" height="15" fill="rgb(252,27,34)" fg:x="9964" fg:w="2"/><text x="93.8350%" y="799.50"></text></g><g><title>libsystem_blocks.dylib`_Block_copy (2 samples, 0.02%)</title><rect x="93.5850%" y="773" width="0.0188%" height="15" fill="rgb(215,206,23)" fg:x="9964" fg:w="2"/><text x="93.8350%" y="783.50"></text></g><g><title>FramePacing`+[FPCAMetalLayerState drawableLifetimeEnd:imageQueueID:drawableID:drawableFinishedTime:wasPresented:targetCPUDeadline:targetPresentationTime:] (13 samples, 0.12%)</title><rect x="93.5193%" y="837" width="0.1221%" height="15" fill="rgb(212,135,36)" fg:x="9957" fg:w="13"/><text x="93.7693%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (14 samples, 0.13%)</title><rect x="93.6414%" y="821" width="0.1315%" height="15" fill="rgb(240,189,1)" fg:x="9970" fg:w="14"/><text x="93.8914%" y="831.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (15 samples, 0.14%)</title><rect x="93.6414%" y="837" width="0.1409%" height="15" fill="rgb(242,56,20)" fg:x="9970" fg:w="15"/><text x="93.8914%" y="847.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (30 samples, 0.28%)</title><rect x="93.5193%" y="853" width="0.2818%" height="15" fill="rgb(247,132,33)" fg:x="9957" fg:w="30"/><text x="93.7693%" y="863.50"></text></g><g><title>CoreFoundation`-[__NSArrayI dealloc] (32 samples, 0.30%)</title><rect x="93.5099%" y="869" width="0.3006%" height="15" fill="rgb(208,149,11)" fg:x="9956" fg:w="32"/><text x="93.7599%" y="879.50"></text></g><g><title>QuartzCore`layer_private_cleanup_callbacks(_CAMetalLayerPrivate*) (40 samples, 0.38%)</title><rect x="93.4536%" y="885" width="0.3757%" height="15" fill="rgb(211,33,11)" fg:x="9950" fg:w="40"/><text x="93.7036%" y="895.50"></text></g><g><title>libdispatch.dylib`DYLD-STUB$$semaphore_signal (2 samples, 0.02%)</title><rect x="93.8292%" y="869" width="0.0188%" height="15" fill="rgb(221,29,38)" fg:x="9990" fg:w="2"/><text x="94.0792%" y="879.50"></text></g><g><title>libdispatch.dylib`_dispatch_semaphore_signal_slow (29 samples, 0.27%)</title><rect x="93.8292%" y="885" width="0.2724%" height="15" fill="rgb(206,182,49)" fg:x="9990" fg:w="29"/><text x="94.0792%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`semaphore_signal_trap (27 samples, 0.25%)</title><rect x="93.8480%" y="869" width="0.2536%" height="15" fill="rgb(216,140,1)" fg:x="9992" fg:w="27"/><text x="94.0980%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (5 samples, 0.05%)</title><rect x="94.1016%" y="885" width="0.0470%" height="15" fill="rgb(232,57,40)" fg:x="10019" fg:w="5"/><text x="94.3516%" y="895.50"></text></g><g><title>QuartzCore`layer_collectable_signal(_CAImageQueue*, void*) (.11158) (81 samples, 0.76%)</title><rect x="93.3972%" y="901" width="0.7608%" height="15" fill="rgb(224,186,18)" fg:x="9944" fg:w="81"/><text x="93.6472%" y="911.50"></text></g><g><title>QuartzCore`invoke_collectable_callback(void*) (85 samples, 0.80%)</title><rect x="93.3878%" y="917" width="0.7983%" height="15" fill="rgb(215,121,11)" fg:x="9943" fg:w="85"/><text x="93.6378%" y="927.50"></text></g><g><title>libdispatch.dylib`dispatch_semaphore_signal (3 samples, 0.03%)</title><rect x="94.1580%" y="901" width="0.0282%" height="15" fill="rgb(245,147,10)" fg:x="10025" fg:w="3"/><text x="94.4080%" y="911.50"></text></g><g><title>QuartzCore`_XImageQueueCollectable (93 samples, 0.87%)</title><rect x="93.3502%" y="933" width="0.8735%" height="15" fill="rgb(238,153,13)" fg:x="9939" fg:w="93"/><text x="93.6002%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="94.2049%" y="917" width="0.0188%" height="15" fill="rgb(233,108,0)" fg:x="10030" fg:w="2"/><text x="94.4549%" y="927.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInRange:inArray:range:] (2 samples, 0.02%)</title><rect x="94.2425%" y="901" width="0.0188%" height="15" fill="rgb(212,157,17)" fg:x="10034" fg:w="2"/><text x="94.4925%" y="911.50"></text></g><g><title>CoreFoundation` (3 samples, 0.03%)</title><rect x="94.3176%" y="885" width="0.0282%" height="15" fill="rgb(225,213,38)" fg:x="10042" fg:w="3"/><text x="94.5676%" y="895.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInArray:] (2 samples, 0.02%)</title><rect x="94.3458%" y="885" width="0.0188%" height="15" fill="rgb(248,16,11)" fg:x="10045" fg:w="2"/><text x="94.5958%" y="895.50"></text></g><g><title>CoreFoundation`-[__NSPlaceholderSet initWithObjects:count:] (2 samples, 0.02%)</title><rect x="94.3740%" y="837" width="0.0188%" height="15" fill="rgb(241,33,4)" fg:x="10048" fg:w="2"/><text x="94.6240%" y="847.50"></text></g><g><title>CoreFoundation`-[NSSet initWithArray:range:copyItems:] (4 samples, 0.04%)</title><rect x="94.3646%" y="853" width="0.0376%" height="15" fill="rgb(222,26,43)" fg:x="10047" fg:w="4"/><text x="94.6146%" y="863.50"></text></g><g><title>CoreFoundation`+[NSSet setWithArray:range:copyItems:] (5 samples, 0.05%)</title><rect x="94.3646%" y="869" width="0.0470%" height="15" fill="rgb(243,29,36)" fg:x="10047" fg:w="5"/><text x="94.6146%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="94.4397%" y="869" width="0.0376%" height="15" fill="rgb(241,9,27)" fg:x="10055" fg:w="4"/><text x="94.6897%" y="879.50"></text></g><g><title>CoreFoundation`-[NSMutableArray removeObjectsInRange:inArray:range:] (13 samples, 0.12%)</title><rect x="94.3646%" y="885" width="0.1221%" height="15" fill="rgb(205,117,26)" fg:x="10047" fg:w="13"/><text x="94.6146%" y="895.50"></text></g><g><title>CoreFoundation`-[__NSArrayM removeObjectAtIndex:] (2 samples, 0.02%)</title><rect x="94.4961%" y="885" width="0.0188%" height="15" fill="rgb(209,80,39)" fg:x="10061" fg:w="2"/><text x="94.7461%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="94.5337%" y="885" width="0.0376%" height="15" fill="rgb(239,155,6)" fg:x="10065" fg:w="4"/><text x="94.7837%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_msgSendSuper2 (2 samples, 0.02%)</title><rect x="94.5712%" y="885" width="0.0188%" height="15" fill="rgb(212,104,12)" fg:x="10069" fg:w="2"/><text x="94.8212%" y="895.50"></text></g><g><title>QuartzCore`layer_composited(_CAImageQueue*, void*, unsigned int, unsigned int) (30 samples, 0.28%)</title><rect x="94.3176%" y="901" width="0.2818%" height="15" fill="rgb(234,204,3)" fg:x="10042" fg:w="30"/><text x="94.5676%" y="911.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (14 samples, 0.13%)</title><rect x="94.6088%" y="901" width="0.1315%" height="15" fill="rgb(251,218,7)" fg:x="10073" fg:w="14"/><text x="94.8588%" y="911.50"></text></g><g><title>QuartzCore`CAImageQueueDidComposite (57 samples, 0.54%)</title><rect x="94.2237%" y="917" width="0.5354%" height="15" fill="rgb(221,81,32)" fg:x="10032" fg:w="57"/><text x="94.4737%" y="927.50"></text></g><g><title>QuartzCore`_XImageQueueDidComposite (58 samples, 0.54%)</title><rect x="94.2237%" y="933" width="0.5448%" height="15" fill="rgb(214,152,26)" fg:x="10032" fg:w="58"/><text x="94.4737%" y="943.50"></text></g><g><title>CoreFoundation`CFRetain (2 samples, 0.02%)</title><rect x="94.7873%" y="917" width="0.0188%" height="15" fill="rgb(223,22,3)" fg:x="10092" fg:w="2"/><text x="95.0373%" y="927.50"></text></g><g><title>CoreFoundation`CF_IS_OBJC (2 samples, 0.02%)</title><rect x="94.7873%" y="901" width="0.0188%" height="15" fill="rgb(207,174,7)" fg:x="10092" fg:w="2"/><text x="95.0373%" y="911.50"></text></g><g><title>libdispatch.dylib`_dispatch_event_loop_poke (54 samples, 0.51%)</title><rect x="94.8060%" y="917" width="0.5072%" height="15" fill="rgb(224,19,52)" fg:x="10094" fg:w="54"/><text x="95.0560%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`kevent_id (52 samples, 0.49%)</title><rect x="94.8248%" y="901" width="0.4884%" height="15" fill="rgb(228,24,14)" fg:x="10096" fg:w="52"/><text x="95.0748%" y="911.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (5 samples, 0.05%)</title><rect x="95.3226%" y="917" width="0.0470%" height="15" fill="rgb(230,153,43)" fg:x="10149" fg:w="5"/><text x="95.5726%" y="927.50"></text></g><g><title>QuartzCore`_XImageQueueDidPresent (66 samples, 0.62%)</title><rect x="94.7685%" y="933" width="0.6199%" height="15" fill="rgb(231,106,12)" fg:x="10090" fg:w="66"/><text x="95.0185%" y="943.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="95.3696%" y="917" width="0.0188%" height="15" fill="rgb(215,92,2)" fg:x="10154" fg:w="2"/><text x="95.6196%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (78 samples, 0.73%)</title><rect x="95.3884%" y="933" width="0.7326%" height="15" fill="rgb(249,143,25)" fg:x="10156" fg:w="78"/><text x="95.6384%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (78 samples, 0.73%)</title><rect x="95.3884%" y="917" width="0.7326%" height="15" fill="rgb(252,7,35)" fg:x="10156" fg:w="78"/><text x="95.6384%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (75 samples, 0.70%)</title><rect x="95.4165%" y="901" width="0.7044%" height="15" fill="rgb(216,69,40)" fg:x="10159" fg:w="75"/><text x="95.6665%" y="911.50"></text></g><g><title>QuartzCore`invocation function for block in CA::MachPortUtil::ClientIPC::create (309 samples, 2.90%)</title><rect x="93.2845%" y="949" width="2.9022%" height="15" fill="rgb(240,36,33)" fg:x="9932" fg:w="309"/><text x="93.5345%" y="959.50">Qu..</text></g><g><title>libsystem_malloc.dylib`malloc_type_malloc (6 samples, 0.06%)</title><rect x="96.1304%" y="933" width="0.0564%" height="15" fill="rgb(231,128,14)" fg:x="10235" fg:w="6"/><text x="96.3804%" y="943.50"></text></g><g><title>CoreFoundation`CFArrayGetCount (2 samples, 0.02%)</title><rect x="96.2243%" y="885" width="0.0188%" height="15" fill="rgb(245,143,14)" fg:x="10245" fg:w="2"/><text x="96.4743%" y="895.50"></text></g><g><title>CoreGraphics`CGRectEqualToRect (3 samples, 0.03%)</title><rect x="96.2619%" y="885" width="0.0282%" height="15" fill="rgb(222,130,28)" fg:x="10249" fg:w="3"/><text x="96.5119%" y="895.50"></text></g><g><title>CoreFoundation`_CFArrayReplaceValues (4 samples, 0.04%)</title><rect x="96.3088%" y="869" width="0.0376%" height="15" fill="rgb(212,10,48)" fg:x="10254" fg:w="4"/><text x="96.5588%" y="879.50"></text></g><g><title>CoreFoundation`__CFArrayReleaseValues (3 samples, 0.03%)</title><rect x="96.3182%" y="853" width="0.0282%" height="15" fill="rgb(254,118,45)" fg:x="10255" fg:w="3"/><text x="96.5682%" y="863.50"></text></g><g><title>IOSurface`_iosRemoveEventBlock (11 samples, 0.10%)</title><rect x="96.2900%" y="885" width="0.1033%" height="15" fill="rgb(228,6,45)" fg:x="10252" fg:w="11"/><text x="96.5400%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (4 samples, 0.04%)</title><rect x="96.3558%" y="869" width="0.0376%" height="15" fill="rgb(241,18,35)" fg:x="10259" fg:w="4"/><text x="96.6058%" y="879.50"></text></g><g><title>CoreFoundation`-[NSArray containsObject:] (4 samples, 0.04%)</title><rect x="96.4403%" y="869" width="0.0376%" height="15" fill="rgb(227,214,53)" fg:x="10268" fg:w="4"/><text x="96.6903%" y="879.50"></text></g><g><title>CoreFoundation`-[__NSArrayM countByEnumeratingWithState:objects:count:] (2 samples, 0.02%)</title><rect x="96.4591%" y="853" width="0.0188%" height="15" fill="rgb(224,107,51)" fg:x="10270" fg:w="2"/><text x="96.7091%" y="863.50"></text></g><g><title>CoreFoundation`-[__NSArrayM insertObject:atIndex:] (3 samples, 0.03%)</title><rect x="96.4779%" y="869" width="0.0282%" height="15" fill="rgb(248,60,28)" fg:x="10272" fg:w="3"/><text x="96.7279%" y="879.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc_type (3 samples, 0.03%)</title><rect x="96.4779%" y="853" width="0.0282%" height="15" fill="rgb(249,101,23)" fg:x="10272" fg:w="3"/><text x="96.7279%" y="863.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable releasePrivateReferences:] (5 samples, 0.05%)</title><rect x="96.5248%" y="869" width="0.0470%" height="15" fill="rgb(228,51,19)" fg:x="10277" fg:w="5"/><text x="96.7748%" y="879.50"></text></g><g><title>QuartzCore`CA::Context::Generic::release (2 samples, 0.02%)</title><rect x="96.5812%" y="869" width="0.0188%" height="15" fill="rgb(213,20,6)" fg:x="10283" fg:w="2"/><text x="96.8312%" y="879.50"></text></g><g><title>QuartzCore`CA::Context::Generic::retain_render_context (2 samples, 0.02%)</title><rect x="96.6563%" y="853" width="0.0188%" height="15" fill="rgb(212,124,10)" fg:x="10291" fg:w="2"/><text x="96.9063%" y="863.50"></text></g><g><title>QuartzCore`CA::GenericContext::retain_context_with_id (2 samples, 0.02%)</title><rect x="96.6939%" y="853" width="0.0188%" height="15" fill="rgb(248,3,40)" fg:x="10295" fg:w="2"/><text x="96.9439%" y="863.50"></text></g><g><title>QuartzCore`CA::Context::retain_render_ctx (2 samples, 0.02%)</title><rect x="96.7221%" y="837" width="0.0188%" height="15" fill="rgb(223,178,23)" fg:x="10298" fg:w="2"/><text x="96.9721%" y="847.50"></text></g><g><title>QuartzCore`CAImageQueuePing_ (76 samples, 0.71%)</title><rect x="96.7127%" y="853" width="0.7138%" height="15" fill="rgb(240,132,45)" fg:x="10297" fg:w="76"/><text x="96.9627%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (71 samples, 0.67%)</title><rect x="96.7597%" y="837" width="0.6669%" height="15" fill="rgb(245,164,36)" fg:x="10302" fg:w="71"/><text x="97.0097%" y="847.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (71 samples, 0.67%)</title><rect x="96.7597%" y="821" width="0.6669%" height="15" fill="rgb(231,188,53)" fg:x="10302" fg:w="71"/><text x="97.0097%" y="831.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (69 samples, 0.65%)</title><rect x="96.7784%" y="805" width="0.6481%" height="15" fill="rgb(237,198,39)" fg:x="10304" fg:w="69"/><text x="97.0284%" y="815.50"></text></g><g><title>QuartzCore`x_hash_table_lookup (8 samples, 0.08%)</title><rect x="97.4359%" y="853" width="0.0751%" height="15" fill="rgb(223,120,35)" fg:x="10374" fg:w="8"/><text x="97.6859%" y="863.50"></text></g><g><title>QuartzCore`CAImageQueueInsertImage_ (103 samples, 0.97%)</title><rect x="96.6000%" y="869" width="0.9674%" height="15" fill="rgb(253,107,49)" fg:x="10285" fg:w="103"/><text x="96.8500%" y="879.50"></text></g><g><title>libsystem_trace.dylib`_os_signpost_emit_with_name_impl (6 samples, 0.06%)</title><rect x="97.5110%" y="853" width="0.0564%" height="15" fill="rgb(216,44,31)" fg:x="10382" fg:w="6"/><text x="97.7610%" y="863.50"></text></g><g><title>libsystem_trace.dylib`__os_signpost_emit_impl (6 samples, 0.06%)</title><rect x="97.5110%" y="837" width="0.0564%" height="15" fill="rgb(253,87,21)" fg:x="10382" fg:w="6"/><text x="97.7610%" y="847.50"></text></g><g><title>libsystem_trace.dylib`_os_log_impl_flatten_and_send (3 samples, 0.03%)</title><rect x="97.5392%" y="821" width="0.0282%" height="15" fill="rgb(226,18,2)" fg:x="10385" fg:w="3"/><text x="97.7892%" y="831.50"></text></g><g><title>libdispatch.dylib`voucher_activity_trace_v_2 (3 samples, 0.03%)</title><rect x="97.5392%" y="805" width="0.0282%" height="15" fill="rgb(216,8,46)" fg:x="10385" fg:w="3"/><text x="97.7892%" y="815.50"></text></g><g><title>QuartzCore`layer_collectable_signal(_CAImageQueue*, void*) (.11158) (2 samples, 0.02%)</title><rect x="97.5768%" y="869" width="0.0188%" height="15" fill="rgb(226,140,39)" fg:x="10389" fg:w="2"/><text x="97.8268%" y="879.50"></text></g><g><title>QuartzCore`layer_private_cleanup_callbacks(_CAMetalLayerPrivate*) (2 samples, 0.02%)</title><rect x="97.5768%" y="853" width="0.0188%" height="15" fill="rgb(221,194,54)" fg:x="10389" fg:w="2"/><text x="97.8268%" y="863.50"></text></g><g><title>QuartzCore`layer_private_release(_CAMetalLayerPrivate*) (3 samples, 0.03%)</title><rect x="97.5956%" y="869" width="0.0282%" height="15" fill="rgb(213,92,11)" fg:x="10391" fg:w="3"/><text x="97.8456%" y="879.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="97.6331%" y="869" width="0.0188%" height="15" fill="rgb(229,162,46)" fg:x="10395" fg:w="2"/><text x="97.8831%" y="879.50"></text></g><g><title>libsystem_kernel.dylib`__ulock_wait2 (5 samples, 0.05%)</title><rect x="97.6613%" y="869" width="0.0470%" height="15" fill="rgb(214,111,36)" fg:x="10398" fg:w="5"/><text x="97.9113%" y="879.50"></text></g><g><title>QuartzCore`layer_private_present_impl(_CAMetalLayerPrivate*, CAMetalDrawable*, double, unsigned int) (139 samples, 1.31%)</title><rect x="96.4215%" y="885" width="1.3055%" height="15" fill="rgb(207,6,21)" fg:x="10266" fg:w="139"/><text x="96.6715%" y="895.50"></text></g><g><title>libsystem_platform.dylib`os_unfair_lock_lock (2 samples, 0.02%)</title><rect x="97.7083%" y="869" width="0.0188%" height="15" fill="rgb(213,127,38)" fg:x="10403" fg:w="2"/><text x="97.9583%" y="879.50"></text></g><g><title>QuartzCore`objc_msgSend$setInsertSeed: (2 samples, 0.02%)</title><rect x="97.7552%" y="885" width="0.0188%" height="15" fill="rgb(238,118,32)" fg:x="10408" fg:w="2"/><text x="98.0052%" y="895.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (7 samples, 0.07%)</title><rect x="97.7740%" y="885" width="0.0657%" height="15" fill="rgb(240,139,39)" fg:x="10410" fg:w="7"/><text x="98.0240%" y="895.50"></text></g><g><title>IOSurface`_ioSurfaceEventNotificationCallback2 (174 samples, 1.63%)</title><rect x="96.2149%" y="901" width="1.6343%" height="15" fill="rgb(235,10,37)" fg:x="10244" fg:w="174"/><text x="96.4649%" y="911.50"></text></g><g><title>QuartzCore`invocation function for block in layer_private_present(_CAMetalLayerPrivate*, CAMetalDrawable*, double, double, unsigned int) (2 samples, 0.02%)</title><rect x="97.8492%" y="901" width="0.0188%" height="15" fill="rgb(249,171,38)" fg:x="10418" fg:w="2"/><text x="98.0992%" y="911.50"></text></g><g><title>libsystem_blocks.dylib`_call_dispose_helpers_excp (6 samples, 0.06%)</title><rect x="97.8961%" y="885" width="0.0564%" height="15" fill="rgb(242,144,32)" fg:x="10423" fg:w="6"/><text x="98.1461%" y="895.50"></text></g><g><title>QuartzCore`-[CAMetalDrawable dealloc] (6 samples, 0.06%)</title><rect x="97.8961%" y="869" width="0.0564%" height="15" fill="rgb(217,117,21)" fg:x="10423" fg:w="6"/><text x="98.1461%" y="879.50"></text></g><g><title>IOSurface`-[IOSurfaceSharedEvent dealloc] (5 samples, 0.05%)</title><rect x="97.9055%" y="853" width="0.0470%" height="15" fill="rgb(249,87,1)" fg:x="10424" fg:w="5"/><text x="98.1555%" y="863.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_port_mod_refs_trap (5 samples, 0.05%)</title><rect x="97.9055%" y="837" width="0.0470%" height="15" fill="rgb(248,196,48)" fg:x="10424" fg:w="5"/><text x="98.1555%" y="847.50"></text></g><g><title>IOKit`_IODispatchCalloutWithDispatch (187 samples, 1.76%)</title><rect x="96.2055%" y="933" width="1.7564%" height="15" fill="rgb(251,206,33)" fg:x="10243" fg:w="187"/><text x="96.4555%" y="943.50"></text></g><g><title>IOKit`IODispatchCalloutFromCFMessage (187 samples, 1.76%)</title><rect x="96.2055%" y="917" width="1.7564%" height="15" fill="rgb(232,141,28)" fg:x="10243" fg:w="187"/><text x="96.4555%" y="927.50"></text></g><g><title>libsystem_blocks.dylib`_Block_release (10 samples, 0.09%)</title><rect x="97.8679%" y="901" width="0.0939%" height="15" fill="rgb(209,167,14)" fg:x="10420" fg:w="10"/><text x="98.1179%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (31 samples, 0.29%)</title><rect x="97.9619%" y="933" width="0.2912%" height="15" fill="rgb(225,11,50)" fg:x="10430" fg:w="31"/><text x="98.2119%" y="943.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (31 samples, 0.29%)</title><rect x="97.9619%" y="917" width="0.2912%" height="15" fill="rgb(209,50,20)" fg:x="10430" fg:w="31"/><text x="98.2119%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (29 samples, 0.27%)</title><rect x="97.9807%" y="901" width="0.2724%" height="15" fill="rgb(212,17,46)" fg:x="10432" fg:w="29"/><text x="98.2307%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (2 samples, 0.02%)</title><rect x="98.2530%" y="933" width="0.0188%" height="15" fill="rgb(216,101,39)" fg:x="10461" fg:w="2"/><text x="98.5030%" y="943.50"></text></g><g><title>libdispatch.dylib`dispatch_mig_server (224 samples, 2.10%)</title><rect x="96.1867%" y="949" width="2.1039%" height="15" fill="rgb(212,228,48)" fg:x="10241" fg:w="224"/><text x="96.4367%" y="959.50">l..</text></g><g><title>libsystem_kernel.dylib`mig_reply_setup (2 samples, 0.02%)</title><rect x="98.2718%" y="933" width="0.0188%" height="15" fill="rgb(250,6,50)" fg:x="10463" fg:w="2"/><text x="98.5218%" y="943.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (12 samples, 0.11%)</title><rect x="98.2906%" y="949" width="0.1127%" height="15" fill="rgb(250,160,48)" fg:x="10465" fg:w="12"/><text x="98.5406%" y="959.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (13 samples, 0.12%)</title><rect x="98.4221%" y="949" width="0.1221%" height="15" fill="rgb(244,216,33)" fg:x="10479" fg:w="13"/><text x="98.6721%" y="959.50"></text></g><g><title>libdispatch.dylib`_dispatch_client_callout (2,297 samples, 21.57%)</title><rect x="76.9794%" y="965" width="21.5742%" height="15" fill="rgb(207,157,5)" fg:x="8196" fg:w="2297"/><text x="77.2294%" y="975.50">libdispatch.dylib`_dispatch_client..</text></g><g><title>libdispatch.dylib`_dispatch_source_invoke (2,329 samples, 21.87%)</title><rect x="76.7071%" y="1013" width="21.8747%" height="15" fill="rgb(228,199,8)" fg:x="8167" fg:w="2329"/><text x="76.9571%" y="1023.50">libdispatch.dylib`_dispatch_source_..</text></g><g><title>libdispatch.dylib`_dispatch_source_latch_and_call (2,320 samples, 21.79%)</title><rect x="76.7916%" y="997" width="21.7902%" height="15" fill="rgb(227,80,20)" fg:x="8176" fg:w="2320"/><text x="77.0416%" y="1007.50">libdispatch.dylib`_dispatch_source..</text></g><g><title>libdispatch.dylib`_dispatch_continuation_pop (2,316 samples, 21.75%)</title><rect x="76.8292%" y="981" width="21.7526%" height="15" fill="rgb(222,9,33)" fg:x="8180" fg:w="2316"/><text x="77.0792%" y="991.50">libdispatch.dylib`_dispatch_contin..</text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="98.5630%" y="965" width="0.0188%" height="15" fill="rgb(239,44,28)" fg:x="10494" fg:w="2"/><text x="98.8130%" y="975.50"></text></g><g><title>libdispatch.dylib`_dispatch_unote_resume_direct (3 samples, 0.03%)</title><rect x="98.5912%" y="1013" width="0.0282%" height="15" fill="rgb(249,187,43)" fg:x="10497" fg:w="3"/><text x="98.8412%" y="1023.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_serial_drain (4,203 samples, 39.48%)</title><rect x="59.1622%" y="1029" width="39.4759%" height="15" fill="rgb(216,141,28)" fg:x="6299" fg:w="4203"/><text x="59.4122%" y="1039.50">libdispatch.dylib`_dispatch_lane_serial_drain</text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::releaseUntil (6 samples, 0.06%)</title><rect x="98.6851%" y="997" width="0.0564%" height="15" fill="rgb(230,154,53)" fg:x="10507" fg:w="6"/><text x="98.9351%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_pop (13 samples, 0.12%)</title><rect x="98.6381%" y="1029" width="0.1221%" height="15" fill="rgb(227,82,4)" fg:x="10502" fg:w="13"/><text x="98.8881%" y="1039.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (10 samples, 0.09%)</title><rect x="98.6663%" y="1013" width="0.0939%" height="15" fill="rgb(220,107,16)" fg:x="10505" fg:w="10"/><text x="98.9163%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="98.7414%" y="997" width="0.0188%" height="15" fill="rgb(207,187,2)" fg:x="10513" fg:w="2"/><text x="98.9914%" y="1007.50"></text></g><g><title>libdispatch.dylib`_dispatch_last_resort_autorelease_pool_push (15 samples, 0.14%)</title><rect x="98.7602%" y="1029" width="0.1409%" height="15" fill="rgb(210,162,52)" fg:x="10515" fg:w="15"/><text x="99.0102%" y="1039.50"></text></g><g><title>libobjc.A.dylib`AutoreleasePoolPage::push (10 samples, 0.09%)</title><rect x="98.8072%" y="1013" width="0.0939%" height="15" fill="rgb(217,216,49)" fg:x="10520" fg:w="10"/><text x="99.0572%" y="1023.50"></text></g><g><title>libobjc.A.dylib`objc_autoreleasePoolPop (5 samples, 0.05%)</title><rect x="98.9105%" y="1029" width="0.0470%" height="15" fill="rgb(218,146,49)" fg:x="10531" fg:w="5"/><text x="99.1605%" y="1039.50"></text></g><g><title>libdispatch.dylib`_dispatch_lane_invoke (4,255 samples, 39.96%)</title><rect x="59.0025%" y="1045" width="39.9643%" height="15" fill="rgb(216,55,40)" fg:x="6282" fg:w="4255"/><text x="59.2525%" y="1055.50">libdispatch.dylib`_dispatch_lane_invoke</text></g><g><title>libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh (4,267 samples, 40.08%)</title><rect x="58.9180%" y="1061" width="40.0770%" height="15" fill="rgb(208,196,21)" fg:x="6273" fg:w="4267"/><text x="59.1680%" y="1071.50">libdispatch.dylib`_dispatch_root_queue_drain_deferred_wlh</text></g><g><title>libdispatch.dylib`_dispatch_source_wakeup (6 samples, 0.06%)</title><rect x="98.9950%" y="1061" width="0.0564%" height="15" fill="rgb(242,117,42)" fg:x="10540" fg:w="6"/><text x="99.2450%" y="1071.50"></text></g><g><title>libdispatch.dylib`_os_object_release_internal_n (2 samples, 0.02%)</title><rect x="99.0514%" y="1061" width="0.0188%" height="15" fill="rgb(210,11,23)" fg:x="10546" fg:w="2"/><text x="99.3014%" y="1071.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="99.0702%" y="1061" width="0.0376%" height="15" fill="rgb(217,110,2)" fg:x="10548" fg:w="4"/><text x="99.3202%" y="1071.50"></text></g><g><title>libsystem_pthread.dylib`start_wqthread (5,852 samples, 54.96%)</title><rect x="44.1721%" y="1109" width="54.9638%" height="15" fill="rgb(229,77,54)" fg:x="4703" fg:w="5852"/><text x="44.4221%" y="1119.50">libsystem_pthread.dylib`start_wqthread</text></g><g><title>libsystem_pthread.dylib`_pthread_wqthread (4,358 samples, 40.93%)</title><rect x="58.2042%" y="1093" width="40.9317%" height="15" fill="rgb(218,53,16)" fg:x="6197" fg:w="4358"/><text x="58.4542%" y="1103.50">libsystem_pthread.dylib`_pthread_wqthread</text></g><g><title>libdispatch.dylib`_dispatch_workloop_worker_thread (4,350 samples, 40.86%)</title><rect x="58.2793%" y="1077" width="40.8566%" height="15" fill="rgb(215,38,13)" fg:x="6205" fg:w="4350"/><text x="58.5293%" y="1087.50">libdispatch.dylib`_dispatch_workloop_worker_thread</text></g><g><title>libsystem_pthread.dylib`___chkstk_darwin (3 samples, 0.03%)</title><rect x="99.1077%" y="1061" width="0.0282%" height="15" fill="rgb(235,42,18)" fg:x="10552" fg:w="3"/><text x="99.3577%" y="1071.50"></text></g><g><title>CoreFoundation`_CFRelease (2 samples, 0.02%)</title><rect x="99.1829%" y="981" width="0.0188%" height="15" fill="rgb(219,66,54)" fg:x="10560" fg:w="2"/><text x="99.4329%" y="991.50"></text></g><g><title>CoreFoundation`CFRunLoopTimerSetNextFireDate (3 samples, 0.03%)</title><rect x="99.2204%" y="949" width="0.0282%" height="15" fill="rgb(222,205,4)" fg:x="10564" fg:w="3"/><text x="99.4704%" y="959.50"></text></g><g><title>SkyLight`CGSConnectionRegistryCheckConnectionID (2 samples, 0.02%)</title><rect x="99.3238%" y="901" width="0.0188%" height="15" fill="rgb(227,213,46)" fg:x="10575" fg:w="2"/><text x="99.5738%" y="911.50"></text></g><g><title>libc++.1.dylib`std::__1::mutex::lock (2 samples, 0.02%)</title><rect x="99.3238%" y="885" width="0.0188%" height="15" fill="rgb(250,145,42)" fg:x="10575" fg:w="2"/><text x="99.5738%" y="895.50"></text></g><g><title>libsystem_pthread.dylib`pthread_mutex_lock (2 samples, 0.02%)</title><rect x="99.3238%" y="869" width="0.0188%" height="15" fill="rgb(219,15,2)" fg:x="10575" fg:w="2"/><text x="99.5738%" y="879.50"></text></g><g><title>SkyLight`invocation function for block in CGSGetKnownConnectionByID(unsigned int) (2 samples, 0.02%)</title><rect x="99.3425%" y="885" width="0.0188%" height="15" fill="rgb(231,181,52)" fg:x="10577" fg:w="2"/><text x="99.5925%" y="895.50"></text></g><g><title>Foundation`-[NSConcreteMapTable objectForKey:] (2 samples, 0.02%)</title><rect x="99.3425%" y="869" width="0.0188%" height="15" fill="rgb(235,1,42)" fg:x="10577" fg:w="2"/><text x="99.5925%" y="879.50"></text></g><g><title>Foundation`startReadARCWeakAutoreleasingAt (2 samples, 0.02%)</title><rect x="99.3425%" y="853" width="0.0188%" height="15" fill="rgb(249,88,27)" fg:x="10577" fg:w="2"/><text x="99.5925%" y="863.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeak (2 samples, 0.02%)</title><rect x="99.3425%" y="837" width="0.0188%" height="15" fill="rgb(235,145,16)" fg:x="10577" fg:w="2"/><text x="99.5925%" y="847.50"></text></g><g><title>libobjc.A.dylib`objc_loadWeakRetained (2 samples, 0.02%)</title><rect x="99.3425%" y="821" width="0.0188%" height="15" fill="rgb(237,114,19)" fg:x="10577" fg:w="2"/><text x="99.5925%" y="831.50"></text></g><g><title>SkyLight`CGSConnectionByID (5 samples, 0.05%)</title><rect x="99.3238%" y="917" width="0.0470%" height="15" fill="rgb(238,51,50)" fg:x="10575" fg:w="5"/><text x="99.5738%" y="927.50"></text></g><g><title>SkyLight`CGSGetKnownConnectionByID(unsigned int) (3 samples, 0.03%)</title><rect x="99.3425%" y="901" width="0.0282%" height="15" fill="rgb(205,194,25)" fg:x="10577" fg:w="3"/><text x="99.5925%" y="911.50"></text></g><g><title>SkyLight`(anonymous namespace)::LogRingBuffer::push_back(std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator (2 samples, 0.02%)</title><rect x="99.3801%" y="901" width="0.0188%" height="15" fill="rgb(215,203,17)" fg:x="10581" fg:w="2"/><text x="99.6301%" y="911.50"></text></g><g><title>libc++.1.dylib`std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;&amp; std::__1::basic_string&lt;char, std::__1::char_traits&lt;char&gt;, std::__1::allocator&lt;char&gt;&gt;::__assign_no_alias&lt;true&gt; (2 samples, 0.02%)</title><rect x="99.3801%" y="885" width="0.0188%" height="15" fill="rgb(233,112,49)" fg:x="10581" fg:w="2"/><text x="99.6301%" y="895.50"></text></g><g><title>libc+ (2 samples, 0.02%)</title><rect x="99.3801%" y="869" width="0.0188%" height="15" fill="rgb(241,130,26)" fg:x="10581" fg:w="2"/><text x="99.6301%" y="879.50"></text></g><g><title>libsystem_c.dylib`__sfvwrite (2 samples, 0.02%)</title><rect x="99.4177%" y="821" width="0.0188%" height="15" fill="rgb(252,223,19)" fg:x="10585" fg:w="2"/><text x="99.6677%" y="831.50"></text></g><g><title>libsystem_c.dylib`__vfprintf (6 samples, 0.06%)</title><rect x="99.4083%" y="837" width="0.0564%" height="15" fill="rgb(211,95,25)" fg:x="10584" fg:w="6"/><text x="99.6583%" y="847.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="99.4365%" y="821" width="0.0282%" height="15" fill="rgb(251,182,27)" fg:x="10587" fg:w="3"/><text x="99.6865%" y="831.50"></text></g><g><title>SkyLight`CGSEventLogEvent (11 samples, 0.10%)</title><rect x="99.3707%" y="917" width="0.1033%" height="15" fill="rgb(238,24,4)" fg:x="10580" fg:w="11"/><text x="99.6207%" y="927.50"></text></g><g><title>SkyLight`(anonymous namespace)::MouseEventLog::getLogString (7 samples, 0.07%)</title><rect x="99.4083%" y="901" width="0.0657%" height="15" fill="rgb(224,220,25)" fg:x="10584" fg:w="7"/><text x="99.6583%" y="911.50"></text></g><g><title>SkyLight`(anonymous namespace)::EventLog::getLogString (7 samples, 0.07%)</title><rect x="99.4083%" y="885" width="0.0657%" height="15" fill="rgb(239,133,26)" fg:x="10584" fg:w="7"/><text x="99.6583%" y="895.50"></text></g><g><title>libsystem_c.dylib`snprintf (7 samples, 0.07%)</title><rect x="99.4083%" y="869" width="0.0657%" height="15" fill="rgb(211,94,48)" fg:x="10584" fg:w="7"/><text x="99.6583%" y="879.50"></text></g><g><title>libsystem_c.dylib`_vsnprintf (7 samples, 0.07%)</title><rect x="99.4083%" y="853" width="0.0657%" height="15" fill="rgb(239,87,6)" fg:x="10584" fg:w="7"/><text x="99.6583%" y="863.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::release (6 samples, 0.06%)</title><rect x="99.4740%" y="901" width="0.0564%" height="15" fill="rgb(227,62,0)" fg:x="10591" fg:w="6"/><text x="99.7240%" y="911.50"></text></g><g><title>SkyLight`CGSDatagramReadStream::VMData::~VMData (6 samples, 0.06%)</title><rect x="99.4740%" y="885" width="0.0564%" height="15" fill="rgb(211,226,4)" fg:x="10591" fg:w="6"/><text x="99.7240%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`_kernelrpc_mach_vm_deallocate_trap (6 samples, 0.06%)</title><rect x="99.4740%" y="869" width="0.0564%" height="15" fill="rgb(253,38,52)" fg:x="10591" fg:w="6"/><text x="99.7240%" y="879.50"></text></g><g><title>SkyLight`CGSEventReclaimObjects (2 samples, 0.02%)</title><rect x="99.5304%" y="869" width="0.0188%" height="15" fill="rgb(229,126,40)" fg:x="10597" fg:w="2"/><text x="99.7804%" y="879.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda5&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (2 samples, 0.02%)</title><rect x="99.5867%" y="773" width="0.0188%" height="15" fill="rgb(229,165,44)" fg:x="10603" fg:w="2"/><text x="99.8367%" y="783.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (2 samples, 0.02%)</title><rect x="99.5867%" y="757" width="0.0188%" height="15" fill="rgb(247,95,47)" fg:x="10603" fg:w="2"/><text x="99.8367%" y="767.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (2 samples, 0.02%)</title><rect x="99.5867%" y="741" width="0.0188%" height="15" fill="rgb(216,140,30)" fg:x="10603" fg:w="2"/><text x="99.8367%" y="751.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda5&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (2 samples, 0.02%)</title><rect x="99.5867%" y="725" width="0.0188%" height="15" fill="rgb(246,214,8)" fg:x="10603" fg:w="2"/><text x="99.8367%" y="735.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.03%)</title><rect x="99.6055%" y="661" width="0.0282%" height="15" fill="rgb(227,224,15)" fg:x="10605" fg:w="3"/><text x="99.8555%" y="671.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (3 samples, 0.03%)</title><rect x="99.6055%" y="645" width="0.0282%" height="15" fill="rgb(233,175,4)" fg:x="10605" fg:w="3"/><text x="99.8555%" y="655.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;(anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&gt;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;&amp;)::&apos;lambda&apos;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create(void const*, unsigned long)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;((anonymous namespace)::MessageInitDataCustomSerializationBasis::Create (3 samples, 0.03%)</title><rect x="99.6055%" y="629" width="0.0282%" height="15" fill="rgb(221,66,45)" fg:x="10605" fg:w="3"/><text x="99.8555%" y="639.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (4 samples, 0.04%)</title><rect x="99.6055%" y="693" width="0.0376%" height="15" fill="rgb(221,178,18)" fg:x="10605" fg:w="4"/><text x="99.8555%" y="703.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (4 samples, 0.04%)</title><rect x="99.6055%" y="677" width="0.0376%" height="15" fill="rgb(213,81,29)" fg:x="10605" fg:w="4"/><text x="99.8555%" y="687.50"></text></g><g><title>SkyLight`SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::__invoke(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (5 samples, 0.05%)</title><rect x="99.6055%" y="773" width="0.0470%" height="15" fill="rgb(220,89,49)" fg:x="10605" fg:w="5"/><text x="99.8555%" y="783.50"></text></g><g><title>SkyLight`bool SLS::TokenizedCoding::Decoder::invoke_versioned&lt;bool SLS::TokenizedCoding::Decoder::decode_bytes&lt;void (void const*, unsigned long) block_pointer&gt;(unsigned long, void (void const*, unsigned long) block_pointer&amp;&amp;)::&apos;lambda&apos;(void (void const*, unsigned long) block_pointer&amp;)&gt;(void  (5 samples, 0.05%)</title><rect x="99.6055%" y="757" width="0.0470%" height="15" fill="rgb(227,60,33)" fg:x="10605" fg:w="5"/><text x="99.8555%" y="767.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_bytes_b(unsigned long, void  (5 samples, 0.05%)</title><rect x="99.6055%" y="741" width="0.0470%" height="15" fill="rgb(205,113,12)" fg:x="10605" fg:w="5"/><text x="99.8555%" y="751.50"></text></g><g><title>SkyLight`invocation function for block in SLEventFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt; const* SLEventGetFieldDecodeDescriptor&lt;SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;)::&apos;lambda7&apos;(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&amp;)::operator()(SLSEventRecord*, unsigned int, SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (5 samples, 0.05%)</title><rect x="99.6055%" y="725" width="0.0470%" height="15" fill="rgb(211,32,1)" fg:x="10605" fg:w="5"/><text x="99.8555%" y="735.50"></text></g><g><title>SkyLight`SLEventAuthenticationMessageCreateWithData (5 samples, 0.05%)</title><rect x="99.6055%" y="709" width="0.0470%" height="15" fill="rgb(246,2,12)" fg:x="10605" fg:w="5"/><text x="99.8555%" y="719.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::with_slice_b(unsigned long, void (SLS::TokenizedCoding::VersionedDecoder&lt; (11 samples, 0.10%)</title><rect x="99.5680%" y="821" width="0.1033%" height="15" fill="rgb(243,37,27)" fg:x="10601" fg:w="11"/><text x="99.8180%" y="831.50"></text></g><g><title>SkyLight`invocation function for block in SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (11 samples, 0.10%)</title><rect x="99.5680%" y="805" width="0.1033%" height="15" fill="rgb(248,211,31)" fg:x="10601" fg:w="11"/><text x="99.8180%" y="815.50"></text></g><g><title>SkyLight`invocation function for block in auto bool SLS::TokenizedCoding::Decoder::decode_with_manager&lt;_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&gt;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;&amp;)::&apos;lambda&apos;(_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int)::$_0&amp;)::operator()&lt;SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;&gt;(_SLEventRecordCreateWithBytesModern (11 samples, 0.10%)</title><rect x="99.5680%" y="789" width="0.1033%" height="15" fill="rgb(242,146,47)" fg:x="10601" fg:w="11"/><text x="99.8180%" y="799.50"></text></g><g><title>SkyLight`SLEventRecordSetIntegerValue(SLSEventRecord*, CGEventField, long long) (2 samples, 0.02%)</title><rect x="99.6525%" y="773" width="0.0188%" height="15" fill="rgb(206,70,20)" fg:x="10610" fg:w="2"/><text x="99.9025%" y="783.50"></text></g><g><title>SkyLight`event_datagram_handler(unsigned int, CGSDatagramType, void*, unsigned long, void*) (19 samples, 0.18%)</title><rect x="99.5304%" y="901" width="0.1785%" height="15" fill="rgb(215,10,51)" fg:x="10597" fg:w="19"/><text x="99.7804%" y="911.50"></text></g><g><title>SkyLight`CGSDecodeEventRecord (19 samples, 0.18%)</title><rect x="99.5304%" y="885" width="0.1785%" height="15" fill="rgb(243,178,53)" fg:x="10597" fg:w="19"/><text x="99.7804%" y="895.50"></text></g><g><title>SkyLight`_SLEventRecordCreateWithBytesModern(void const*, unsigned long, unsigned int) (17 samples, 0.16%)</title><rect x="99.5492%" y="869" width="0.1597%" height="15" fill="rgb(233,221,20)" fg:x="10599" fg:w="17"/><text x="99.7992%" y="879.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::VersionedDecoder&lt;(SLS::TokenizedCoding::Version)3&gt;::decode_with_manager_b(bool (SLS::TokenizedCoding::Token&lt;(SLS::TokenizedCoding::Version)3&gt;, SLS::TokenizedCoding::VersionedDecoder&lt; (16 samples, 0.15%)</title><rect x="99.5586%" y="853" width="0.1503%" height="15" fill="rgb(218,95,35)" fg:x="10600" fg:w="16"/><text x="99.8086%" y="863.50"></text></g><g><title>SkyLight`SLS::TokenizedCoding::ReadDataProvider::with_slice_b(unsigned long, void (std::__1::shared_ptr (15 samples, 0.14%)</title><rect x="99.5680%" y="837" width="0.1409%" height="15" fill="rgb(229,13,5)" fg:x="10601" fg:w="15"/><text x="99.8180%" y="847.50"></text></g><g><title>SkyLight`std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadDataProvider&gt; std::__1::allocate_shared[abi:nn180100]&lt;SLS::TokenizedCoding::ReadDataProvider, std::__1::allocator&lt;SLS::TokenizedCoding::ReadDataProvider&gt;, SLS::TokenizedCoding::DataProvider::scoper, std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadStorage&gt;, unsigned long&amp;, std::__1::optional&lt;unsigned long&gt;&amp;, void&gt;(std::__1::allocator&lt;SLS::TokenizedCoding::ReadDataProvider&gt; const&amp;, SLS::TokenizedCoding::DataProvider::scoper&amp;&amp;, std::__1::shared_ptr&lt;SLS::TokenizedCoding::ReadStorage&gt;&amp;&amp;, unsigned long&amp;, std::__1::optional (3 samples, 0.03%)</title><rect x="99.6807%" y="821" width="0.0282%" height="15" fill="rgb(252,164,30)" fg:x="10613" fg:w="3"/><text x="99.9307%" y="831.50"></text></g><g><title>SkyLight`std::__1::__shared_weak_count::__release_shared[abi:nn180100] (3 samples, 0.03%)</title><rect x="99.6807%" y="805" width="0.0282%" height="15" fill="rgb(232,68,36)" fg:x="10613" fg:w="3"/><text x="99.9307%" y="815.50"></text></g><g><title>SkyLight`CGSSnarfAndDispatchDatagrams (43 samples, 0.40%)</title><rect x="99.4740%" y="917" width="0.4039%" height="15" fill="rgb(219,59,54)" fg:x="10591" fg:w="43"/><text x="99.7240%" y="927.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (17 samples, 0.16%)</title><rect x="99.7182%" y="901" width="0.1597%" height="15" fill="rgb(250,92,33)" fg:x="10617" fg:w="17"/><text x="99.9682%" y="911.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (17 samples, 0.16%)</title><rect x="99.7182%" y="885" width="0.1597%" height="15" fill="rgb(229,162,54)" fg:x="10617" fg:w="17"/><text x="99.9682%" y="895.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (17 samples, 0.16%)</title><rect x="99.7182%" y="869" width="0.1597%" height="15" fill="rgb(244,114,52)" fg:x="10617" fg:w="17"/><text x="99.9682%" y="879.50"></text></g><g><title>HIToolbox`PullEventsFromWindowServerOnConnection(unsigned int, unsigned char, __CFMachPortBoost*) (72 samples, 0.68%)</title><rect x="99.2110%" y="965" width="0.6762%" height="15" fill="rgb(212,211,43)" fg:x="10563" fg:w="72"/><text x="99.4610%" y="975.50"></text></g><g><title>SkyLight`SLEventCreateNextEvent (63 samples, 0.59%)</title><rect x="99.2956%" y="949" width="0.5917%" height="15" fill="rgb(226,147,8)" fg:x="10572" fg:w="63"/><text x="99.5456%" y="959.50"></text></g><g><title>SkyLight`SLSGetNextEventRecordInternal (61 samples, 0.57%)</title><rect x="99.3144%" y="933" width="0.5729%" height="15" fill="rgb(226,23,13)" fg:x="10574" fg:w="61"/><text x="99.5644%" y="943.50"></text></g><g><title>HIToolbox`MessageHandler(__CFMachPort*, void*, long, void*) (75 samples, 0.70%)</title><rect x="99.2017%" y="981" width="0.7044%" height="15" fill="rgb(240,63,4)" fg:x="10562" fg:w="75"/><text x="99.4517%" y="991.50"></text></g><g><title>CoreFoundation`__CFRunLoopDoSource1 (81 samples, 0.76%)</title><rect x="99.1641%" y="1029" width="0.7608%" height="15" fill="rgb(221,1,32)" fg:x="10558" fg:w="81"/><text x="99.4141%" y="1039.50"></text></g><g><title>CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE1_PERFORM_FUNCTION__ (80 samples, 0.75%)</title><rect x="99.1735%" y="1013" width="0.7514%" height="15" fill="rgb(242,117,10)" fg:x="10559" fg:w="80"/><text x="99.4235%" y="1023.50"></text></g><g><title>CoreFoundation`__CFMachPortPerform (80 samples, 0.75%)</title><rect x="99.1735%" y="997" width="0.7514%" height="15" fill="rgb(249,172,44)" fg:x="10559" fg:w="80"/><text x="99.4235%" y="1007.50"></text></g><g><title>libobjc.A.dylib`objc_msgSend (2 samples, 0.02%)</title><rect x="99.9061%" y="981" width="0.0188%" height="15" fill="rgb(244,46,45)" fg:x="10637" fg:w="2"/><text x="100.1561%" y="991.50"></text></g><g><title>libdispatch.dylib`voucher_mach_msg_adopt (3 samples, 0.03%)</title><rect x="99.9249%" y="1013" width="0.0282%" height="15" fill="rgb(206,43,17)" fg:x="10639" fg:w="3"/><text x="100.1749%" y="1023.50"></text></g><g><title>libdispatch.dylib`_voucher_create_with_mach_voucher (2 samples, 0.02%)</title><rect x="99.9343%" y="997" width="0.0188%" height="15" fill="rgb(239,218,39)" fg:x="10640" fg:w="2"/><text x="100.1843%" y="1007.50"></text></g><g><title>all (10,647 samples, 100%)</title><rect x="0.0000%" y="1125" width="100.0000%" height="15" fill="rgb(208,169,54)" fg:x="0" fg:w="10647"/><text x="0.2500%" y="1135.50"></text></g><g><title>libsystem_pthread.dylib`thread_start (92 samples, 0.86%)</title><rect x="99.1359%" y="1109" width="0.8641%" height="15" fill="rgb(247,25,42)" fg:x="10555" fg:w="92"/><text x="99.3859%" y="1119.50"></text></g><g><title>libsystem_pthread.dylib`_pthread_start (92 samples, 0.86%)</title><rect x="99.1359%" y="1093" width="0.8641%" height="15" fill="rgb(226,23,31)" fg:x="10555" fg:w="92"/><text x="99.3859%" y="1103.50"></text></g><g><title>AppKit`_NSEventThread (92 samples, 0.86%)</title><rect x="99.1359%" y="1077" width="0.8641%" height="15" fill="rgb(247,16,28)" fg:x="10555" fg:w="92"/><text x="99.3859%" y="1087.50"></text></g><g><title>CoreFoundation`CFRunLoopRunSpecific (92 samples, 0.86%)</title><rect x="99.1359%" y="1061" width="0.8641%" height="15" fill="rgb(231,147,38)" fg:x="10555" fg:w="92"/><text x="99.3859%" y="1071.50"></text></g><g><title>CoreFoundation`__CFRunLoopRun (91 samples, 0.85%)</title><rect x="99.1453%" y="1045" width="0.8547%" height="15" fill="rgb(253,81,48)" fg:x="10556" fg:w="91"/><text x="99.3953%" y="1055.50"></text></g><g><title>CoreFoundation`__CFRunLoopServiceMachPort (8 samples, 0.08%)</title><rect x="99.9249%" y="1029" width="0.0751%" height="15" fill="rgb(249,222,43)" fg:x="10639" fg:w="8"/><text x="100.1749%" y="1039.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg (5 samples, 0.05%)</title><rect x="99.9530%" y="1013" width="0.0470%" height="15" fill="rgb(221,3,27)" fg:x="10642" fg:w="5"/><text x="100.2030%" y="1023.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg_overwrite (5 samples, 0.05%)</title><rect x="99.9530%" y="997" width="0.0470%" height="15" fill="rgb(228,180,5)" fg:x="10642" fg:w="5"/><text x="100.2030%" y="1007.50"></text></g><g><title>libsystem_kernel.dylib`mach_msg2_trap (5 samples, 0.05%)</title><rect x="99.9530%" y="981" width="0.0470%" height="15" fill="rgb(227,131,42)" fg:x="10642" fg:w="5"/><text x="100.2030%" y="991.50"></text></g></svg></svg>